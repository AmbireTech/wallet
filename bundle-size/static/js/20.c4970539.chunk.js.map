{"version":3,"sources":["resources/ramp.svg","resources/paytrie.svg","resources/transak.svg","resources/kriptomat.svg","resources/guardarian.svg","lib/popupHelper.js","components/Modals/GuardarianDepositProviderModal/useGuardarian.js","components/Modals/GuardarianDepositProviderModal/GuardarianDepositProviderModal.js","components/Wallet/Deposit/Providers/useProviders.js","components/Wallet/Deposit/Providers/Providers.js","components/Wallet/Deposit/Deposit.js","consts/specialAddresses.js","lib/assetMigrationDetector.js","consts/permittableCoins.js","components/Wallet/AssetsMigration/AssetsMigrationSelector.js","components/Wallet/AssetsMigration/AssetsMigrationPermitter.js","components/Wallet/AssetsMigration/AssetsMigrationNative.js","components/Wallet/AssetsMigration/AssetsMigration.js","components/Modals/AssetsMigrationModal/AssetsMigrationModal.js","components/Wallet/AssetsMigration/AssetsMigrationBanner.js"],"names":["popupCenter","url","title","w","h","dualScreenLeft","undefined","window","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","document","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","availWidth","left","top","newWindow","open","focus","OFF_RAMP_FIAT","label","value","icon","NETWORK_MAPPING","DEFAULT_CRYPTO","NATIVE_ADDRESS","repeat","useGuardarian","relayerURL","selectedNetwork","initMode","tokens","walletAddress","FIAT_CURRENCIES_URL","CRYPTO_CURRENCIES_URL","offRampFiats","addToast","useToasts","useState","network","setNetwork","from","setFrom","to","setTo","mode","setMode","amount","setAmount","data","cryptoCurrencies","setCryptoCurrencies","onRampFiats","setOnRampFiats","marketInfo","setMarketInfo","isLoading","estimateInfo","setEstimateInfo","cryptoList","useMemo","filter","t","networks","find","n","payment_methods","some","pm","withdrawal_enabled","map","ticker","logo_url","deposit_enabled","bt","address","toLowerCase","token_contract","fiatList","f","useEffect","fetchGet","then","error","message","catch","genMarketInfoUrl","useCallback","fromTo","unmounted","genEstimateUrl","unloaded","genTxnUrl","GuardarianDepositProviderModal","portfolio","hideModal","useModals","guardarian","sendTransactionLoading","setSendTransactionLoading","getCurrentTokenFromBalance","token","nt","validationMsg","marketData","userAmount","parseFloat","marketMin","min","marketMax","max","currToken","balance","switchMode","prevMode","buttons","clear","onClick","disabled","txn","redirect_url","format","e","id","className","placeholder","onInput","searchable","defaultValue","items","onChange","changeFrom","style","color","from_currency","estimated_exchange_rate","to_currency","changeTo","useProviders","setLoading","showModal","openPayTrie","a","prevState","rightSideLabels","ethereum","polygon","URL","parse","PAYTRIE_PARTNER_URL","search","query","addr","rightSideLabel","openKriptomat","kriptomatResponse","success","openRampNetwork","RampInstantSDK","hostAppName","hostLogoUrl","variant","swapAsset","userAddress","hostApiKey","RAMP_HOST_API_KEY","show","openTransak","transak","transakSDK","apiKey","TRANSAK_API_KEY","environment","TRANSAK_ENV","defaultCryptoCurrency","disableWalletAddressForm","themeColor","email","redirectURL","hostURL","location","origin","widgetHeight","widgetWidth","init","on","ALL_EVENTS","console","log","EVENTS","TRANSAK_ORDER_SUCCESSFUL","orderData","close","openGuardarian","Providers","networkDetails","providers","logo","GUARDARIAN_LOGO","name","type","fees","limits","currencies","KRIPTOMAT_LOGO","RAMP_LOGO","PAYTRIE_LOGO","TRANSAK_LOGO","shouldBeDisabled","includes","src","alt","Deposit","selectedAcc","accounts","addRequest","useStorage","qrCodeUrl","setQrCodeUrl","generateQRCode","QRCode","toDataURL","quality","margin","size","TextInput","nativeAssetSymbol","copy","hide","backgroundImage","AssetsMigrationBanner","selectedAccount","linkMargin","ZERO_ADDRESS","assetMigrationDetector","networkId","account","VELCRO_API_ENDPOINT","ZAPPER_API_KEY","velcroResponse","signer_","products","customTokens","assets","symbol","decimals","urlCustomTokens","JSON","stringify","finalResponse","tokenImageUrl","native","availableBalance","balanceRaw","balanceUSD","rate","err","Error","Promise","resolve","PERMIT_TYPE_2612","PERMIT_TYPE_DAI","EIP712DomainWithVersion","EIP712DomainWithoutNameNorVersion","EIP712Domain","EIP712DomainWithSalt","PERMITTABLE_COINS","version","domainType","permitType","nonceFunction","salt","ERC20PermittableInterface","Interface","AssetsMigrationSelector","signerAccount","identityAccount","setIsSelectionConfirmed","setStep","setModalButtons","setSelectedTokensWithAllowance","setGasSpeed","setStepperSteps","hidden","selectableTokens","setSelectableTokens","selectableTokensUserInputs","setSelectableTokensUserInputs","setIsLoading","failedImg","setFailedImg","gasData","setGasData","suggestedGasTokens","setSuggestedGasTokens","estimatedGasFees","setEstimatedGasFees","selectedGasSpeed","setSelectedGasSpeed","tokensAllowances","setTokenAllowances","isAddCustomTokenFormShown","setIsAddCustomTokenFormShown","isCustomTokenPending","setIsCustomTokenPending","customTokenAddress","setCustomTokenAddress","customTokenError","setCustomTokenError","customTokenInput","useRef","isPermittable","chainId","current","updateSelectableTokenUserInputs","callback","index","findIndex","updated","slice","toggleTokenSelection","minHumanAmount","old","selected","currentHumanAmount","humanAmount","BigNumber","multipliedBy","toFixed","addCustomToken","provider","getProvider","ethers","utils","isAddress","tokenContract","Contract","symbolPromise","decimalsPromise","allowancePromise","allowance","availableSignerBalancePromise","balanceOf","all","promises","signerBalance","toNumber","toString","selectedAmount","div","gt","permittable","canCoverGasFees","speed","isEnoughToCoverFees","ifSelected","ifNotSelected","length","getSuggestedGasTokensOfSpeed","minimumSelectionAmount","getSuggestedGasTokensAcceptableSpeeds","GAS_SPEEDS","consolidatedSelectableTokens","st","confirmTokenSelection","tokensToMigrate","consolidatedTokens","permitsCount","isLessThan","permittableTransfersCount","regularTransfersCount","nativeTransfersCount","adjustedApprovalCost","migrationTransactionsConsumption","signerTransactionsConsumption","nativeRate","gasFeeAssets","gasFees","forEach","gasPrice","maxPriorityFeePerGas","migrationTransactionsCost","migrationTransactionsCostUSD","signerTransactionsCost","signerTransactionsCostUSD","possibleFeeTokens","feeTokens","ft","usableTokens","pt","push","fromPortfolio","usableFeeTokens","identityBalanceUSD","selectedAmountUSD","identityAssets","identityFeeAsset","it","warn","isGreaterThan","minus","dividedBy","permittableData","p","allowanceResults","small","onAssetAmountChange","val","item","endsWith","split","isNaN","newHumanAmount","comparedTo","replace","steps","tokensTitleActions","join","AmbireLoading","sort","b","draggable","onError","failed","checked","ref","Object","values","AssetsMigrationPermitter","signer","signerExtra","selectedTokensWithAllowance","setError","gasSpeed","tokensPermissions","setTokensPermissions","tokensTransfers","setTokensTransfers","tokensPendingStatus","setTokensPendingStatus","hasRefusedOnce","setHasRefusedOnce","lastRefusalError","setLastRefusalError","hasCorrectAccountAndChainId","setHasCorrectAccountAndChainId","currentGasPrice","setCurrentGasPrice","wallet","setWallet","getConsolidatedTokensPure","remapped","signing","signature","sent","pending","checkWalletConnection","isConnected","connected","readyTokensCount","count","permitToken","permittableToken","tokenToMigrate","nonces","nonce","tokenName","ERC2612PermitMessage","owner","spender","deadline","allowed","holder","expiry","domain","verifyingContract","_signTypedData","code","result","rsv","r","s","v","parseInt","txData","encodeFunctionData","sendToken","waitForRcpt","sendData","transferResult","sendTransaction","gasLimit","rcpt","wait","cancelMigration","completeMigration","gte","Math","random","transferData","getWallet","nextTokenToAsk","signed","setTimeout","initialTokensTransfers","Button","AssetsMigrationNative","nativeTokenData","hasERC20Tokens","setBeforeCloseModalHandler","hasMigratedNative","setHasMigratedNative","isMigrationPending","setIsMigrationPending","nativeAmount","setNativeAmount","maxRecommendedAmount","setMaxRecommendedAmount","transactionEstimationCost","setTransactionEstimationCost","nativeHumanAmount","setNativeHumanAmount","hasModifiedAmount","setHasModifiedAmount","continueMigration","erc20TransfersCount","migrateNative","updateAmount","nativeTransactionCost","transfersTransactionCost","recommendedBN","onAmountChange","initialHumanAmount","getDisplayedButtons","AssetsMigration","setModalSteps","setNativeTokenData","setHasERC20Tokens","isSelectionConfirmed","step","stepperSteps","showCloseConfirmation","setShowCloseConfirmation","currentAccount","stepIndex","beforeCloseHandle","AssetsMigrationModal","modalButtons","modalSteps","currentStep","noLabels","closeable","hasSignerAssets","setHasSignerAssets","migrationMessageSeen","setMigrationMessageSeen","key","migrationMessageSeenStorage","setMigrationMessageSeenStorage","closeMigrationMessage","relevantAssets","checkSignerAssets"],"mappings":"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","file":"static/js/20.c4970539.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ramp.26a99e26.svg\";","export default __webpack_public_path__ + \"static/media/paytrie.338f7c3b.svg\";","export default __webpack_public_path__ + \"static/media/transak.e01c0265.svg\";","export default __webpack_public_path__ + \"static/media/kriptomat.4c8e4fc1.svg\";","export default __webpack_public_path__ + \"static/media/guardarian.5b666fba.svg\";","export const popupCenter = ({ url, title, w, h }) => {\n\t// Fixes dual-screen position                             Most browsers      Firefox\n\tconst dualScreenLeft =\n\t\twindow.screenLeft !== undefined ? window.screenLeft : window.screenX\n\tconst dualScreenTop =\n\t\twindow.screenTop !== undefined ? window.screenTop : window.screenY\n\n\tconst width = window.innerWidth\n\t\t? window.innerWidth\n\t\t: document.documentElement.clientWidth\n\t\t? document.documentElement.clientWidth\n\t\t: window.screen.width\n\tconst height = window.innerHeight\n\t\t? window.innerHeight\n\t\t: document.documentElement.clientHeight\n\t\t? document.documentElement.clientHeight\n\t\t: window.screen.height\n\n\tconst systemZoom = width / window.screen.availWidth\n\tconst left = (width - w) / 2 / systemZoom + dualScreenLeft\n\tconst top = (height - h) / 2 / systemZoom + dualScreenTop\n\tconst newWindow = window.open(\n\t\turl,\n\t\ttitle,\n\t\t`\n\t\ttoolbar=no,scrollbars=no,resizable=no\n\t\twidth=${w / systemZoom}, \n\t\theight=${h / systemZoom}, \n\t\ttop=${top}, \n\t\tleft=${left},\n\t\t`\n\t)\n\n\tif (window.focus) newWindow.focus()\n}","import { useState, useEffect, useCallback, useMemo } from 'react'\nimport { fetchGet } from 'lib/fetch';\nimport { useToasts } from 'hooks/toasts'\n\nconst OFF_RAMP_FIAT = [\n    {\n        label: 'EUR',\n        value: 'EUR',\n        icon: `https://changenow.io/images/sprite/currencies/eur.svg`\n    },\n    {\n        label: 'GBP',\n        value: 'GBP',\n        icon: `https://changenow.io/images/sprite/currencies/gbp.svg`\n    },\n    {\n        label: 'USD',\n        value: 'USD',\n        icon: `https://changenow.io/images/sprite/currencies/usd.svg`\n    }\n]\n\nconst NETWORK_MAPPING = {\n    'ethereum': 'ETH',\n    'binance-smart-chain': 'BSC',\n    'polygon': 'MATIC',\n    'fantom': 'FTM',\n    'avalanche': 'AVAX'\n}\n\nconst DEFAULT_CRYPTO = {\n    'ethereum': 'ETH',\n    'binance-smart-chain': 'BNB',\n    'polygon': 'MATIC',\n    'fantom': 'FTM',\n    'avalanche': 'AVAX'\n\n}\n\nconst NATIVE_ADDRESS = '0x'+'0'.repeat(40)\n\nconst useGuardarian = function({ relayerURL, selectedNetwork, initMode, tokens, walletAddress }) {\n    const FIAT_CURRENCIES_URL = `${relayerURL}/guardarian/currencies/fiat`\n    const CRYPTO_CURRENCIES_URL = `${relayerURL}/guardarian/currencies/crypto`\n    const offRampFiats = OFF_RAMP_FIAT\n    const { addToast } = useToasts()\n    const [network, setNetwork] = useState(selectedNetwork)\n    const [from, setFrom] = useState('')\n    const [to, setTo] = useState('')\n    const [mode, setMode] = useState(initMode)\n    const [amount, setAmount] = useState('50')\n\n    const [cryptoCurrencies, setCryptoCurrencies] = useState({data: []})\n    const [onRampFiats, setOnRampFiats] = useState({data: []})\n\n    const [marketInfo, setMarketInfo] = useState(null)\n    const [estimateInfo, setEstimateInfo] = useState({data: null, isLoading: false})\n\n    const cryptoList = useMemo(() => {\n        if (mode === 'buy') {\n            return {\n                data: cryptoCurrencies?.data?.filter(t => t.networks.find(n => n.network === NETWORK_MAPPING[network] && n.payment_methods.some(pm => pm.withdrawal_enabled\n                ))).map(t => ({\n                    label: t.ticker,\n                    value: t.ticker ,\n                    icon: t.logo_url\n                })).filter(t => t.value) || [],\n                isLoading: cryptoCurrencies?.isLoading\n            }\n        } else if (mode === 'sell') {\n            return {\n                data: cryptoCurrencies?.data?.filter(t => t.networks.find(n => n.network === NETWORK_MAPPING[network] && n.payment_methods.some(pm => pm.deposit_enabled) && tokens.find(bt => bt?.address?.toLowerCase() === n?.token_contract?.toLowerCase() || (bt?.address === NATIVE_ADDRESS && n?.token_contract === null))))\n                    .map(t => ({\n                        label: t.ticker,\n                        value: t.ticker ,\n                        icon: t.logo_url\n                    })).filter(t => t.value) || [],\n                isLoading: cryptoCurrencies.isLoading\n            }\n        }\n    }, [mode, cryptoCurrencies, network, tokens])\n\n    const fiatList = useMemo(() => {\n        if (mode === 'buy') {\n            return {\n                data: onRampFiats?.data?.map(f => ({\n                    label: f.ticker,\n                    value: f.ticker,\n                    icon: f.logo_url || `https://changenow.io/images/sprite/currencies/${f?.ticker?.toLowerCase()}.svg`\n                })) || [],\n                isLoading: onRampFiats?.isLoading\n            }\n        } else if (mode === 'sell') {\n            return {\n                data: offRampFiats,\n                isLoading: false\n            }\n        }\n    }, [mode, onRampFiats, offRampFiats])\n\n    //mode\n    useEffect(()=> {\n        if (mode === 'buy') {\n            setAmount('50')\n            setFrom(fiatList.data && fiatList.data[0] ? fiatList.data[0].value : null)\n            setTo(DEFAULT_CRYPTO[network])\n        } else if (mode === 'sell') {\n            setAmount('')\n            setFrom(cryptoList.data && cryptoList.data[0] ? cryptoList.data[0].value : null)\n            setTo(fiatList.data && fiatList.data[0] ? fiatList.data[0].value : null)\n        }\n    }, [mode, fiatList, cryptoList, network])\n\n    //fiat\n    useEffect(() => {\n        setOnRampFiats({data: null, isLoading: true})\n        fetchGet(FIAT_CURRENCIES_URL)\n            .then((data) => setOnRampFiats({data, isLoading: false, error: {}, message: ''}))\n            .catch(error => {\n                setOnRampFiats({data: null, isLoading: false, error, message: 'Error while fetching fiat list'})\n                addToast('Error while fetching fiat list', { error: true })\n            })\n    }, [FIAT_CURRENCIES_URL, addToast])\n\n    //ctypto\n    useEffect(() => {\n        setCryptoCurrencies({data: null, isLoading: true})\n        fetchGet(CRYPTO_CURRENCIES_URL)\n            .then((data) => {\n                setCryptoCurrencies({data, isLoading: false, error: {}, message: ''})\n            })\n            .catch(error => {\n                setCryptoCurrencies({data: null, isLoading: false, error, message: 'Error while fetching crypto list'})\n                addToast('Error while fetching crypto list', { error: true })\n            })\n    }, [network, CRYPTO_CURRENCIES_URL, addToast])\n\n\n    const genMarketInfoUrl = useCallback(() => {\n        const fromTo =\n            mode === 'buy'\n                ? `${from}_${to}-${NETWORK_MAPPING[network]}`\n                : mode === 'sell'\n                    ? `${from}-${NETWORK_MAPPING[network]}_${to}`\n                    : null\n\n        if (fromTo) return `${relayerURL}/guardarian/market-info/${fromTo}`\n        else return null\n    }, [mode, from, to, network, relayerURL])\n\n    // MarketInfo\n    useEffect(() => {\n        if (!network || !from || !to || !mode) return setMarketInfo({ data: null, isLoading: false })\n\n        setMarketInfo({ data: null, isLoading: true })\n\n        const url = genMarketInfoUrl()\n\n        // Prevent State updates on unmounted components\n        let unmounted = false\n\n        fetchGet(url)\n            .then(({data}) => !unmounted && setMarketInfo({ data, isLoading: false }))\n            .catch(error => !unmounted && (\n                setMarketInfo({ data: null, isLoading: false, error, message: 'Error while fetching market info' }),\n                addToast('Error while fetching market info', { error: true })\n                ))\n        return () => {\n            unmounted = true\n        }\n    }, [network, mode, from, to, addToast, genMarketInfoUrl])\n\n\n    const genEstimateUrl = useCallback(() => {\n        if (mode === 'buy'){\n            return `${relayerURL}/guardarian/estimate/${from}/${network}/${amount}/${to}/${'true'}`\n        } else {\n            return `${relayerURL}/guardarian/estimate/${from}/${network}/${amount}/${to}/${'false'}`\n        }\n    }, [mode, relayerURL, from, network, amount, to])\n\n    // Estimate\n    useEffect(() => {\n        if (!network || !from || !to || !mode || !amount) return setEstimateInfo({ data: null, isLoading: false })\n\n        setEstimateInfo({ data: null, isLoading: true })\n\n        const url = genEstimateUrl()\n\n        // Prevent State updates on unmounted components\n        let unloaded = false\n\n        fetchGet(url)\n            .then(({data}) => !unloaded && setEstimateInfo({ data, isLoading: false }))\n            .catch(error => !unloaded && (\n                setEstimateInfo({ data: null, isLoading: false, error, message: 'Error while fetching estimate info' }),\n                addToast('Error while fetching estimate info', { error: true }))\n            )\n        return () => {\n            unloaded = true\n        }\n    }, [network, mode, from, to, amount, addToast, genEstimateUrl])\n\n    function genTxnUrl () {\n        if (mode === 'buy') {\n            return `${relayerURL}/guardarian/transaction/${from}/null/${amount}/${to}/${selectedNetwork}/${walletAddress}`\n        } else {\n            return `${relayerURL}/guardarian/transaction/${from}/${selectedNetwork}/${amount}/${to}/null/null`\n        }\n    }\n\n    return {\n        marketInfo,\n        estimateInfo,\n        cryptoList,\n        fiatList,\n        network,\n        from,\n        to,\n        mode,\n        amount,\n        cryptoCurrencies,\n        setNetwork,\n        setFrom,\n        setTo,\n        setMode,\n        setAmount,\n        genTxnUrl,\n        NETWORK_MAPPING,\n        NATIVE_ADDRESS,\n        DEFAULT_CRYPTO\n    }\n    \n}\n\n\nexport default useGuardarian","import './GuardarianDepositProviderModal.scss'\n\nimport { Button, Loading, Modal, TextInput, Select } from 'components/common'\nimport {useState, useMemo, useCallback} from 'react'\nimport { MdOutlineClose } from 'react-icons/md'\nimport useGuardarian from './useGuardarian'\nimport { useModals } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { ToolTip } from 'components/common'\nimport { fetchGet } from 'lib/fetch';\nimport { popupCenter } from 'lib/popupHelper'\nimport url from 'url'\n\n\nconst GuardarianDepositProviderModal = ({ relayerURL, walletAddress, selectedNetwork, portfolio }) => {\n    const { hideModal } = useModals()\n    const { addToast } = useToasts()\n    const guardarian = useGuardarian({relayerURL, selectedNetwork, initMode: 'buy', tokens: portfolio.tokens, walletAddress, addToast })\n    const [sendTransactionLoading, setSendTransactionLoading] = useState(false)\n\n    const getCurrentTokenFromBalance = useCallback(() => {\n        if (portfolio.tokens && guardarian?.cryptoCurrencies?.data && guardarian.mode === 'sell') {\n            const token = guardarian?.cryptoCurrencies?.data?.find(t => t.ticker === guardarian.from)\n            return portfolio?.tokens?.find(t => token?.networks?.find(nt => (nt?.token_contract?.toLowerCase() === t?.address?.toLowerCase())\n                || (nt?.network === guardarian.NETWORK_MAPPING[guardarian.network] && t?.address.toLowerCase() ===  guardarian.NATIVE_ADDRESS && nt?.token_contract === null)))\n        }\n        else return {}\n    }, [guardarian, portfolio.tokens])\n\n    const validationMsg = useMemo(() => {\n        const marketData = guardarian?.marketInfo?.data\n\n        // In case of failed market info or estimate requests\n        if (guardarian?.marketInfo?.error || guardarian?.estimateInfo?.error) return 'Sorry! We couldn\\'t estimate your order! Please try again later!'\n\n        // If there is no market data fetch yet, we can't validate\n        if (!marketData) return ''\n\n        const userAmount = parseFloat(guardarian.amount)\n        const marketMin = parseFloat(marketData.min)\n        const marketMax = parseFloat(marketData.max)\n\n        if (guardarian.mode === 'buy') {\n            if (userAmount < marketMin) return `Minimum amount is ${marketData.min} ${marketData.from}`\n            if (userAmount > marketMax) return `Maximum amount is ${marketData.max} ${marketData.from}`\n        } else if (guardarian.mode === 'sell') {\n            const currToken = getCurrentTokenFromBalance()\n\n            if (userAmount < marketMin) return `Minimum amount is ${marketData.min} ${marketData.from}`\n            if (userAmount > marketMax) return `Maximum amount is ${marketData.max} ${marketData.from}`\n            if (currToken && guardarian?.from && (userAmount > currToken.balance)) return `You do not have enough funds`\n        }\n\n        return ''\n    }, [guardarian, getCurrentTokenFromBalance])\n\n    const switchMode = () => {\n        // On switching mode, reset from/to, because the next form gets obsolete field values\n        // and can result in wrong API calls (fired in `useGuardarian` useEffect)\n        guardarian.setMode((prevMode) => prevMode === 'buy' ? 'sell' : 'buy')\n        guardarian.setAmount('')\n        guardarian.setFrom('')\n        guardarian.setTo(guardarian.mode === 'buy' ? guardarian.DEFAULT_CRYPTO[guardarian.NETWORK_MAPPING[guardarian.network]] : '')\n    }\n\n    function changeFrom(value) {\n        guardarian.setFrom(value)\n    }\n\n    function changeTo(value) {\n        guardarian.setTo(value)\n    }\n\n    const onInputAmount = value => {\n        guardarian.setAmount(value)\n    }\n\n    function sendTxn () {\n        setSendTransactionLoading(true)\n        fetchGet(guardarian.genTxnUrl())\n            .then(({data}) => {\n                setSendTransactionLoading(false)\n                if (data?.redirect_url) {\n                    popupCenter({\n                        url: url.format(data?.redirect_url),\n                        title: 'Guardarian Deposit',\n                        w: 560,\n                        h: 710,\n                    })\n                }\n            })\n            .catch(e => {\n                addToast('Error while trying to send transaction', { error: true })\n                setSendTransactionLoading(false)\n            })\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n        <Button \n            disabled={\n                validationMsg !== '' \n                || guardarian?.marketInfo?.isLoading \n                || guardarian?.estimateInfo?.isLoading \n                || guardarian?.txn?.isLoading\n                || guardarian?.amount === ''\n                || sendTransactionLoading\n            } \n            onClick={sendTxn}>{guardarian.mode === 'buy' ? 'Buy' : 'Sell'}</Button>\n    </>\n\n    return (\n        <Modal id=\"guardarian-modal\" title=\"Guardarian\" buttons={buttons}>\n            <div className='buy-sell-btns-wrapper'>\n                <div className={guardarian.mode === 'buy' ? 'button active' : 'button'} onClick={switchMode}>Buy</div>\n                <div className={guardarian.mode === 'sell' ? 'button active' : 'button'} onClick={switchMode}>Sell</div>    \n                \n            </div>\n            \n            <div className='input-currencies-wrapper'>\n            <div className='amount'>\n                <TextInput\n                    value={guardarian.amount}\n                    label=\"You send\"\n                    placeholder=\"Input amount\"\n                    onInput={onInputAmount}\n                />\n            </div>\n            <div className='currency'>\n                { (guardarian.mode === 'buy' && !guardarian?.fiatList?.isLoading) || (guardarian?.mode === 'sell' && !guardarian?.cryptoList?.isLoading)\n                ? <Select \n                    searchable \n                    defaultValue={guardarian.from} \n                    items={guardarian.mode === 'buy' ? guardarian.fiatList.data : guardarian.cryptoList.data} \n                    onChange={({value}) => changeFrom(value)}/>\n                : <div className='loading-wrapper'><Loading /> </div>}\n            </div>\n        </div>\n        { (validationMsg !== '') && (<p style={{ color: 'red' }}>{ validationMsg }</p>) }\n\n            <div className='estimation-info-wrapper'>\n                <div className='extra-fees'>\n                    <ToolTip label='All the exchange fees are added into the rate. There are no extra costs.'>\n                        No extra fees\n                    </ToolTip>\n                </div>\n                <div className='estimation-rate'>\n                    <ToolTip label='This is expected rate. Guardarian guarantees to pick up the best possible rate on the moment of the exchange'>\n                    Estimation rate: {' '}\n                { !guardarian.estimateInfo.isLoading && guardarian?.estimateInfo?.data && validationMsg === ''\n                    ? (<>\n                        { 1 + guardarian?.estimateInfo?.data?.from_currency} ≈ {guardarian?.estimateInfo?.data?.estimated_exchange_rate} {guardarian?.estimateInfo?.data?.to_currency}\n                    </>)\n                    : <></>}\n                </ToolTip>\n                </div>\n            </div> \n        <div className='input-currencies-wrapper'>\n            <div className='amount'> \n                { !guardarian.estimateInfo.isLoading\n                    ? (<TextInput\n                        value= {guardarian?.estimateInfo?.data ? guardarian?.estimateInfo?.data?.value : ''}\n                        disabled\n                        label=\"You get\"\n                    />) \n                    : (\n                        <>\n                            <label>You get</label>\n                            <div className='loading-wrapper'><Loading /> </div>\n                        </>\n                    )}\n            </div>\n            <div className='currency'>\n            { (guardarian?.mode === 'buy' && !guardarian?.cryptoList?.isLoading) || (guardarian?.mode === 'sell' && !guardarian?.fiatList?.isLoading)\n                ? <Select \n                    searchable \n                    defaultValue={guardarian?.to}\n                    items={guardarian?.mode === 'sell' ? guardarian?.fiatList?.data : guardarian?.cryptoList?.data} \n                    onChange={({value}) => changeTo(value)}/> \n                : <div className='loading-wrapper'><Loading /> </div>}\n            </div>\n        </div>\n        </Modal>\n    )\n}                    \n\nexport default GuardarianDepositProviderModal","import { RampInstantSDK } from '@ramp-network/ramp-instant-sdk'\nimport transakSDK from '@transak/transak-sdk'\nimport { popupCenter } from 'lib/popupHelper'\nimport { fetchGet } from 'lib/fetch'\nimport { useState } from 'react';\nimport { useToasts } from 'hooks/toasts'\nimport { useModals } from 'hooks'\nimport GuardarianDepositProviderModal from 'components/Modals/GuardarianDepositProviderModal/GuardarianDepositProviderModal'\n\nimport url from 'url'\n\nimport { RAMP_HOST_API_KEY, PAYTRIE_PARTNER_URL, TRANSAK_API_KEY, TRANSAK_ENV } from 'config'\n\nconst useProviders = ({ walletAddress, selectedNetwork, relayerURL, portfolio }) => {\n\n    const [isLoading, setLoading] = useState([])\n    const { addToast } = useToasts()\n    const { showModal } = useModals()\n\n    const openRampNetwork = () => {\n        const assetsList = {\n            'ethereum': 'ERC20_*,ETH_*',\n            'polygon': 'MATIC_ERC20_*,MATIC_*',\n            'avalanche': 'AVAX_*',\n            'binance-smart-chain': 'BSC_*,BSC_ERC20_*',\n            'gnosis': 'XDAI_*'\n        }\n\n        const widget = new RampInstantSDK({\n            hostAppName: 'Ambire',\n            hostLogoUrl: 'https://www.ambire.com/ambire-logo.png',\n            variant: 'auto',\n            swapAsset: assetsList[selectedNetwork],\n            userAddress: walletAddress,\n            hostApiKey: RAMP_HOST_API_KEY,\n        })\n        widget.show()\n    };\n    \n    const openPayTrie = async() => {\n        setLoading(prevState => ['PayTrie', ...prevState])\n        const rightSideLabels = {\n            ethereum: 'USDC',\n            polygon: 'USDC-P',\n            'binance-smart-chain': 'USDT-B',\n        }\n\n        const URL = url.parse(PAYTRIE_PARTNER_URL, true)\n        URL.search = null\n        URL.query = {\n            ...URL.query,\n            addr: walletAddress,\n            rightSideLabel: rightSideLabels[selectedNetwork]\n        }\n\n        popupCenter({\n            url: url.format(URL),\n            title: 'Paytrie Deposit',\n            w: 450,\n            h: 700,\n        })\n        setLoading(prevState => prevState.filter(n => n !== 'PayTrie'))\n    };\n\n    const openTransak = () => {\n        const networksAlias = {\n            'avalanche': 'avaxcchain',\n            'binance-smart-chain': 'bsc',\n            'moonbeam': 'mainnet'\n        }\n\n        const defaultCurency = {\n            'ethereum': 'USDC',\n            'polygon': 'USDC',\n            'arbitrum': 'ETH',\n            'avalanche': 'AVAX',\n            'binance-smart-chain': 'BNB',\n            'moonriver': 'MOVR',\n            'moonbeam': 'GLMR',\n            'optimism': 'USDC'\n        }\n\n        const transak = new transakSDK({\n            apiKey: TRANSAK_API_KEY,\n            environment: TRANSAK_ENV,\n            networks: networksAlias[selectedNetwork] || selectedNetwork,\n            defaultCryptoCurrency: defaultCurency[selectedNetwork],\n            disableWalletAddressForm: true,\n            walletAddress,\n            themeColor: '282b33',\n            email: '',\n            redirectURL: '',\n            hostURL: window.location.origin,\n            widgetHeight: 'calc(100% - 60px)',\n            widgetWidth: '100%',\n        })\n\n        transak.init()\n\n        transak.on(transak.ALL_EVENTS, data => {\n            console.log(data)\n        })\n\n        transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, orderData => {\n            console.log(orderData)\n            transak.close()\n        })\n    }\n\n\n    const openKriptomat = async () => {\n        setLoading(prevState => ['Kriptomat', ...prevState])\n        const kriptomatResponse = await fetchGet(`${relayerURL}/kriptomat/${walletAddress}/${selectedNetwork}`)\n        if (kriptomatResponse.success && kriptomatResponse.data && kriptomatResponse.data.url) popupCenter({\n            url: url.format(kriptomatResponse.data.url),\n            title: 'Kriptomat Deposit',\n            w: 515,\n            h: 600\n        })\n        else addToast(`Error: ${kriptomatResponse.data ? kriptomatResponse.data : 'unexpected error'}`, { error: true })\n        setLoading(prevState => prevState.filter(n => n !== 'Kriptomat'))\n    }\n\n    const openGuardarian = () => {\n        setLoading(prevState => ['Guardarian', ...prevState])\n        showModal(<GuardarianDepositProviderModal relayerURL={relayerURL} walletAddress={walletAddress} selectedNetwork={selectedNetwork} portfolio={portfolio}/>)\n        setLoading(prevState => prevState.filter(n => n !== 'Guardarian'))\n    }\n\n\n    return {\n        openRampNetwork,\n        openPayTrie,\n        openTransak,\n        openKriptomat,\n        openGuardarian,\n        isLoading\n    }\n}\n\nexport default useProviders","import './Providers.scss'\n\nimport RAMP_LOGO from 'resources/ramp.svg';\nimport PAYTRIE_LOGO from 'resources/paytrie.svg';\nimport TRANSAK_LOGO from 'resources/transak.svg';\nimport KRIPTOMAT_LOGO from 'resources/kriptomat.svg';\nimport GUARDARIAN_LOGO from 'resources/guardarian.svg'\n\nimport { Loading } from 'components/common'\nimport useProviders from './useProviders'\n\nexport default function Providers({ walletAddress, networkDetails, relayerURL, portfolio }) {\n    const { openRampNetwork, openPayTrie, openTransak, openKriptomat, openGuardarian, isLoading } = useProviders({ walletAddress, selectedNetwork: networkDetails.id, relayerURL, portfolio })\n    \n    const providers = [\n        {\n            logo: GUARDARIAN_LOGO,\n            name: 'Guardarian',\n            type: 'Buy with Bank Transfer, Credit/Debit Card, Sell Crypto',\n            fees: 'from 2%',\n            limits: 'up to 15k EUR/monthly on and off ramp',\n            currencies: 'GBP, EUR, USD and many more',\n            networks: ['ethereum', 'polygon', 'binance-smart-chain', 'fantom'],\n            onClick: () => openGuardarian()\n        },\n        {\n            logo: KRIPTOMAT_LOGO,\n            name: 'Kriptomat',\n            type: 'Credit Card',\n            fees: '2.45%',\n            limits: 'up to 5000 EUR/day',\n            currencies: 'USD, EUR, GBP',\n            networks: ['ethereum', 'polygon', 'avalanche', 'binance-smart-chain'],\n            onClick: () => openKriptomat()\n        },\n        {\n            logo: RAMP_LOGO,\n            name: 'Ramp',\n            type: 'Bank Transfer, Credit/Debit Card, Apple Pay',\n            fees: '0.49%-2.9%',\n            limits: '10,000EUR/m',\n            currencies: 'USD, EUR, GBP',\n            networks: ['ethereum', 'polygon', 'avalanche', 'binance-smart-chain', 'gnosis'],\n            onClick: () => openRampNetwork()\n        },\n        {\n            logo: PAYTRIE_LOGO,\n            name: 'PayTrie',\n            type: 'Bank Transfer',\n            fees: '1% (min. $2 CAD)',\n            limits: '$2,000CAD/day',\n            currencies: 'CAD',\n            networks: ['ethereum', 'polygon', 'binance-smart-chain'],\n            onClick: () => openPayTrie()\n        },\n        {\n            logo: TRANSAK_LOGO,\n            name: 'Transak',\n            type: 'Credit/Debit card and Bank Transfer (methods availability depends on location)',\n            fees: 'from 0.5%',\n            limits: 'up to 15,000 EUR/day',\n            currencies: 'GBP, EUR, USD and many more',\n            networks: ['ethereum', 'polygon', 'avalanche', 'arbitrum', 'binance-smart-chain', 'moonriver', 'moonbeam', 'optimism'],\n            onClick: () => openTransak()\n        }\n    ];\n\n    const shouldBeDisabled = (networks) => {\n        return networks.includes(networkDetails.id) ? null : 'disabled'; \n    };\n\n    return (\n        <div id=\"providers\">\n            {\n                providers.map(({ logo, name, type, fees, limits, currencies, networks, onClick }) =>\n                \n                    <div className={`provider ${shouldBeDisabled(networks)}`} key={name} onClick={onClick}>\n                        <div className=\"logo\">\n                            <img src={logo} alt={name}></img>\n                        </div>\n                        { isLoading.includes(name) ? <div> <Loading/> </div> :\n                        <div className=\"details\">\n                            <div className=\"type\">\n                                { type }\n                            </div>\n                            <div className=\"fees\">\n                                Fees: { fees }\n                            </div>\n                            <div className=\"limits\">\n                                Limits: { limits }\n                            </div>\n                            <div className=\"currencies\">\n                                Currencies: { currencies }\n                            </div>\n                        </div>\n                        }\n                    </div>\n                )\n            }\n            {\n                networkDetails.id !== 'ethereum' ? \n                    <div id=\"network-warning\">\n                        <b>NOTE:</b> Some deposit methods are unavailable on <b>{networkDetails.name}</b>. Switch to Ethereum for the widest support.\n                    </div>\n                    :\n                    null\n            }\n        </div>\n    )\n}\n","import './Deposit.scss'\n\nimport { useCallback, useEffect, useState } from 'react'\nimport { MdAccountBalance, MdAccountBalanceWallet } from 'react-icons/md'\nimport QRCode from 'qrcode'\nimport TextInput from 'components/common/TextInput/TextInput'\nimport Providers from './Providers/Providers'\n\nimport networks from 'consts/networks'\n\nimport AssetsMigrationBanner from 'components/Wallet/AssetsMigration/AssetsMigrationBanner'\n\nexport default function Deposit({ selectedAcc, selectedNetwork, accounts, addRequest, relayerURL, portfolio, useStorage }) {\n    const networkDetails = networks.find(({ id }) => id === selectedNetwork.id)\n    const [qrCodeUrl, setQrCodeUrl] = useState('')\n\n    const generateQRCode = useCallback(() => {\n        QRCode.toDataURL(selectedAcc, {\n            quality: 1,\n            margin: 1\n        }, (error, url) => {\n            if (error) return console.error(error)\n            setQrCodeUrl(url)\n        })\n    }, [selectedAcc])\n\n    useEffect(() => generateQRCode(), [generateQRCode])\n\n    return (\n        <section id=\"deposit\">\n            <div className=\"panel\">\n                <div className=\"heading\">\n                     <div className=\"title\">\n                        <MdAccountBalanceWallet size={35}/>\n                        Deposit Tokens\n                    </div>\n                    <div className=\"subtitle\">\n                        Direct Deposit\n                    </div>\n                </div>\n                <div className=\"description\">\n                    <TextInput className=\"depositAddress\" label={`Send ${networkDetails.nativeAssetSymbol}, tokens or collectibles (NFTs) to this address:`} value={selectedAcc} copy/>\n                    <img id=\"qr-code\" alt=\"QR Code\" src={qrCodeUrl}></img>\n                </div>\n                <div id=\"networks\">\n                    Following networks supported on this address:\n                    <div className=\"list\">\n                        {\n                            networks.filter(n => !n.hide).map(({ id, icon, name }) => (\n                                <div className=\"network\" key={id}>\n                                    <div className=\"icon\" style={{backgroundImage: `url(${icon})`}}></div>\n                                    <div className=\"name\">{ name }</div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <AssetsMigrationBanner\n                    selectedNetwork={selectedNetwork}\n                    selectedAccount={selectedAcc}\n                    accounts={accounts}\n                    addRequest={addRequest}\n                    linkMargin={true}\n                    relayerURL={relayerURL}\n                    portfolio={portfolio}\n                    useStorage={useStorage}\n                />\n            </div>\n            <div className=\"panel\">\n                <div className=\"heading\">\n                    <div className=\"title\">\n                        <MdAccountBalance size={35}/>\n                        Fiat Currency\n                    </div>\n                    <div className=\"subtitle\">\n                        Credit Card & Bank Transfer\n                    </div>\n                </div>\n                <div className=\"description\">\n                    Deposit with credit card to your account directly using one of our partners\n                </div>\n                <Providers walletAddress={selectedAcc} networkDetails={networkDetails} relayerURL={relayerURL} portfolio={portfolio}/>\n            </div>\n        </section>\n    )\n}\n","export const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n","import { VELCRO_API_ENDPOINT, ZAPPER_API_KEY } from 'config'\nimport { fetchGet } from 'lib/fetch'\nimport {ZERO_ADDRESS} from 'consts/specialAddresses'\n\nexport default function assetMigrationDetector({ networkId, account }) {\n\n  if (!account) return Promise.resolve([])// for web accounts\n\n  //First pass\n  return fetchGet(`${VELCRO_API_ENDPOINT}/protocols/tokens/balances?addresses[]=${account}&network=${networkId}&api_key=${ZAPPER_API_KEY}&newBalances=true&available_on_coingecko=true`)\n    .then(velcroResponse => {\n\n      const signer_ = account.toLowerCase()\n      if (!velcroResponse[signer_]) return []\n      if (!velcroResponse[signer_].products[0]) return []\n\n      const filteredAssets = velcroResponse[signer_].products[0].assets;\n\n      //Second pass to get real time data\n      const customTokens = filteredAssets.map(a => ({\n        address: a.tokens[0].address,\n        symbol: a.tokens[0].symbol,\n        decimals: a.tokens[0].decimals,\n      }))\n      const urlCustomTokens = `${VELCRO_API_ENDPOINT}/protocols/tokens/balances?addresses[]=${account}&network=${networkId}&api_key=${ZAPPER_API_KEY}&customTokens=${JSON.stringify(customTokens)}&available_on_coingecko=true`\n      return fetchGet(urlCustomTokens)\n        .then(finalResponse => {\n          const filteredAssets = finalResponse[signer_]?.products[0]?.assets\n\n          return filteredAssets.map(a => {\n            return {\n              name: a.tokens[0].symbol,\n              icon: a.tokens[0].tokenImageUrl,\n              address: a.tokens[0].address.toLowerCase(),\n              native: a.tokens[0].address === ZERO_ADDRESS,\n              decimals: a.tokens[0].decimals,\n              availableBalance: a.tokens[0].balanceRaw,\n              balanceUSD: a.tokens[0].balanceUSD,\n              rate: a.tokens[0].balanceUSD / a.tokens[0].balanceRaw\n            }\n          })\n        })\n        .catch(err => {\n          throw Error('Could not get customToken assets from velcro')\n        })\n    })\n    .catch(err => {\n      throw Error('Could not get assets from velcro')\n    })\n}\n","//Permit definitions\nimport { Interface } from 'ethers/lib/utils'\n\nexport const PERMIT_TYPE_2612 = [\n  { name: \"owner\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"value\", type: \"uint256\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"deadline\", type: \"uint256\" },\n]\n\nexport const PERMIT_TYPE_DAI = [\n  { name: \"holder\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"expiry\", type: \"uint256\" },\n  { name: \"allowed\", type: \"bool\" },\n]\n\nexport const EIP712DomainWithVersion = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712DomainWithoutNameNorVersion = [\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712Domain = [\n  { name: \"name\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712DomainWithSalt = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"verifyingContract\", type: \"address\" },\n  { name: \"salt\", type: \"bytes32\" },\n]\n\nexport const PERMITTABLE_COINS = {\n  1: [\n    // Without version 2\n    { address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', name: 'USD Coin', version: '2', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612 },\n\n    // Without version\n    { address: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984', name: 'Uniswap', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612 },\n    { address: '0xde30da39c46104798bb5aa3fe8b9e0e1f348163f', name: 'Gitcoin', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612 },\n\n    // Dai\n    { address: '0x6b175474e89094c44da98b954eedeac495271d0f', name: 'Dai Stablecoin', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_DAI },\n\n    // Spell Token\n    { address: '0x090185f2135308bad17527004364ebcc2d37e5f6', domainType: EIP712DomainWithoutNameNorVersion, permitType: PERMIT_TYPE_2612 },\n    // Magic Internet Money\n    { address: '0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3', domainType: EIP712DomainWithoutNameNorVersion, permitType: PERMIT_TYPE_2612 },\n\n    // With version 1\n    { address: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', name: 'Aave Token', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612 , nonceFunction: \"_nonces\"},\n    { name: 'AdEx Loyalty', address: '0xd9a4cb9dc9296e111c66dfacab8be034ee2e1c2c', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Token', address: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Ambire Wallet Staking Token', address: '0x47cd7e91c3cbaaf266369fe8518345fc4fc12935', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'ConstitutionDAO', address: '0x7a58c0be72be218b41c608b7fe7c5bb630736c71', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aragon Network Token', address: '0xa117000000f279d81a1d3cc75430faa017fa5a2e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'AdEx Staking Token', address: '0xb6456b57f03352be48bf101b46c1752a0813491a', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'dYdX', address: '0x92d6c1e31e14520e676a687f0a93788b716beff5', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Ethereum Name Service', address: '0xc18360217d8f7ab5e7c516566761ea12ce7f9d72', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Olympus', address: '0x383518188c0c6d7730d91b2c03a03c837814a899', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: '1INCH Token', address: '0x111111111117dc0aa78b770fa6a738034120c302', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'IceToken', address: '0xf16e81dce15b08f326220742020379b855b87df9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Fei USD', address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'LUSD Stablecoin', address: '0x5f98805a4e8be255a32880fdec7f6728c6568ba0', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Balancer', address: '0xba100000625a3754423978a60c9317c58a424e3d', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave interest bearing AAVE', address: '0xffc97d72e13e01096502cb8eb52dee56f74dad7b', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniBATWETH', address: '0xa1b0edf4460cc4d8bfaa18ed871bff15e5b57eb4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniWBTCWETH', address: '0xc58f53a8adff2fb4eb16ed56635772075e2ee123', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniUSDCWETH', address: '0x391e86e2c002c70dee155eaceb88f7a3c38f5976', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing WETH', address: '0x030ba81f1c18d280636f32af80b9aad02cf0854e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing DAI', address: '0x028171bca77440897b824ca71d1c56cac55b68a3', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniWBTCUSDC', address: '0x2365a4890ed8965e564b7e2d27c38ba67fec4c6f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniCRVWETH', address: '0x0ea20e7ffb006d4cfe84df2f72d8c7bd89247db0', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniUNIWETH', address: '0x3d26dcd840fcc8e4b2193ace8a092e4a65832f9f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing GUSD', address: '0xd37ee7e4f452c6638c96536e68090de8cbcdb583', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniMKRWETH', address: '0x370adc71f67f581158dc56f539df5f399128ddf9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing CRV', address: '0x8dae6cb04688c62d939ed9b68d32bc62e49970b1', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market USDT', address: '0x17a79792fe6fe5c95dfe95fe3fcee3caf4fe4cb7', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniSNXWETH', address: '0x38e491a71291cd43e8de63b7253e482622184894', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing YFI', address: '0x5165d24277cd063f5ac44efd447b27025e888f37', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing SNX', address: '0x35f6b052c598d933d69a4eec4d04c73a191fe6c2', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market USDC', address: '0xd24946147829deaa935be2ad85a3291dbf109c80', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market DAI', address: '0x79be75ffc64dd58e66787e4eae470c8a1fd08ba4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing USDT', address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing RAI', address: '0xc9bc48c72154ef3e5425641a3c747242112a46af', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing BAL', address: '0x272f97b7a56a387ae942350bbc7df5700f8a4576', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing BAT', address: '0x05ec93c0365baaeabf7aeffb0972ea7ecdd39cf1', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing USDC', address: '0xbcca60bb61934080951369a648fb03df4f96263c', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market BptBALWETH', address: '0xd109b2a304587569c84308c55465cd9ff0317bfb', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing KNC', address: '0x39c6b3e42d6a679d7d776778fe880bc9487c2eda', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing MANA', address: '0xa685a61171bb30d4072b338c80cb7b2c865c873e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing XSUSHI', address: '0xf256cc7847e919fac9b808cc216cac87ccf2f47a', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing TUSD', address: '0x101cc05f4a51c0319f570d5e146a8c625198e636', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing ENJ', address: '0xac6df26a590f08dcc95d5a4705ae8abbc88509ef', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n\n  ],\n  137: [\n    //Not working, only to test UX behavior on polygon\n    { name: 'Governance OHM', address: '0xd8ca34fd379d9ca3c6ee3b3905678320f5b45195', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Frax', address: '0x45c32fa6df82ead1e2ef74d17b76547eddfaff89', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market WBTC', address: '0x5c2ed810328349100a66b82b78a1791b101c9d61', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave Matic Market WETH', address: '0x28424507fefb6f7f8e9d3860f56504e4e5f5f390', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market USDC', address: '0x1a13f4ca1d028320a707d99520abfefca3998b7f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market AAVE', address: '0x1d2a0e5ec8e5bbdca5cb219e649b565d8e5c3360', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Synapse', address: '0xf8f9efc0db77d8881500bb06ff5d6abc3070e695', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave Matic Market WMATIC', address: '0x8df3aad3a84da6b69a4da8aec3ea40d9091b2ac4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market USDT', address: '0x60d55f02a771d515e077c9c2403a1ef324885cec', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Klima DAO', address: '0x4e78011ce80ee02d2c3e649fb657e45898257815', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Quickswap', address: '0xb5c064f955d8e7f38fe0460c556a72987494ee17', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612},\n    { name: 'Route', address: '0x16eccfdbb4ee1a85a33f3a9b21175cd7ae753db4', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612},\n\n    { address: '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063', name: '(PoS) Dai Stablecoin', version: '1', salt: '0x0000000000000000000000000000000000000000000000000000000000000089', domainType: EIP712DomainWithSalt, permitType: PERMIT_TYPE_DAI, nonceFunction: 'getNonce'},\n    { address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174', name: 'USD Coin (PoS)', version: '1', salt: '0x0000000000000000000000000000000000000000000000000000000000000089', domainType: EIP712DomainWithSalt, permitType: PERMIT_TYPE_2612 },\n  ],\n  56: [\n    { name: '1INCH Token', address: '0x111111111117dc0aa78b770fa6a738034120c302', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Frax', address: '0x90c97f71e18723b0cf0dfa30ee176ab653e89f40', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'JADE', address: '0x7ad7242a99f21aa543f9650a56d141c57e4f6081', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Templar Token', address: '0x19e6bfc1a6e4b042fb20531244d47e252445df01', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n  ]\n}\n\nexport const ERC20PermittableInterface = new Interface([\n  \"function nonces(address owner) external view returns (uint256)\",\n  \"function _nonces(address owner) external view returns (uint256)\",\n  \"function getNonce(address owner) external view returns (uint256)\",\n\n  \"function name() external view returns (string)\",\n  \"function symbol() external view returns (string)\",\n  \"function decimals() external view returns (uint)\",\n  \"function balanceOf(address) external view returns (uint)\",\n\n  //2612 permit\n  \"function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\",\n  //Dai permit\n  \"function permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\",\n  \"function transferFrom(address from, address to, uint256 amount) view returns (bool)\",\n  \"function transfer(address to, uint256 amount) view returns (bool)\",\n  \"function approve(address spender, uint256 amount) returns (bool)\",\n  \"function allowance(address owner, address spender) view returns (uint)\"\n])\n","import './AssetsMigration.scss'\n\nimport BigNumber from 'bignumber.js'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport assetMigrationDetector from 'lib/assetMigrationDetector'\nimport { PERMITTABLE_COINS } from 'consts/permittableCoins'\nimport { ZERO_ADDRESS } from 'consts/specialAddresses'\nimport AmbireLoading from 'components/common/Loading/AmbireLoading'\nimport { Checkbox, TextInput, Button, Loading } from 'components/common'\nimport { GiToken } from 'react-icons/gi'\nimport { fetchGet } from 'lib/fetch'\nimport { MdClose, MdOutlineNavigateNext, MdOutlineAddCircleOutline, MdCancel } from 'react-icons/md'\nimport { Contract, ethers } from 'ethers'\nimport { ERC20PermittableInterface } from 'consts/permittableCoins'\nimport { getProvider } from 'lib/provider'\nimport { GAS_SPEEDS } from 'ambire-common/src/constants/gasSpeeds'\n\nconst PERMIT_CONSUMPTION = 70000\nconst TRANSFER_CONSUMPTION = 52000 // higher avg, 21000 included\n\nconst AssetsMigrationSelector = ({ signerAccount, identityAccount, network, setIsSelectionConfirmed, setStep, portfolio, relayerURL, setModalButtons, hideModal, setSelectedTokensWithAllowance, setGasSpeed, setStepperSteps, hidden }) => {\n\n  const [selectableTokens, setSelectableTokens] = useState([])\n  const [selectableTokensUserInputs, setSelectableTokensUserInputs] = useState([])\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [failedImg, setFailedImg] = useState([])\n  const [gasData, setGasData] = useState(null)\n  const [suggestedGasTokens, setSuggestedGasTokens] = useState([])\n  const [estimatedGasFees, setEstimatedGasFees] = useState(null)\n  const [selectedGasSpeed, setSelectedGasSpeed] = useState('fast')\n  const [tokensAllowances, setTokenAllowances] = useState([])\n\n  const [isAddCustomTokenFormShown, setIsAddCustomTokenFormShown] = useState(false)\n  const [isCustomTokenPending, setIsCustomTokenPending] = useState(false)\n  const [customTokenAddress, setCustomTokenAddress] = useState('')\n  const [customTokenError, setCustomTokenError] = useState('')\n\n  const customTokenInput = useRef()\n\n  const isPermittable = (chainId, address) => {\n    return !!PERMITTABLE_COINS[chainId]?.find(a => a.address.toLowerCase() === address.toLowerCase())\n  }\n\n  useEffect(() => {\n    if (isAddCustomTokenFormShown) {\n      customTokenInput.current.focus()\n    }\n  }, [isAddCustomTokenFormShown])\n\n  // update signerTokens state helper\n  const updateSelectableTokenUserInputs = useCallback((address, callback) => {\n    const index = selectableTokensUserInputs.findIndex(a => a.address === address)\n\n    if (index !== -1) {\n      const updated = callback(selectableTokensUserInputs[index])\n\n      setSelectableTokensUserInputs([\n        ...selectableTokensUserInputs.slice(0, index),\n        updated,\n        ...selectableTokensUserInputs.slice(index + 1),\n      ])\n    }\n  }, [selectableTokensUserInputs])\n\n  // Include/Exclude token in migration\n  const toggleTokenSelection = useCallback((address, minHumanAmount = null) => {\n    updateSelectableTokenUserInputs(address, old => {\n      let updated = {\n        ...old,\n        selected: !old.selected\n      }\n      if (minHumanAmount) {\n\n        // let newHumanAmount = humanAmount.replace(/\\.?0+$/g, '')\n        const currentHumanAmount = selectableTokensUserInputs.find(t => t.address === address)?.humanAmount\n        if (minHumanAmount > currentHumanAmount) {\n          const decimals = selectableTokens.find(t => t.address === address)?.decimals\n\n          updated.amount = new BigNumber(minHumanAmount).multipliedBy(10 ** decimals).toFixed(0)\n          updated.humanAmount = minHumanAmount\n        }\n      }\n      return updated\n    })\n  }, [selectableTokens, updateSelectableTokenUserInputs, selectableTokensUserInputs])\n\n  const addCustomToken = useCallback(() => {\n\n    const provider = getProvider(network.id)\n\n    if (!ethers.utils.isAddress(customTokenAddress)) {\n      setCustomTokenError('invalid custom token address')\n      return\n    }\n\n    if (selectableTokens.find(t => t.address.toLowerCase() === customTokenAddress.toLowerCase())) {\n      setCustomTokenAddress('')\n      setIsAddCustomTokenFormShown(false)\n      return\n    }\n\n    const tokenContract = new Contract(customTokenAddress, ERC20PermittableInterface, provider)\n\n    const symbolPromise = tokenContract.symbol().catch(() => setCustomTokenError('Could not get symbol of token ' + customTokenAddress))\n    const decimalsPromise = tokenContract.decimals().catch(() => setCustomTokenError('Could not get decimals of token ' + customTokenAddress))\n    const allowancePromise = tokenContract.allowance(signerAccount, identityAccount).catch(() => setCustomTokenError('Could not get allowance for token ' + customTokenAddress))\n    const availableSignerBalancePromise = tokenContract.balanceOf(signerAccount).catch(() => setCustomTokenError('Could not get balance for token ' + customTokenAddress))\n\n    setIsCustomTokenPending(true)\n    setCustomTokenError(null)\n\n    Promise.all([\n      symbolPromise,\n      decimalsPromise,\n      allowancePromise,\n      availableSignerBalancePromise]\n    ).then((promises) => {\n\n      const [symbol, decimals, allowance, signerBalance] = promises\n\n      setIsCustomTokenPending(false)\n\n      if (symbol && decimals && allowance !== null && signerBalance !== null) {\n        setCustomTokenAddress('')\n        setIsAddCustomTokenFormShown(false)\n\n        setSelectableTokens(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              name: symbol,\n              decimals: decimals.toNumber(),\n              icon: null,\n              rate: 0,\n              native: false,\n              availableBalance: signerBalance.toString(),\n              balanceUSD: 0,\n            }\n          ]\n        })\n\n        setSelectableTokensUserInputs(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              selectedAmount: 0,\n              amount: signerBalance.toString(),\n              humanAmount: new BigNumber(signerBalance.toString()).div(10 ** decimals.toString()).toFixed(),\n              selected: signerBalance.gt(0)\n            }\n          ]\n        })\n\n        setTokenAllowances(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              allowance: 0,\n              permittable: false//I guess if not in velcro certainly not permittable\n            }\n          ]\n        })\n      }\n    }).catch(err => {\n      console.log('err getting custom token data', err)\n      setIsCustomTokenPending(false)\n    })\n  }, [network, customTokenAddress, signerAccount, identityAccount, setCustomTokenError, selectableTokens])\n\n  const canCoverGasFees = (suggestedGasTokens, speed) => {\n    return !!suggestedGasTokens.filter(gt => (gt.selected && gt.isEnoughToCoverFees[speed].ifSelected) || gt.isEnoughToCoverFees[speed].ifNotSelected).length\n  }\n\n  const getSuggestedGasTokensOfSpeed = (suggestedGasTokens, speed) => {\n    return suggestedGasTokens\n      .filter(gt => gt.isEnoughToCoverFees[speed].ifSelected)\n      .map(gt => {\n        return {\n          ...gt,\n          minimumSelectionAmount: gt.isEnoughToCoverFees[speed].minimumSelectionAmount\n        }\n      })\n  }\n\n  const getSuggestedGasTokensAcceptableSpeeds = (suggestedGasTokens) => {\n    return GAS_SPEEDS.filter(speed => !!suggestedGasTokens.filter(gt => (gt.selected && gt.isEnoughToCoverFees[speed].ifSelected) || gt.isEnoughToCoverFees[speed].ifNotSelected).length)\n  }\n\n  const consolidatedSelectableTokens = (selectableTokens, selectableTokensUserInputs = [], tokensAllowances = []) => {\n    return selectableTokens.map(st => {\n      return {\n        ...st,\n        ...selectableTokensUserInputs.find(t => t.address === st.address),\n        ...tokensAllowances.find(t => t.address === st.address)\n      }\n    })\n  }\n\n  // select tokens to migrate\n  const confirmTokenSelection = useCallback(async () => {\n\n    const tokensToMigrate = consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs, tokensAllowances).filter(a => a.selected)\n    if (!tokensToMigrate.length) return\n\n    setSelectedTokensWithAllowance(tokensToMigrate.map(a => {\n      return {\n        ...a,\n      }\n    }))\n\n    setIsSelectionConfirmed(true)\n    if (tokensToMigrate.find(a => a.address === ZERO_ADDRESS)) {\n      setStep(1)\n    } else {\n      setStep(2)\n    }\n\n    setGasSpeed(selectedGasSpeed)\n  }, [selectableTokens, selectableTokensUserInputs, tokensAllowances, setSelectedTokensWithAllowance, setIsSelectionConfirmed, setStep, setGasSpeed, selectedGasSpeed])\n\n  // fetch selectable tokens\n  useEffect(() => {\n\n    setIsLoading(true)\n    setSelectableTokens([])\n\n    assetMigrationDetector({ networkId: network.id, account: signerAccount }).then(assets => {\n      setSelectableTokens(\n        assets.map(t => {\n          return {\n            ...t,\n          }\n        })\n      )\n\n      setSelectableTokensUserInputs(assets.map(t => {\n        return {\n          address: t.address,\n          selectedAmount: 0,\n          amount: t.availableBalance,\n          humanAmount: new BigNumber(t.availableBalance).div(10 ** t.decimals).toFixed(),\n          selected: false\n        }\n      }))\n\n      setIsLoading(false)\n    }).catch(err => {\n      console.error(err)\n    })\n  }, [signerAccount, setIsLoading, setSelectableTokens, network])\n\n  // check Identity gas fees\n  useEffect(() => {\n\n    if (!gasData) return\n\n    const consolidatedTokens = consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs, tokensAllowances)\n\n    const permitsCount = consolidatedTokens.filter(t => t.selected && t.permittable && new BigNumber(t.allowance).isLessThan(t.amount)).length\n    const permittableTransfersCount = consolidatedTokens.filter(t => t.selected && !t.native && t.permittable).length\n    const regularTransfersCount = consolidatedTokens.filter(t => t.selected && !t.permittable && !t.native).length\n    const nativeTransfersCount = consolidatedTokens.filter(t => t.selected && t.native).length\n\n    const adjustedApprovalCost = network.id === 'arbitrum' ? 200000 : 0\n\n    const migrationTransactionsConsumption = (permitsCount + permittableTransfersCount > 0) ? 25000 + permitsCount * PERMIT_CONSUMPTION + permittableTransfersCount * TRANSFER_CONSUMPTION : 0\n    const signerTransactionsConsumption = (regularTransfersCount * (25000 + TRANSFER_CONSUMPTION + adjustedApprovalCost)) + (nativeTransfersCount * 25000)\n\n    const nativeRate = gasData.gasFeeAssets.native / 10 ** 18 // should decimals be returned in the API?\n\n    const gasFees = {}\n    GAS_SPEEDS.forEach(speed => {\n      let gasPrice = (gasData.gasPrice[speed] + (gasData.gasPrice.maxPriorityFeePerGas ? gasData.gasPrice.maxPriorityFeePerGas[speed] * 1 : 0))\n\n      const migrationTransactionsCost = migrationTransactionsConsumption * gasPrice\n      const migrationTransactionsCostUSD = migrationTransactionsCost * nativeRate\n\n      const signerTransactionsCost = signerTransactionsConsumption * gasPrice\n      const signerTransactionsCostUSD = signerTransactionsCost * nativeRate\n\n      gasFees[speed] = {\n        speed,\n        migrationTransactionsCost,\n        migrationTransactionsCostUSD,\n        signerTransactionsCost,\n        signerTransactionsCostUSD,\n        migrationTransactionsConsumption,\n        signerTransactionsConsumption\n      }\n    })\n\n    setEstimatedGasFees({\n      permitsCount,\n      permittableTransfersCount,\n      regularTransfersCount,\n      nativeTransfersCount,\n      gasFees,\n    })\n\n    const possibleFeeTokens = [\n      ZERO_ADDRESS,\n      ...gasData.gasFeeAssets.feeTokens.map(ft => ft.address)\n    ]\n\n    // includes existing tokens in identity portfolio + selected signer tokens, then filters by feeTokens\n    let usableTokens = consolidatedTokens.filter(t => {\n      return possibleFeeTokens.find(ft => ft.toLowerCase() === t.address.toLowerCase())\n    })\n\n    portfolio.tokens.forEach(pt => {\n      if (\n        // add to usableTokens, if token is present in the existing portfolio\n        possibleFeeTokens.find(ft => ft.toLowerCase() === pt.address.toLowerCase()) &&\n        // and if portfolio token is not already present\n        !usableTokens.find(t => t.address.toLowerCase() === pt.address.toLowerCase())) {\n        usableTokens.push({ ...pt, fromPortfolio: true }) // fromPortfolio = exists in portfolio but NOT in signer tokens\n      }\n    })\n\n    const usableFeeTokens = usableTokens\n      .map(t => {\n        let identityBalanceUSD = 0\n        let selectedAmountUSD = 0\n        if (t.fromPortfolio) {// if exists in portfolio only\n          identityBalanceUSD = t.balanceUSD\n        } else {\n          const identityAssets = portfolio?.tokens\n          if (identityAssets) {\n            const identityFeeAsset = identityAssets.find(it => it.address.toLowerCase() === t.address.toLowerCase())\n            identityBalanceUSD = identityFeeAsset?.balanceUSD || 0\n          } else {\n            console.warn('no identity assets!')\n          }\n          selectedAmountUSD = new BigNumber(t.amount).multipliedBy(t.rate).toNumber()\n        }\n\n        let isEnoughToCoverFees = {}\n\n        const selected = (!t.fromPortfolio && t.selected) || false\n\n        GAS_SPEEDS.forEach(speed => {\n          isEnoughToCoverFees[speed] = {\n            ifNotSelected: new BigNumber(identityBalanceUSD).isGreaterThan(gasFees[speed].migrationTransactionsCostUSD),\n            ifSelected: new BigNumber(identityBalanceUSD + selectedAmountUSD).isGreaterThan(gasFees[speed].migrationTransactionsCostUSD),\n            minimumSelectionAmount: t.rate > 0 ? new BigNumber(gasFees[speed].migrationTransactionsCostUSD).minus(identityBalanceUSD).dividedBy(t.rate).dividedBy(10 ** t.decimals).multipliedBy(1.0001).toNumber() : 0, // in case rate returned is 0 / adding some wei because precision loss with decimals switching to USD etc\n          }\n        })\n\n        return {\n          address: t.address,\n          name: t.name,\n          selected: selected,\n          identityBalanceUSD,\n          selectedAmountUSD,\n          isEnoughToCoverFees,\n        }\n      })\n    setSuggestedGasTokens(usableFeeTokens)\n\n  }, [selectableTokens, selectableTokensUserInputs, portfolio, gasData, selectedGasSpeed, tokensAllowances, network])\n\n\n  // getting gasPrice data from relayer\n  useEffect(() => {\n    fetchGet(`${relayerURL}/gasPrice/${network.id}`).then(gasData => {\n      setGasData(gasData.data)\n    }).catch(err => {\n      console.log('fetch error', err)\n    })\n  }, [relayerURL, network])\n\n\n  // getting erc20 token allowances\n  useEffect(() => {\n    const promises = selectableTokens.map(t => {\n      const provider = getProvider(network.id)\n      const tokenContract = new Contract(t.address, ERC20PermittableInterface, provider)\n\n      if (!t.native) {\n        return tokenContract.allowance(signerAccount, identityAccount)\n          .then((allowance) => {\n\n            let permittableData = false\n            if (PERMITTABLE_COINS[network.chainId]) {\n              permittableData = PERMITTABLE_COINS[network.chainId].find(p => p.address.toLowerCase() === t.address.toLowerCase()) || false\n            }\n\n            return {\n              address: t.address,\n              allowance: allowance.toString(),\n              permittable: permittableData\n            }\n          }).catch(err => {\n            console.log('err getting allowance', err)\n          })\n      }\n      return {\n        address: t.address,\n        allowance: 0,\n        permittable: false\n      }\n    })\n\n    Promise.all(promises).then(allowanceResults => {\n      setTokenAllowances(allowanceResults)\n    })\n\n  }, [identityAccount, network, selectableTokens, signerAccount])\n\n\n  useEffect(() => {\n    if (hidden) return\n    setModalButtons(\n      <>\n        <Button clear small icon={<MdClose/>} onClick={hideModal}>Close</Button>\n        {\n          (selectableTokensUserInputs.filter(a => a.selected).length > 0 && canCoverGasFees(suggestedGasTokens, selectedGasSpeed))\n            ? <Button small icon={<MdOutlineNavigateNext/>} className={'primary'}\n                      onClick={() => confirmTokenSelection()}>Move {selectableTokensUserInputs.filter(a => a.selected).length} assets</Button>\n            : <Button small icon={<MdOutlineNavigateNext/>} className={'primary disabled'}>Move assets</Button>\n        }\n      </>\n    )\n  }, [selectableTokensUserInputs, suggestedGasTokens, selectedGasSpeed, setModalButtons, hideModal, confirmTokenSelection, hidden])\n\n  const onAssetAmountChange = useCallback((val, item) => updateSelectableTokenUserInputs(item.address, (old) => {\n    if (val === '') {\n      return {\n        ...old,\n        humanAmount: 0,\n        amount: 0\n      }\n    }\n    if (\n      (val.endsWith('.') && val.split('.').length === 2)\n      || (val.split('.').length === 2 && val.endsWith('0'))\n    ) {\n      return {\n        ...old,\n        humanAmount: val,\n      }\n    }\n\n    if (!isNaN(val)) {\n      let newHumanAmount = new BigNumber(val).toFixed(item.decimals)\n      if (new BigNumber(newHumanAmount).multipliedBy(10 ** item.decimals).comparedTo(item.availableBalance) === 1) {\n        newHumanAmount = new BigNumber(item.availableBalance).dividedBy(10 ** item.decimals).toFixed(item.decimals)\n      }\n      // trim trailing . or 0\n      newHumanAmount = newHumanAmount.replace(/\\.?0+$/g, '')\n\n      return {\n        ...old,\n        humanAmount: newHumanAmount,\n        amount: new BigNumber(newHumanAmount).multipliedBy(10 ** item.decimals).toFixed(0)\n      }\n    }\n    return old\n  }), [updateSelectableTokenUserInputs])\n\n  // Stepper\n  useEffect(() => {\n\n    const steps = ['Selection']\n\n    const native = selectableTokensUserInputs.find(a => a.address.toLowerCase() === ZERO_ADDRESS && a.selected)\n    if (native) {\n      steps.push(`Send ${selectableTokens.find(t => t.address === native.address).name}`)\n    }\n\n    if (selectableTokensUserInputs.find(a => a.address.toLowerCase() !== ZERO_ADDRESS && a.selected)) {\n\n      let tokensTitleActions = []\n      if (selectableTokensUserInputs.find(a => a.selected && isPermittable(network.chainId, a.address))) tokensTitleActions.push('Permit')\n      if (selectableTokensUserInputs.find(a => a.selected && a.address.toLowerCase() !== ZERO_ADDRESS && !isPermittable(network.chainId, a.address))) tokensTitleActions.push('Send')\n\n      steps.push(tokensTitleActions.join(' and ') + ' tokens')\n\n      if (selectableTokensUserInputs.find(a => a.selected && isPermittable(network.chainId, a.address)))\n        steps.push('Transfer tokens')\n    }\n\n    if (steps.length === 1) {\n      steps.push('Send tokens')\n    }\n\n    setStepperSteps(steps)\n  }, [selectableTokens, selectableTokensUserInputs, setStepperSteps, network])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n      {\n        isLoading\n          ?\n          <div className={'content-center'}>\n            <h3 className={'mb-6'}>Loading assets...</h3>\n            <AmbireLoading/>\n          </div>\n          :\n          <div>\n            {\n              selectableTokens.length === 0\n                ? <div>No assets to migrate have been found</div>\n                :\n                <div>\n                  <div className={'mb-4'}>Please select the assets you would like to migrate from your signer wallet to\n                    your Ambire wallet\n                  </div>\n                  {\n                    consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs)\n                      .sort((a, b) => a.name < b.name ? -1 : 1)\n                      .map((item, index) => (\n                        <div className='migration-asset-row' key={index}>\n                          <div className={`migration-asset-select${item.selected ? ' checked' : ''}`}\n                               onClick={() => false}>\n                            <Checkbox\n                              id={`check-${item.address}`}\n                              label={<span className={'migration-asset-select-label'}>\n                                  <span className='migration-asset-select-icon'>\n                                    {\n                                      (failedImg.includes(item.icon) || !item.icon) ?\n                                        <GiToken size={18}/>\n                                        :\n                                        <img src={item.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                                          setFailedImg(failed => [...failed, item.icon])\n                                        }}/>\n                                    }\n                                </span>\n                                <span className='migration-asset-select-name'>{item.name}</span>\n                              </span>}\n                              checked={item.selected}\n                              onChange={() => toggleTokenSelection(item.address)}\n                            />\n                          </div>\n                          <div className='migration-asset-usd'>\n                            ${((item.amount) * item.rate).toFixed(2)}\n                          </div>\n                          <div className='migration-asset-amount'>\n                            <TextInput\n                              className={'migrate-amount-input'}\n                              value={item.humanAmount}\n                              onChange={(val) => onAssetAmountChange(val, item)}\n                            />\n                          </div>\n                        </div>\n                      ))\n                  }\n                  <div className={'custom-token-row mt-2'}>\n                    {\n                      isAddCustomTokenFormShown\n                        ? <div>\n                          {\n                            isCustomTokenPending\n                              ? <div className={'custom-token-message-fetching'}>\n                                <Loading/>\n                                Fetching custom token data...\n                              </div>\n                              : <>\n                                {\n                                  customTokenError && <div className={'error'}>{customTokenError}</div>\n                                }\n                                <div>\n                                  <TextInput\n                                    className={'custom-token-input'}\n                                    placeholder={'Enter custom token address'}\n                                    value={customTokenAddress}\n                                    onChange={(val) => {\n                                      setCustomTokenAddress(val)\n                                    }}\n                                    ref={customTokenInput}\n                                  />\n                                </div>\n                                <div className={'flex-row mt-2'}>\n                                  <Button small icon={<MdCancel/>} className={'buttonHollow danger align-right'}\n                                          onClick={() => {\n                                            setIsAddCustomTokenFormShown(false)\n                                            setCustomTokenAddress('')\n                                            setCustomTokenError(null)\n                                          }}>Cancel</Button>\n                                  <Button small icon={<MdOutlineAddCircleOutline/>} className={'primary ms-4'}\n                                          onClick={() => addCustomToken()}>Add</Button>\n                                </div>\n                              </>\n                          }\n                        </div>\n                        : <Button small icon={<MdOutlineAddCircleOutline/>} className={'clear align-right'}\n                                  onClick={() => setIsAddCustomTokenFormShown(true)}\n                        >Add custom token</Button>\n                    }\n                  </div>\n                  {\n                    !canCoverGasFees(suggestedGasTokens, selectedGasSpeed) && selectableTokensUserInputs.filter(a => a.selected).length > 0 &&\n                    <div className={'notification-hollow warning mt-3 mb-3'}>\n                      Your Ambire Wallet will not have enough fees to pay for the migration transaction.\n                      {\n                        !!getSuggestedGasTokensOfSpeed(suggestedGasTokens, selectedGasSpeed).length &&\n                        <div className={'mt-3'}>\n                          You should remove ERC20 tokens from the selection or add one of the following gas tokens :\n                          <ul className={'notification-gas-tokens'}>\n                            {getSuggestedGasTokensOfSpeed(suggestedGasTokens, selectedGasSpeed).map((t, index) => {\n                              return <li key={index}>\n                                <span className={'gas-token-suggestion'}\n                                      onClick={() => toggleTokenSelection(t.address, t.minimumSelectionAmount)}>\n                                  {t.name}\n                                  <span\n                                    className={'gas-token-amount'}> (min {t.minimumSelectionAmount.toFixed(6)})</span>\n                                </span>\n                              </li>\n                            })}\n                          </ul>\n                        </div>\n                      }\n                      {\n                        !!getSuggestedGasTokensAcceptableSpeeds(suggestedGasTokens).length &&\n                        <div>\n                          {!!getSuggestedGasTokensOfSpeed(suggestedGasTokens, selectedGasSpeed).length ? 'You can also' : 'Please'} select\n                          a slower gas speed ({getSuggestedGasTokensAcceptableSpeeds(suggestedGasTokens).join(', ')}).\n                        </div>\n                      }\n                    </div>\n                  }\n                  {\n                    estimatedGasFees &&\n                    <div className={'gas-estimation-block mt-4'}>\n                      <div className={'gas-estimation-block-title'}>Estimated gas fee</div>\n                      <ul className={'gas-estimation-selector'}>\n                        {\n                          Object.values(estimatedGasFees.gasFees).map((f, index) => {\n                              return (<li key={index} className={f.speed === selectedGasSpeed ? 'selected' : ''}\n                                          onClick={() => setSelectedGasSpeed(f.speed)}>{f.speed}</li>)\n                            }\n                          )\n                        }\n                      </ul>\n                      <table className={'gas-estimation-details'}>\n                        <tbody>\n                        <tr>\n                          <td>\n                            Migration fee\n                            {\n                              (!!estimatedGasFees.permittableTransfersCount || !!estimatedGasFees.permitsCount) &&\n                              <span className={'migration-actions'}>\n                                  (\n                                {\n                                  !!estimatedGasFees.permittableTransfersCount &&\n                                  <span>{estimatedGasFees.permittableTransfersCount} transfer{estimatedGasFees.permittableTransfersCount > 1 && 's'}{!!estimatedGasFees.permitsCount && ', '}</span>\n                                }\n                                {\n                                  !!estimatedGasFees.permitsCount &&\n                                  <span>{estimatedGasFees.permitsCount} permit{estimatedGasFees.permitsCount > 1 && 's'}</span>\n                                }\n                                )\n                                </span>\n                            }\n                          </td>\n                          <td\n                            className={'gas-estimation-details-amount'}>${estimatedGasFees.gasFees[selectedGasSpeed].migrationTransactionsCostUSD.toFixed(2)}</td>\n                        </tr>\n                        <tr>\n                          <td>\n                            Signer fee\n                            {\n                              (!!estimatedGasFees.nativeTransfersCount || !!estimatedGasFees.regularTransfersCount) &&\n                              <span className={'migration-actions'}>\n                                  <span>{estimatedGasFees.nativeTransfersCount + estimatedGasFees.regularTransfersCount} transfers</span>\n                              </span>\n                            }\n                          </td>\n                          <td\n                            className={'gas-estimation-details-amount'}>${estimatedGasFees.gasFees[selectedGasSpeed].signerTransactionsCostUSD.toFixed(2)}</td>\n                        </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  }\n                </div>\n            }\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationSelector\n","import './AssetsMigration.scss'\nimport { ethers } from 'ethers'\nimport { useCallback, useEffect, useState } from 'react'\nimport { getWallet } from 'lib/getWallet'\nimport { getProvider } from 'lib/provider'\nimport { Contract } from 'ethers'\nimport { FaCheck, FaHourglass } from 'react-icons/fa'\nimport Button from 'components/common/Button/Button'\n\nimport {\n  PERMITTABLE_COINS,\n  PERMIT_TYPE_DAI,\n  ERC20PermittableInterface,\n  EIP712DomainWithSalt\n} from 'consts/permittableCoins'\nimport { GiToken } from 'react-icons/gi'\nimport { MdOutlineNavigateBefore, MdOutlineNavigateNext } from 'react-icons/md'\nimport { ZERO_ADDRESS } from 'consts/specialAddresses'\nimport { fetchGet } from 'lib/fetch'\nimport BigNumber from 'bignumber.js'\n\nconst MAX_INT = '0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'\n\nconst AssetsMigrationPermitter = ({\n                                    addRequest,\n                                    identityAccount,\n                                    signer,\n                                    signerExtra,\n                                    network,\n                                    selectedTokensWithAllowance,\n                                    setError,\n                                    hideModal,\n                                    setStep,\n                                    setModalButtons,\n                                    relayerURL,\n                                    gasSpeed,\n                                    hidden,\n                                  }) => {\n\n  //storing user sign/send or rejection\n  const [tokensPermissions, setTokensPermissions] = useState([])\n\n  //storing transfer status for non permittable tokens\n  const [tokensTransfers, setTokensTransfers] = useState({})\n\n  //to be able to have UI feedback without trigerring useEffects\n  const [tokensPendingStatus, setTokensPendingStatus] = useState({})\n  //error display logic if a user has rejected one or more MM popup\n  const [hasRefusedOnce, setHasRefusedOnce] = useState(false)\n  const [lastRefusalError, setLastRefusalError] = useState(null)\n  const [failedImg, setFailedImg] = useState([])\n\n  const [hasCorrectAccountAndChainId, setHasCorrectAccountAndChainId] = useState(null)\n\n  const [currentGasPrice, setCurrentGasPrice] = useState(null)\n\n  const [wallet, setWallet] = useState(null)\n\n  //using a callback would return not up to date data + would trigger useEffect prompt loop while we do not want that\n  const getConsolidatedTokensPure = (selected, tokensPermissions = [], tokensTransfers = [], tokensPendingStatus = []) => {\n    return selected.filter(t => t.address !== ZERO_ADDRESS).map(t => {\n      let remapped = {\n        ...t,\n        signing: null,\n        signature: null,\n        sent: false,\n        pending: false,\n        allowance: 0,\n      }\n      if (tokensPermissions[t.address]) {\n        remapped.signing = tokensPermissions[t.address].signing\n        remapped.signature = tokensPermissions[t.address].signature\n      }\n\n      if (tokensTransfers[t.address]) {\n        remapped.sent = true\n      }\n\n      if (tokensPendingStatus[t.address]) {\n        remapped.pending = true\n      }\n\n      return remapped\n    })\n  }\n\n  const checkWalletConnection = useCallback(async () => {\n    return wallet?.isConnected(signer.address, network.chainId)\n      .then(connected => {\n        setHasCorrectAccountAndChainId(connected)\n        if (!connected) {\n          setError(<>Please make sure your signer wallet is unlocked, and connected with <b>{signer.address}</b> to the correct chain: <b>{network.id}</b></>)\n          return false\n        }\n        return true\n      })\n      .catch(e => {\n        setError('Could not check signer connection status: ' + e.error)\n        return false\n      })\n  }, [network, setError, signer, wallet])\n\n  //number of tokens that are ready to migrate (sent / permitted)\n  const readyTokensCount = useCallback(() => {\n    let count = 0\n    getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, []).forEach(t => {\n      if (t.permittable && t.signature) {\n        count++\n      } else if (t.sent) {\n        count++\n      }\n    })\n    return count\n  }, [selectedTokensWithAllowance, tokensPermissions, tokensTransfers])\n\n\n  //Offline signing MM prompt\n  const permitToken = useCallback(async (address) => {\n    const permittableToken = PERMITTABLE_COINS[network.chainId].find(a => a.address.toLowerCase() === address.toLowerCase())\n    if (permittableToken) {\n\n      const index = selectedTokensWithAllowance.findIndex(a => a.address === address)\n\n      if (index !== -1) {\n\n        const tokenToMigrate = selectedTokensWithAllowance[index]\n\n        //get ERC20 permittable nonce\n        const provider = getProvider(network.id)\n        const tokenContract = new Contract(address, ERC20PermittableInterface, provider)\n\n\n        const nonce = (await (\n          permittableToken.nonceFunction\n            ? tokenContract[permittableToken.nonceFunction](signer.address)\n            : tokenContract.nonces(signer.address)\n        )).toString()\n\n        //and name, for domain\n        const tokenName = await tokenContract.name()\n\n        //the quantity to permit\n        const value = tokenToMigrate.amount\n\n        let ERC2612PermitMessage = {\n          owner: signer.address,\n          spender: identityAccount,\n          value,\n          nonce: nonce,\n          deadline: MAX_INT,\n        }\n\n        //DAI reformatting\n        if (permittableToken.permitType === PERMIT_TYPE_DAI) {\n          ERC2612PermitMessage.allowed = true\n          delete ERC2612PermitMessage.value\n\n          ERC2612PermitMessage.holder = ERC2612PermitMessage.owner\n          delete ERC2612PermitMessage.owner\n\n          ERC2612PermitMessage.expiry = ERC2612PermitMessage.deadline\n          delete ERC2612PermitMessage.deadline\n        }\n\n        let domain = {\n          chainId: network.chainId,\n          verifyingContract: address,\n        }\n\n        if (permittableToken.name) {\n          domain.name = tokenName\n        }\n\n        if (permittableToken.version) {\n          domain.version = permittableToken.version\n        }\n\n        if (permittableToken.salt) {\n          domain.salt = permittableToken.salt\n        }\n\n        if (permittableToken.domainType === EIP712DomainWithSalt) {\n          delete domain.chainId\n        }\n\n        //UI pending status\n        setTokensPendingStatus(old => {\n          old[address] = true\n          return { ...old }\n        })\n\n        //sign\n        const result = await wallet._signTypedData(domain, { 'Permit': permittableToken.permitType }, ERC2612PermitMessage)\n          .catch(err => {\n            if (err?.code === 4001) {//User rejection\n              setTokensPermissions(old => {\n                old[address] = {\n                  ...old[address],\n                  signing: false,\n                  signature: null\n                }\n                return { ...old }\n              })\n              setHasRefusedOnce(true)\n            } else if (err?.code === -32603) {//bad network\n              if (err.message.includes('Not supported on this device')) {\n                setError('Your signer wallet does not support 712 signatures')\n              } else if (err.message.includes('must match the active chainId')) {\n                setError('Please connect your signser wallet to the correct network: ' + network.id)\n              } else {\n                setError(err.message)\n              }\n            } else {\n              setError(err.message)\n            }\n            setTokensPendingStatus(old => {\n              old[address] = false\n              return { ...old }\n            })\n          })\n\n        if (!result) return false\n\n        const rsv = {\n          r: result.slice(0, 66),\n          s: '0x' + result.slice(66, 130),\n          v: parseInt(result.slice(130, 132), 16),\n        }\n\n        let txData\n        if (permittableToken.permitType === PERMIT_TYPE_DAI) {\n          txData = ERC20PermittableInterface.encodeFunctionData('permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)', [\n            ERC2612PermitMessage.holder,\n            ERC2612PermitMessage.spender,\n            nonce,\n            ERC2612PermitMessage.expiry,\n            ERC2612PermitMessage.allowed,\n            rsv.v,\n            rsv.r,\n            rsv.s,\n          ])\n        } else {\n          txData = ERC20PermittableInterface.encodeFunctionData('permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)', [\n            ERC2612PermitMessage.owner,\n            ERC2612PermitMessage.spender,\n            value,\n            ERC2612PermitMessage.deadline,\n            rsv.v,\n            rsv.r,\n            rsv.s,\n          ])\n        }\n\n        //saving permit hexData for later transaction building\n        setTokensPermissions(old => {\n          old[address] = {\n            ...old[address],\n            signing: true,\n            signature: txData\n          }\n          return { ...old }\n        })\n\n        setTokensPendingStatus(old => {\n          old[address] = false\n          return { ...old }\n        })\n\n        return true\n      }//end if index found\n    }//end if is permittable\n  }, [network, selectedTokensWithAllowance, signer, identityAccount, setError, wallet])\n\n  //Send MM prompt\n  const sendToken = useCallback(async (address, waitForRcpt = false) => {\n\n    if (!(await checkWalletConnection())) return\n\n    const tokenToMigrate = selectedTokensWithAllowance.find(t => t.address === address)\n    if (!tokenToMigrate) return\n\n    const sendData = ERC20PermittableInterface.encodeFunctionData('transfer', [identityAccount, new BigNumber(tokenToMigrate.amount).toFixed(0)])\n\n    //UI pending status\n    setTokensPendingStatus(old => {\n      old[address] = true\n      return { ...old }\n    })\n\n    setLastRefusalError(null)\n    const transferResult = wallet.sendTransaction({\n      from: signer.address,\n      to: address,\n      data: sendData,\n      gasLimit: 80000,\n      gasPrice: currentGasPrice,\n      chainId: network.chainId,\n    }).then(async rcpt => {\n\n      setTokensPermissions(old => {\n        old[address] = {\n          ...old[address],\n          signing: true,\n        }\n        return { ...old }\n      })\n\n      if (waitForRcpt) {\n        await rcpt.wait()\n        setTokensTransfers(old => {\n          old[address] = true\n          return { ...old }\n        })\n\n        setTokensPendingStatus(old => {\n          old[address] = false\n          return { ...old }\n        })\n\n        setTokensPermissions(old => {\n          old[address] = {\n            ...old[address],\n            signing: false,\n          }\n          return { ...old }\n        })\n      }\n\n      return true\n    }).catch(err => {\n      setTokensPendingStatus(old => {\n        old[address] = false\n        return { ...old }\n      })\n\n      if (err.message.includes('underpriced')) { // not copying the whole JSON error returned by the rpc\n        setLastRefusalError('Transaction fee underpriced')\n      } else {\n        setLastRefusalError(err.message)\n      }\n\n      setHasRefusedOnce(true)\n\n      if (!tokensPermissions[address] || (tokensPermissions[address] && tokensPermissions[address].signing !== false)) {\n        setTokensPermissions(old => {\n          old[address] = {\n            ...old[address],\n            signing: false,\n          }\n          return { ...old }\n        })\n      }\n      return false\n    })\n\n    return !!transferResult\n\n  }, [wallet, identityAccount, tokensPermissions, selectedTokensWithAllowance, currentGasPrice, network, signer, checkWalletConnection])\n\n  //going to assets selection\n  const cancelMigration = useCallback(() => {\n    setError(null)\n    setTokensTransfers([])\n    setTokensPermissions([])\n    setHasRefusedOnce(false)\n    setStep(0)\n  }, [setError, setTokensPermissions, setTokensTransfers, setStep])\n\n  //batch transactions\n  const completeMigration = useCallback(() => {\n\n    getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, tokensPendingStatus).forEach(t => {\n\n      if (!t.permittable) return\n\n      if (!(t.allowance && ethers.BigNumber.from(t.allowance).gte(t.amount))) {\n        addRequest({\n          id: 'req-' + Math.random(),\n          chainId: network.chainId,\n          account: identityAccount,\n          type: 'eth_sendTransaction',\n          txn: {\n            to: t.address,\n            value: '0x0',\n            data: t.signature\n          }\n        })\n      }\n\n      const transferData = ERC20PermittableInterface.encodeFunctionData('transferFrom', [\n        signer.address,\n        identityAccount,\n        t.amount\n      ])\n\n      addRequest({\n        id: 'req-' + Math.random(),\n        chainId: network.chainId,\n        account: identityAccount,\n        type: 'eth_sendTransaction',\n        txn: {\n          to: t.address,\n          value: '0x0',\n          data: transferData\n        }\n      })\n    })\n\n    //reset assets migration status\n    cancelMigration()\n    hideModal()\n  }, [addRequest, cancelMigration, hideModal, identityAccount, network, selectedTokensWithAllowance, signer, tokensTransfers, tokensPendingStatus, tokensPermissions])\n\n  useEffect(() => {\n    setWallet(getWallet({\n      signer: signer,\n      signerExtra: signerExtra,\n      chainId: network.chainId\n    }))\n  }, [network, signer, signerExtra])\n\n  // check correctness of signer wallet before starting the chained popups\n  useEffect(() => {\n    checkWalletConnection()\n  }, [checkWalletConnection])\n\n  useEffect(() => {\n    const url = `${relayerURL}/gasPrice/${network.id}`\n\n    fetchGet(url).then(gasData => {\n      let gasPrice = gasData.data.gasPrice[gasSpeed]\n      if (gasData.data.gasPrice.maxPriorityFeePerGas) {\n        gasPrice += gasData.data.gasPrice.maxPriorityFeePerGas[gasSpeed]\n      }\n      setCurrentGasPrice(gasPrice)\n    }).catch(err => {\n      setError(err.message + ' ' + url)\n    })\n\n  }, [network, relayerURL, setError, gasSpeed])\n\n  //Automatic permit ask chain\n  useEffect(() => {\n\n    //Skip initial useEffect\n    if (!hasCorrectAccountAndChainId) return\n    if (!Object.values(tokensTransfers).length) return\n    if (!currentGasPrice) return\n\n    const tokensWithPermission = getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, []).map(t => {\n      return {\n        address: t.address,\n        signed: t.signing,\n        permittable: t.permittable\n      }\n    })\n\n    const nextTokenToAsk = tokensWithPermission.find(a => a.signed === null)\n\n    if (nextTokenToAsk) {\n      if (nextTokenToAsk.permittable) {\n        permitToken(nextTokenToAsk.address)\n      } else {\n        //avoid MM popup losing focus when immediately running the next action\n        setTimeout(() => {\n          sendToken(nextTokenToAsk.address, true)\n        }, 150)\n      }\n    }\n  }, [selectedTokensWithAllowance, permitToken, sendToken, tokensPermissions, tokensTransfers, hasCorrectAccountAndChainId, currentGasPrice])\n\n  useEffect(() => {\n    if (!selectedTokensWithAllowance.length) return\n    const initialTokensTransfers = {}\n    selectedTokensWithAllowance.forEach(t => {\n      initialTokensTransfers[t.address] = false\n    })\n    setTokensTransfers(initialTokensTransfers)\n  }, [selectedTokensWithAllowance, setTokensTransfers])\n\n  useEffect(() => {\n    if (hasRefusedOnce) {\n      setError('Every asset below needs to be sent or permitted to complete the migration' + (lastRefusalError ? ' (' + lastRefusalError + ')' : ''))\n    }\n  }, [hasRefusedOnce, setError, lastRefusalError])\n\n\n  //Clearing UI error if all the tokens are validated\n  useEffect(() => {\n    if (readyTokensCount() === selectedTokensWithAllowance.length) {\n      setError(null)\n    }\n  }, [readyTokensCount, selectedTokensWithAllowance, setError])\n\n  useEffect(() => {\n    if (hidden) return\n    setModalButtons(\n      <>\n        <Button\n          className={'clear'}\n          icon={<MdOutlineNavigateBefore/>}\n          onClick={() => cancelMigration()}\n        >Back</Button>\n        {\n          selectedTokensWithAllowance.find(t => t.permittable)\n            ? (\n              readyTokensCount() === getConsolidatedTokensPure(selectedTokensWithAllowance).length\n                ?\n                <Button\n                  className={'primary'}\n                  icon={<MdOutlineNavigateNext/>}\n                  onClick={() => completeMigration()}\n                >Move tokens</Button>\n                :\n                <Button\n                  className={'primary disabled'}\n                  icon={<MdOutlineNavigateNext/>}\n                >Move tokens</Button>\n            )\n            : (\n              readyTokensCount() === getConsolidatedTokensPure(selectedTokensWithAllowance).length\n                ?\n                <Button\n                  className={'primary'}\n                  icon={<MdOutlineNavigateNext/>}\n                  onClick={() => hideModal()}\n                >Close</Button>\n                :\n                <Button\n                  className={'primary disabled'}\n                  icon={<MdOutlineNavigateNext/>}\n                >Complete</Button>\n            )\n        }\n      </>\n    )\n  }, [cancelMigration, completeMigration, readyTokensCount, selectedTokensWithAllowance, setModalButtons, hidden, hideModal])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n      {\n        readyTokensCount() < getConsolidatedTokensPure(selectedTokensWithAllowance).length\n          ? <div\n            className='small-asset-notification mb-3 warning'>{`${getConsolidatedTokensPure(selectedTokensWithAllowance).length - readyTokensCount()} actions left to complete the migration`}</div>\n          : <div className='small-asset-notification mb-3 success'>\n            {\n              selectedTokensWithAllowance.find(t => t.permittable)\n                ? 'Your tokens are ready to be migrated'\n                : 'Your tokens were migrated. You can close this window'\n            }\n          </div>\n      }\n      {getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, tokensPendingStatus).map((item, index) => (\n        <div className='migration-asset-row' key={index}>\n          <span className='migration-asset-select-icon migration-asset-select-icon-permit'>\n            {\n              (!item.icon || failedImg.includes(item.icon)) ?\n                <GiToken size={18}/>\n                :\n                <img src={item.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                  setFailedImg(failed => [...failed, item.icon])\n                }}/>\n            }\n          </span>\n          <div className='migration-asset-name'>\n            {item.name}\n          </div>\n          <div className='migration-asset-amount'>\n            {new BigNumber(item.amount).div(10 ** item.decimals).toFixed()} <span\n            className={'migration-asset-amount-usd'}>(${((item.amount) * item.rate).toFixed(2)})</span>\n          </div>\n          <div className='separator'>\n\n          </div>\n          <div>\n            {!((item.allowance && ethers.BigNumber.from(item.allowance).gte(item.amount)) || item.sent)\n              ?\n              <>\n                {item.permittable\n                  ? (\n                    <>\n                      {!item.signature && !item.pending && <button className={'buttonComponent button-small secondary'}\n                                                                   onClick={() => permitToken(item.address)}>Permit</button>}\n                      {!item.signature && item.pending &&\n                        <div className={'migration-permitted warning'}><FaHourglass/> Permitting...</div>}\n                      {item.signature && <div className={'migration-permitted'}><FaCheck/> Permitted</div>}\n                    </>\n                  )\n                  : (\n                    <>\n                      {(item.pending || item.signing)\n                        ? <div className={'migration-permitted warning'}><FaHourglass/> Sending...</div>\n                        :\n                        <Button className={'button-small secondary'}\n                                onClick={() => sendToken(item.address)}>\n                          Send\n                        </Button>\n                      }\n                    </>\n                  )\n                }\n              </>\n              :\n              <div className={'migration-permitted'} onClick={() => sendToken(item.address)}><FaCheck/> Sent\n              </div>\n            }\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default AssetsMigrationPermitter\n","import './AssetsMigration.scss'\nimport { useCallback, useEffect, useState } from 'react'\nimport { getWallet } from 'lib/getWallet'\nimport { TextInput, Button, Loading } from 'components/common'\n\nimport { GiToken } from 'react-icons/gi'\nimport BigNumber from 'bignumber.js'\nimport { fetchGet } from 'lib/fetch'\nimport { MdOutlineNavigateNext, MdClose, MdOutlineNavigateBefore } from 'react-icons/md'\n\nconst AssetsMigrationNative = ({\n  identityAccount,\n  signer,\n  signerExtra,\n  network,\n  nativeTokenData,\n  setSelectedTokensWithAllowance,\n  selectedTokensWithAllowance,\n  setError,\n  setStep,\n  hasERC20Tokens,\n  hideModal,\n  relayerURL,\n  setModalButtons,\n  setBeforeCloseModalHandler,\n  gasSpeed,\n  hidden,\n}) => {\n\n  const [failedImg, setFailedImg] = useState([])\n  const [hasMigratedNative, setHasMigratedNative] = useState(false)\n  const [isMigrationPending, setIsMigrationPending] = useState(false)\n  const [nativeAmount, setNativeAmount] = useState('0')\n  const [maxRecommendedAmount, setMaxRecommendedAmount] = useState(null)\n  const [transactionEstimationCost, setTransactionEstimationCost] = useState('0')\n  const [nativeHumanAmount, setNativeHumanAmount] = useState('0')\n\n  const [hasModifiedAmount, setHasModifiedAmount] = useState(false)\n\n  const [currentGasPrice, setCurrentGasPrice] = useState(null)\n\n  let wallet\n  try {\n    wallet = getWallet({\n      signer: signer,\n      signerExtra: signerExtra,\n      chainId: network.chainId\n    })\n  } catch (err) {\n    // in case of no window.ethereum was injected from extension\n    setError('No Web3 wallet connected. Please connect a Web3 wallet and reload the page')\n  }\n\n  //going back to assets selection\n  const cancelMigration = useCallback(() => {\n    setStep(0)\n    setSelectedTokensWithAllowance([])\n  }, [setSelectedTokensWithAllowance, setStep])\n\n  const continueMigration = useCallback(() => {\n    setStep(2)\n  }, [setStep])\n\n  const erc20TransfersCount = (selectedTokensWithAllowance) => {\n    return selectedTokensWithAllowance.filter(t => t.selected && !t.permittable && !t.native).length\n  }\n\n  //Pops MM modal to send native to Identity\n  const migrateNative = useCallback(async () => {\n    if (!wallet) return\n    setError(null)\n    setIsMigrationPending(true)\n\n    if (!hasERC20Tokens) {\n      setBeforeCloseModalHandler(null)\n    }\n\n    let hasCorrectChainAndAccount = await wallet.isConnected(signer.address, network.chainId).catch(e => {\n      setError('Could not check signer connection status: ' + e.error)\n    })\n\n    if (hasCorrectChainAndAccount) {\n      wallet.sendTransaction({\n        from: signer.address,\n        to: identityAccount,\n        gasLimit: 25000 + (network.id === 'arbitrum' ? 200000 : 0),\n        gasPrice: currentGasPrice,\n        value: '0x' + new BigNumber(nativeAmount).toString(16),\n        chainId: network.chainId\n      }).then(async rcpt => {\n        await rcpt.wait()\n        setHasMigratedNative(true)\n        setIsMigrationPending(false)\n        return true\n      }).catch(err => {\n        setHasMigratedNative(false)\n        setIsMigrationPending(false)\n\n        if (err && err.message.includes('must provide an Ethereum address')) {\n          setError(`Make sure your wallet is unlocked and connected with ${signer.address}.`)\n        } else {\n          setError('Native asset migration failed: ' + err.message)\n        }\n\n        return false\n      })\n    } else {\n      setError(<>Please make sure your signer wallet is unlocked, and connected with <b>{signer.address}</b> to the correct chain: <b>{network.id}</b></>)\n      setIsMigrationPending(false)\n    }\n  }, [wallet, setError, hasERC20Tokens, network, setBeforeCloseModalHandler, signer, identityAccount, nativeAmount, currentGasPrice])\n\n  const updateAmount = useCallback((amount) => {\n    let newHumanAmount = new BigNumber(amount).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals).replace(/\\.?0+$/g, '')\n\n    setNativeHumanAmount(newHumanAmount)\n    setNativeAmount(amount)\n    setHasModifiedAmount(true)\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    const url = `${relayerURL}/gasPrice/${network.id}`\n\n    fetchGet(url).then(gasData => {\n      let gasPrice = gasData.data.gasPrice[gasSpeed]\n      if (gasData.data.gasPrice.maxPriorityFeePerGas) {\n        gasPrice += gasData.data.gasPrice.maxPriorityFeePerGas[gasSpeed]\n      }\n      const nativeTransactionCost = gasPrice * 25000\n\n      const regularTransfersCount = erc20TransfersCount(selectedTokensWithAllowance)\n      const transfersTransactionCost = regularTransfersCount * gasPrice * (25000 + 52000)\n\n      setTransactionEstimationCost(new BigNumber((nativeTransactionCost + transfersTransactionCost).toFixed(0)).toFixed(0))\n      const recommendedBN = new BigNumber(nativeTokenData.availableBalance).minus((nativeTransactionCost + transfersTransactionCost))\n      setMaxRecommendedAmount(recommendedBN.gte(0) ? recommendedBN.toFixed(0) : 0)\n      setCurrentGasPrice(gasPrice)\n    }).catch(err => {\n      setError(err.message + ' ' + url)\n    })\n\n  }, [setTransactionEstimationCost, setMaxRecommendedAmount, nativeTokenData, network, relayerURL, setError, gasSpeed, selectedTokensWithAllowance])\n\n  const onAmountChange = useCallback((val) => {\n    setHasModifiedAmount(true)\n    if (val === '') {\n      setNativeHumanAmount(0)\n      setNativeAmount(0)\n      return\n    }\n    if (\n      (val.endsWith('.') && val.split('.').length === 2)\n      || (val.split('.').length === 2 && val.endsWith('0'))\n    ) {\n      setNativeHumanAmount(val)\n      return\n    }\n\n    if (!isNaN(val)) {\n      let newHumanAmount = new BigNumber(val).toFixed(nativeTokenData.decimals)\n      if (new BigNumber(newHumanAmount).multipliedBy(10 ** nativeTokenData.decimals).comparedTo(nativeTokenData.availableBalance) === 1) {\n        newHumanAmount = new BigNumber(nativeTokenData.availableBalance).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals)\n      }\n      //trim trailing . or 0\n      newHumanAmount = newHumanAmount.replace(/\\.?0+$/g, '')\n\n      setNativeHumanAmount(newHumanAmount)\n      setNativeAmount(new BigNumber(newHumanAmount).multipliedBy(10 ** nativeTokenData.decimals).toFixed(0))\n    }\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    const initialHumanAmount = new BigNumber(nativeTokenData.amount).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals).replace(/\\.?0+$/g, '')\n    setNativeHumanAmount(initialHumanAmount)\n    setNativeAmount(nativeTokenData.amount)\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    if (hidden) return\n    const getDisplayedButtons = () => {\n      let buttons = []\n      if (hasMigratedNative) {\n        if (hasERC20Tokens) {\n          buttons.push(<Button\n            icon={<MdOutlineNavigateNext/>}\n            className={'primary full'}\n            onClick={() => continueMigration()}\n          >Next</Button>)\n        } else {\n          buttons.push(<Button\n            icon={<MdClose/>}\n            className={'primary full'}\n            onClick={() => hideModal()}\n          >Close</Button>)\n        }\n      } else if (!wallet) { // will have to restart the process anyway as web3.ethereum is not injected (not to confuse with not unlocked)\n        buttons.push(<Button\n          icon={<MdClose/>}\n          className={'clear full'}\n          onClick={() => hideModal()}\n        >Close</Button>)\n      } else {\n        buttons.push(<Button\n          icon={<MdOutlineNavigateBefore/>}\n          className={'clear'}\n          onClick={() => cancelMigration()}\n          key='0'\n        >Back</Button>)\n\n        if (isMigrationPending) {\n          buttons.push(<Button\n            icon={<Loading/>}\n            className={'primary disabled'}\n            key='1'\n          >Moving {nativeTokenData.name}...</Button>)\n        } else {\n          buttons.push(<Button\n            icon={<MdOutlineNavigateNext/>}\n            className={'primary'}\n            onClick={() => migrateNative()}\n            key='1'\n          >Move {nativeTokenData.name}</Button>)\n        }\n      }\n      return buttons\n    }\n\n    setModalButtons(getDisplayedButtons())\n  }, [hasMigratedNative, hasERC20Tokens, setModalButtons, hideModal, isMigrationPending, cancelMigration, migrateNative, continueMigration, wallet, nativeTokenData, hidden])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n\n      {\n        wallet &&\n        <>\n          <div className={'migration-native-title mb-4'}>\n            <div className='migration-native-asset-icon'>\n              {\n                failedImg.includes(nativeTokenData.icon) ?\n                  <GiToken size={64}/>\n                  :\n                  <img src={nativeTokenData.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                    setFailedImg(failed => [...failed, nativeTokenData.icon])\n                  }}/>\n              }\n            </div>\n            <div className='migration-native-title-asset-name'>Migrate native asset <b>{nativeTokenData.name}</b></div>\n          </div>\n\n          {\n            hasMigratedNative\n              ?\n              <>\n                <div className={'small-asset-notification success'}>Migration of your {nativeTokenData.name} was\n                  successful\n                </div>\n              </>\n              :\n              <>\n                <div className={'migration-native-row'}>\n                  <span className={'migration-native-row-key'}>\n                    Current balance\n                  </span>\n                  <span className={'migration-native-selection'}\n                        onClick={() => updateAmount(nativeTokenData.availableBalance)}>\n                    {new BigNumber(nativeTokenData.availableBalance).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                  </span>\n                </div>\n\n                <div className={'migration-native-row'}>\n                  <span className={'migration-native-row-key'}>Amount to migrate</span>\n                  {\n                    (hasModifiedAmount || (maxRecommendedAmount !== null && nativeAmount > maxRecommendedAmount))\n                      ?\n                      <TextInput\n                        className={'migrate-amount-input'}\n                        value={nativeHumanAmount}\n                        onChange={onAmountChange}\n                      />\n                      :\n                      <div>{nativeHumanAmount}</div>\n                  }\n                </div>\n\n                {\n                  maxRecommendedAmount !== null && nativeAmount > maxRecommendedAmount &&\n                  <div className={'notification-hollow warning mt-4'}>\n                    <div>\n                      {\n                        !!erc20TransfersCount(selectedTokensWithAllowance)\n                          ? 'Signer transactions cost'\n                          : 'Current Transaction cost'\n                      }\n                      :\n                      ~{new BigNumber(transactionEstimationCost).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                      <span\n                        className={'migration-native-usd'}> (${new BigNumber(transactionEstimationCost).multipliedBy(nativeTokenData.rate).toFixed(2)})</span>\n                    </div>\n\n                    <div className={'mt-3 mb-3'}>\n                      {\n                        maxRecommendedAmount > 0\n                          ?\n                          <>\n                            <span>You should migrate up to </span>\n                            <span className={'migration-native-selection'} onClick={() => updateAmount(maxRecommendedAmount)}>\n                              {new BigNumber(maxRecommendedAmount).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                            </span>\n                            <span> because will you need funds to pay the transaction costs.</span>\n                          </>\n                          :\n                          <span>You do not have enough funds to pay the transaction fee.</span>\n                      }\n                    </div>\n                  </div>\n                }\n\n                {\n                  (isMigrationPending && hasERC20Tokens) &&\n                  <div className={'notification-hollow info mt-4'}>\n                    Waiting for the transaction to be mined before continuing migration...\n                  </div>\n                }\n                {\n                  (isMigrationPending && !hasERC20Tokens) &&\n                  <div className={'notification-hollow info mt-4'}>\n                    The amount of {nativeTokenData.name} will be updated in your wallet, once the transaction has been\n                    confirmed and mined.\n                    If you confirmed your transaction, you can already close this window\n                  </div>\n                }\n              </>\n          }\n        </>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationNative\n","import './AssetsMigration.scss'\nimport { useEffect, useState } from 'react'\nimport AssetsMigrationSelector from './AssetsMigrationSelector'\nimport AssetsMigrationPermitter from './AssetsMigrationPermitter'\nimport AssetsMigrationNative from './AssetsMigrationNative'\nimport { PERMITTABLE_COINS } from 'consts/permittableCoins'\nimport { MdClose, MdOutlineNavigateBefore } from 'react-icons/md'\nimport { Button } from 'components/common'\n\nconst AssetsMigration = ({ addRequest, selectedAccount, accounts, network, hideModal, relayerURL, portfolio, setModalButtons, setModalSteps, setBeforeCloseModalHandler }) => {\n\n  const [selectedTokensWithAllowance, setSelectedTokensWithAllowance] = useState([])\n  const [nativeTokenData, setNativeTokenData] = useState(null)\n  const [hasERC20Tokens, setHasERC20Tokens] = useState(false)\n\n  const [isSelectionConfirmed, setIsSelectionConfirmed] = useState(false)\n  const [step, setStep] = useState(0)\n  const [stepperSteps, setStepperSteps] = useState([])\n  const [error, setError] = useState(null)\n\n  const [showCloseConfirmation, setShowCloseConfirmation] = useState(false)\n\n  const [gasSpeed, setGasSpeed] = useState(null)\n\n\n  //to get signer\n  const currentAccount = accounts.find(a => a.id === selectedAccount)\n\n  //clear error and reset tokens\n  useEffect(() => {\n    if (step === 0) {\n      setError(null)\n      setSelectedTokensWithAllowance([])\n      setNativeTokenData(null)\n      setHasERC20Tokens(false)\n      setGasSpeed(null)\n      setBeforeCloseModalHandler(null)\n    }\n  }, [network, selectedAccount, step, setBeforeCloseModalHandler])\n\n  useEffect(() => {\n    if (isSelectionConfirmed) {\n      setIsSelectionConfirmed(false)\n\n      //the non permittable, promise wait all\n      setNativeTokenData(selectedTokensWithAllowance.find(t => t.native))\n      setHasERC20Tokens(!!selectedTokensWithAllowance.find(t => !t.native))\n    }\n  }, [isSelectionConfirmed, currentAccount, selectedTokensWithAllowance, network, selectedAccount])\n\n  useEffect(() => {\n    let stepIndex = step\n\n    if (step > 0 && !nativeTokenData) {\n      stepIndex -= 1\n    }\n\n    setModalSteps({\n      steps: stepperSteps.map(s => ({ name: s })),\n      stepIndex\n    })\n  }, [nativeTokenData, setModalSteps, step, stepperSteps])\n\n  useEffect(() => {\n    const beforeCloseHandle = () => {\n      setShowCloseConfirmation(true)\n      setModalButtons([\n        (<Button\n          icon={<MdOutlineNavigateBefore/>}\n          className={'clear'}\n          onClick={() => setShowCloseConfirmation(false)}\n          key='0'\n        >Back</Button>),\n        (<Button\n          icon={<MdClose/>}\n          className={'danger'}\n          onClick={() => hideModal()}\n          key='1'\n        >Close</Button>)\n      ])\n    }\n\n    if (step > 0) {\n      setBeforeCloseModalHandler(() => beforeCloseHandle)\n    }\n  }, [step, setBeforeCloseModalHandler, setModalButtons, hideModal, showCloseConfirmation])\n\n  return (\n    <div>\n      {\n        error && <div className={'mt-3 error'}>{error}</div>\n      }\n      <div id='assets-migration'>\n        {\n          showCloseConfirmation &&\n          <div className='notification-hollow warning mt-4'>\n            By closing this window, your progress will be lost. Are you sure you want to close this window?\n          </div>\n        }\n        {\n          step === 0 && <AssetsMigrationSelector\n            hidden={showCloseConfirmation}\n            signerAccount={currentAccount.signer.address}\n            identityAccount={selectedAccount}\n            network={network}\n            PERMITTABLE_COINS={PERMITTABLE_COINS}\n            setIsSelectionConfirmed={setIsSelectionConfirmed}\n            setStep={setStep}\n            portfolio={portfolio}\n            relayerURL={relayerURL}\n            setModalButtons={setModalButtons}\n            hideModal={hideModal}\n            setError={setError}\n            setSelectedTokensWithAllowance={setSelectedTokensWithAllowance}\n            setStepperSteps={setStepperSteps}\n            setGasSpeed={setGasSpeed}\n          />\n        }\n        {step === 1 && nativeTokenData &&\n          <AssetsMigrationNative\n            hidden={showCloseConfirmation}\n            signer={currentAccount.signer}\n            identityAccount={selectedAccount}\n            network={network}\n            addRequest={addRequest}\n            signerExtra={currentAccount.signerExtra}\n            setError={setError}\n            nativeTokenData={nativeTokenData}\n            hideModal={hideModal}\n            setStep={setStep}\n            relayerURL={relayerURL}\n            hasERC20Tokens={hasERC20Tokens}\n            setModalButtons={setModalButtons}\n            setSelectedTokensWithAllowance={setSelectedTokensWithAllowance}\n            selectedTokensWithAllowance={selectedTokensWithAllowance}\n            setBeforeCloseModalHandler={setBeforeCloseModalHandler}\n            gasSpeed={gasSpeed}\n          />\n        }\n        {step === 2 &&\n          <AssetsMigrationPermitter\n            hidden={showCloseConfirmation}\n            signer={currentAccount.signer}\n            identityAccount={selectedAccount}\n            network={network}\n            addRequest={addRequest}\n            PERMITTABLE_COINS={PERMITTABLE_COINS}\n            signerExtra={currentAccount.signerExtra}\n            setError={setError}\n            selectedTokensWithAllowance={selectedTokensWithAllowance}\n            hideModal={hideModal}\n            setStep={setStep}\n            setModalButtons={setModalButtons}\n            gasSpeed={gasSpeed}\n            relayerURL={relayerURL}\n          />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AssetsMigration\n","import { useModals } from 'hooks'\nimport { Modal, Stepper } from 'components/common'\n\nimport AssetsMigration from 'components/Wallet/AssetsMigration/AssetsMigration'\nimport { useState } from 'react'\n\nconst AssetsMigrationModal = ({ addRequest, selectedAccount, selectedNetwork, accounts, relayerURL, portfolio }) => {\n  const { hideModal, setBeforeCloseModalHandler } = useModals()\n\n  const [modalButtons, setModalButtons] = useState(null)\n  const [modalSteps, setModalSteps] = useState({ steps: [], stepIndex: 0})\n\n  const getModalTitle = () => {\n    return (<div>\n      <span>Migrate Assets</span>\n      <Stepper steps={modalSteps.steps} currentStep={modalSteps.stepIndex} noLabels={false}/>\n    </div>)\n  }\n\n  return (\n    <Modal id='asset-migration-modal' title={getModalTitle()} buttons={modalButtons} >\n      <AssetsMigration\n        addRequest={addRequest}\n        selectedAccount={selectedAccount}\n        network={selectedNetwork}\n        accounts={accounts}\n        hideModal={hideModal}\n        relayerURL={relayerURL}\n        portfolio={portfolio}\n        setModalButtons={setModalButtons}\n        setModalSteps={setModalSteps}\n        setBeforeCloseModalHandler={setBeforeCloseModalHandler}\n      />\n    </Modal>\n  )\n}\n\nexport default AssetsMigrationModal\n","import './AssetsMigration.scss'\nimport assetMigrationDetector from 'lib/assetMigrationDetector'\nimport AssetsMigrationModal from 'components/Modals/AssetsMigrationModal/AssetsMigrationModal'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useModals } from 'hooks'\nimport { FaTimes } from 'react-icons/fa'\nimport { getWallet } from 'lib/getWallet'\n\nconst AssetsMigrationBanner = ({ addRequest, selectedAccount, accounts, selectedNetwork, relayerURL, portfolio, closeable = false, linkMargin = false, useStorage }) => {\n\n  const [hasSignerAssets, setHasSignerAssets] = useState(false)\n  const [migrationMessageSeen, setMigrationMessageSeen] = useState(false)\n  const { showModal } = useModals()\n  const [migrationMessageSeenStorage, setMigrationMessageSeenStorage] = useStorage({key: 'migrationSeen', defaultValue:{}})\n\n  // in the meantime that we integrate HW wallets...\n  const currentAccount = accounts.find(a => a.id === selectedAccount)\n  let wallet\n  try {\n    wallet = getWallet({\n      signer: currentAccount.signer,\n      signerExtra: currentAccount.signerExtra,\n      chainId: selectedNetwork.chainId\n    })\n  } catch (err) {\n    // in case of no window.ethereum was injected from extension\n  }\n\n  const closeMigrationMessage = useCallback(() => {\n    setMigrationMessageSeen(true)\n    setMigrationMessageSeenStorage((old) => {\n      old[selectedAccount + selectedNetwork.id] = true\n      return old\n    })\n  }, [selectedAccount, selectedNetwork, setMigrationMessageSeenStorage])\n\n  //fetching relevant assets\n  useEffect(() => {\n    let unmounted = false\n\n    setHasSignerAssets(false)\n    const checkSignerAssets = ({ networkId, identityAccount, accounts }) => {\n      const currentAccount = accounts.find(a => a.id === identityAccount)\n      if (!currentAccount.signer) return\n\n      assetMigrationDetector({ networkId: networkId, account: currentAccount.signer.address }).then(assets => {\n        if (unmounted) return\n        const relevantAssets = assets.filter(a => a.balanceUSD > 0.001)\n        setHasSignerAssets(!!relevantAssets.length)\n      }).catch(err => {\n        console.error(err)\n      })\n    }\n\n    checkSignerAssets({ identityAccount: selectedAccount, networkId: selectedNetwork.id, accounts })\n\n    return () => unmounted = true\n  }, [selectedAccount, selectedNetwork, accounts])\n\n  //checking if closable message has been seen(closed) or not\n  useEffect(() => {\n    setMigrationMessageSeen(closeable && !!migrationMessageSeenStorage[selectedAccount + selectedNetwork.id])\n  }, [closeable, selectedAccount, selectedNetwork, migrationMessageSeenStorage])\n  \n  // We either have a provider (web3) or we use a supported HW wallet\n  const supportedHWWalletTypes = ['ledger', 'trezor', 'Lattice']\n  const shouldShow = wallet?.provider|| (currentAccount.signerExtra && supportedHWWalletTypes.includes(currentAccount.signerExtra.type))\n  if (!shouldShow) return (<></>)\n\n  return (\n    (hasSignerAssets && !migrationMessageSeen) &&\n    <div className={'migration-banner'}>\n      <div className='migration-banner-message'>\n        <div>We detected that your signer account has tokens that can be transferred to your Ambire account. We recommend doing this in order to maximize your $WALLET rewards.</div>\n        <span className={'link' + (linkMargin ? ' link-margin' : '')} onClick={() => {\n          showModal(<AssetsMigrationModal\n            addRequest={addRequest}\n            selectedNetwork={selectedNetwork}\n            selectedAccount={selectedAccount}\n            accounts={accounts}\n            relayerURL={relayerURL}\n            portfolio={portfolio}\n          />)\n        }}>Click here to migrate those tokens</span>\n      </div>\n      {\n        closeable &&\n        <div className={'migration-banner-close'}><FaTimes onClick={() => closeMigrationMessage()}/></div>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationBanner\n"],"sourceRoot":""}