{"version":3,"sources":["components/Modals/InputModal/InputModal.js","components/Plugins/GnosisSafeApps/GnosisSafeApps.js","components/Wallet/TopBar/Accounts/Accounts.js","components/Wallet/TopBar/Networks/Networks.js","lib/permissions.js","lib/dappsUtils.js","components/Wallet/TopBar/DApps/DApps.js","components/Wallet/TopBar/Links/Links.js","hooks/useDynamicModals.js","components/Modals/WalletTokenModal/MultiplierBadges.js","components/Modals/WalletTokenModal/WalletTokenModal.js","components/Wallet/TopBar/WalletTokenButton/WalletTokenButton.js","resources/dapps.svg","components/Wallet/TopBar/TopBar.js","components/Modals/PermissionsModal/PermissionsModal.js","components/Modals/UnsupportedDAppsModal/UnsupportedDAppsModal.js","components/Wallet/GasIndicator/GasIndicator.js","components/Wallet/SideBar/SideBar.js","components/Modals/AddCustomDappModal/AddCustomDappModal.jsx","components/Wallet/DappsCatalog/DappsCatalog.js","components/Wallet/Wallet.js","components/Plugins/GnosisSafeApps/GnosisSafeAppIframe.js","components/Modals/WalletTokenModal/UnbondModal/assets/circle.svg","components/Modals/WalletTokenModal/UnbondModal/UnbondModal.js"],"names":["InputModal","title","inputs","onClose","hideModal","useModals","useState","isDisabled","setDisabled","inputsFields","map","input","ref","createRef","onInput","isFormValid","validate","current","value","every","v","buttons","clear","small","icon","onClick","disabled","values","id","label","placeholder","dapps","name","url","logo","desc","GnosisSafeApps","network","selectedAcc","gnosisConnect","gnosisDisconnect","showModal","splitUrl","window","location","hash","split","passedDapp","length","find","d","slice","selectedApp","setSelectedApp","useLocalStorage","key","defaultValue","customPlugins","setCustomPlugins","reinitUrl","href","addPlugin","useCallback","newDapp","customId","Date","now","newPlugins","removeCustomPlugin","filter","x","inputModal","useEffect","className","mini","dapp","index","red","style","backgroundImage","GnosisSafeAppIframe","removeApp","Accounts","accounts","selectedAddress","onSelectAcc","onRemoveAccount","hidePrivateValue","userSorting","setUserSorting","addToast","useToasts","logoutWarning","setLogoutWarning","closed","setClosed","isMobileScreen","useCheckMobileScreen","sortType","useDragAndDrop","list","prev","items","dragStart","dragEnter","dragTarget","target","handle","drop","sortedAccounts","sort","a","b","indexOf","shortenedAddress","address","isActive","toIcon","seed","blockies","toDataURL","walletType","signerExtra","type","copyAddress","navigator","clipboard","writeText","open","onOpen","color","cursor","i","email","signer","draggable","onDragStart","e","contains","preventDefault","onMouseDown","onDragEnter","onDragEnd","onDragOver","onSelectAccount","to","Networks","setNetwork","allNetworks","dappsCatalog","dapModeTopBar","networks","sortedNetworks","currHideNet","n","hide","networksItems","concat","currentDappData","includes","displayDraggableHeader","onChange","draggableHeader","checkPermissions","onPrompt","status","permissions","query","allowWithoutGesture","state","console","error","checkClipboardPermission","prompt","isFirefox","readText","askForPermission","Notification","requestPermission","canOpenInIframe","fetchCaught","method","res","canBeLoaded","resp","ok","DApps","connections","connect","disconnect","isWcConnecting","history","useHistory","isClipboardGranted","setClipboardGranted","checkPermission","readClipboard","content","startsWith","uri","isLegacyWC","bridge","test","wcTitle","src","alt","onConnectionClick","push","encodeURIComponent","badge","isLoading","rel","size","session","isOffline","peerMeta","icons","endsWith","Links","linksViewed","setLinksViewed","useDynamicModal","component","props","watchProps","opts","useContext","ModalContext","showDynamicModal","updateModal","previousWatchProps","useRef","JSON","stringify","MultiplierBadges","rewards","badges","useMemo","multiplierBadges","isUnlocked","multipliers","active","multiplier","link","backgroundColor","borderColor","WalletTokenModal","accountId","claimableWalletToken","isUnbondModalVisible","setIsUnbondModalVisible","stakedAmount","useStakedWalletToken","vestingEntry","currentClaimStatus","claimableNow","disabledReason","claimDisabledReason","claimEarlyRewards","claimVesting","claimableNowUsd","mintableVestingUsd","shouldDisplayMintableVesting","walletTokenAPYPercentage","adxTokenAPYPercentage","xWALLETAPYPercentage","modalButtons","UnbondModal","isVisible","text","loading","mintableVesting","Math","ceil","end","start","WalletTokenButton","rewardsData","account","addRequest","useClaimableWalletToken","useConstants","totalLifetimeRewards","walletUsdPrice","pendingTokensTotal","isRewardsDataLoading","errMsg","showWalletTokenModal","border","TopBar","privateMode","isPrivateMode","togglePrivateMode","isMenuOpen","setMenuOpen","routeMatch","useRouteMatch","isDappMode","toggleSideBarOpen","loadCurrentDappData","dappModeTopBar","accountIcon","visualEnv","process","REACT_APP_VISUAL_ENV","URL","document","pathname","networkIconsById","providedBy","iconUrl","DAPPS_ICON","secondary","toastErrorMessage","PermissionsModal","relayerIdentityURL","onAddAccount","isCloseBtnShown","isBackupOptout","showThankYouPage","usePermissions","isNoticationsGranted","modalHidden","setModalHidden","isEmailConfirmed","setEmailConfirmed","isEmailResent","setEmailResent","isJsonBackupDownloaded","setIsJsonBackupDownloaded","resendTimeLeft","setResendTimeLeft","days","accountPresets","quickAccTimelock","areBlockedPermissions","isAccountNotConfirmed","emailConfRequired","buttonDisabled","sendConfirmationEmail","fetchGet","success","Error","message","checkEmailConfirmation","identity","emailConfirmed","meta","isConfirmed","requestNotificationsPermission","requestClipboardPermission","emailConfirmationInterval","setInterval","clearInterval","handleDoneOrIgnoreBtnsClicked","openThankYouPage","resendInterval","clearTimeout","checked","copiedAcc","log","backupOptout","cloudBackupOptout","data","fileName","fileType","blob","Blob","createElement","download","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","downloadFile","UnsupportedDAppsModal","advancedModeList","onContinue","advancedMode","setAdvancedMode","GAS_COST_ERC20_TRANSFER","ACTION_GAS_COSTS","c","gas","AMBIRE_OVERHEAD_COST","GasIndicator","selectedNetwork","relayerURL","match","gasData","setGasData","cacheBreak","setCacheBreak","intvl","setTimeout","unmounted","then","catch","err","nativeAssetSymbol","Number","gasFeeAssets","native","toLocaleString","minimumFractionDigits","gasPrice","maxPriorityFeePerGas","toFixed","SideBar","portfolio","sidebarRef","balanceFontSize","setBalanceFontSize","sideBarOpen","toggleDappMode","dappModeSidebar","resizeBalance","balanceFontSizes","charLength","balance","total","truncated","closest","Object","keys","reduce","abs","onDappsClick","isCurrNetworkBalanceLoading","fontSize","decimals","activeClassName","AddCustomDappModal","dappUrl","addCustomDapp","isDappInCatalog","setName","setUrl","description","setDescription","setIconUrl","connectionType","setConnectionType","setLoading","urlErr","setUrlErr","urlInfo","setUrlInfo","iconUrlInfo","setIconUrlInfo","networksInfo","setNetworksInfo","setNetworks","inputValidation","setInputValidation","isAppAlreadyExists","setIsAppAlreadyExists","addDapp","getDappId","onUrlInput","urlInputStr","normalizedDappUrl","getNormalizedUrl","isValidUrl","isInCatalog","getManifestFromDappUrl","fetch","manifest","onRadioChange","radios","isValidCustomDappData","errors","width","height","onError","row","NETWORKS","updated","splice","CONNECTION_TYPE_LABEL","CATEGORY_LABEL","DappsCatalog","useOneTimeQueryParam","loadDappFromUrl","toggleFavorite","favorites","filteredCatalog","onCategorySelect","categoryFilter","search","onSearchChange","categories","removeCustomDapp","dappUrlFromLink","setDappUrlsFromLink","sortFiltered","filteredItems","item","supported","getNetworkTooltipContent","an","onFavoriteClick","stopPropagation","openDapp","custom","forceInternal","onRemoveCustomClick","openCustomDappModal","_ev","loaded","tryAutoLoad","isWalletPlugin","featured","AMBIRE_ICON_HOT","htmlContent","reverse","category","Transfer","lazy","Dashboard","Swap","Earn","Security","Transactions","Collectible","CrossChain","OpenSea","Deposit","Gas","Wallet","arePermissionsLoaded","useLocation","walletContainer","dapModeSidebar","isLoggedIn","setAdvancedModeList","routes","path","selectedAccount","useStorage","showSendTxns","addressBook","eligibleRequests","setSendTxnState","setGasTankState","gasTankState","LoggedInGuard","handlePermissionsModal","showCauseOfPermissions","showCauseOfEmail","showCauseOfBackupOptout","permissionsModal","disableClose","scrollTimeout","scrollTo","top","behavior","unsupported","unsupportedDApps","fallback","exact","chainId","setHash","iframeRef","app","onLoad","display","root","getElementById","createPortal","animationData","AnimationData","background","speed","loop","autoplay","Circle","danger"],"mappings":"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","file":"static/js/13.e50b0973.chunk.js","sourcesContent":["import './InputModal.scss'\n\nimport { createRef, useState } from 'react'\nimport { MdCheck, MdClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { Modal, TextInput, Button } from \"components/common\"\n\nconst InputModal = ({ title, inputs, onClose }) => {\n    const { hideModal } = useModals()\n    const [isDisabled, setDisabled] = useState(true)\n\n    const inputsFields = inputs.map(input => ({ ...input, ref: createRef() }))\n\n    const onInput = () => {\n        const isFormValid = inputsFields\n            .map(({ ref, validate }) => ref.current.value && (validate ? validate(ref.current.value) : true))\n            .every(v => v === true)\n        setDisabled(!isFormValid)\n    }\n\n    const onConfirm = () => {\n        const values = inputsFields.map(({ ref }) => ref.current.value)\n        onClose && onClose(values)\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear small icon={<MdClose/>} onClick={hideModal}>Cancel</Button>\n        <Button small icon={<MdCheck/>} disabled={isDisabled} onClick={onConfirm}>Confirm</Button>\n    </>\n\n    return (\n        <Modal id=\"input-modal\" title={title} buttons={buttons}>\n            {\n                inputsFields.map(({ id, label, placeholder, ref }) => (\n                    <TextInput key={id || label} label={label} placeholder={placeholder} onInput={onInput} ref={ref}/>\n                ))\n            }\n        </Modal>\n    )\n}\n\nexport default InputModal ","import { MdOutlineAdd, MdRemove } from 'react-icons/md'\nimport './GnosisSafeApps.scss'\nimport GnosisSafeAppIframe from './GnosisSafeAppIframe'\nimport { useLocalStorage } from 'hooks'\nimport InputModal from 'components/Modals/InputModal/InputModal'\nimport { Button } from 'components/common'\n\nimport { useModals } from 'hooks'\nimport { useCallback, useState, useEffect } from 'react'\n\nconst dapps = [{\n  id: 'localhost',\n  name: 'LocalTest',\n  url: 'http://localhost:3002',\n  logo: 'http://localhost:3002/logo-test.png',\n  desc: 'Local dapp test with some lorem ipsum stuff'\n},\n{\n  id: 'txbuilder',\n  name: 'TxBuilder',\n  url: 'https://safe-apps.dev.gnosisdev.com/tx-builder/',\n  logo: 'https://safe-apps.dev.gnosisdev.com/tx-builder/logo.svg',\n  desc: 'Local dapp test with some lorem ipsum stuff'\n},\n{\n  name: 'ParaSwap',\n  url: 'https://paraswap.io',\n  logo: 'https://paraswap.io/paraswap.svg',\n  desc: 'ParaSwap allows dApps and traders to get the best DEX liquidity by aggregating multiple markets and offering the best rates'\n},\n{\n  name: '0xPlasma Finance',\n  url: 'https://apy.plasma.finance',\n  logo: 'https://apy.plasma.finance/logo.svg',\n  desc: 'Cross-chain DeFi & DEX aggregator, farming, asset management, fiat on-ramp'\n},\n  {\n    id: 'mew',\n    name: 'MEW',\n    url: 'https://www.myetherwallet.com/wallet/sign',\n    logo: 'https://www.myetherwallet.com/wallet/sign/logo.svg',\n    desc: 'MEW as dapp'\n  },\n  {\n    id: 'opensea',\n    name: 'Opensea',\n    url: 'https://opensea-temp.ambire.com/staging/',\n    logo: 'https://opensea.io/static/images/logos/opensea.svg',\n    desc: 'Opensea NFT Marketplace'\n  },\n]\n\nexport default function GnosisSafeApps({\n  network,\n  selectedAcc,\n  gnosisConnect,\n  gnosisDisconnect\n}) {\n  const { showModal } = useModals()\n\n  //getting initial dapp(if any)\n  const splitUrl = window.location.hash.split('/')\n  const passedDapp = splitUrl.length > 2 ? dapps.find(d => d.id === splitUrl.slice(-1)[0]) : null\n\n  const [selectedApp, setSelectedApp] = useState(null)\n  const [customPlugins, setCustomPlugins] = useLocalStorage({ key: 'gnosisCustomApps', defaultValue: [] })\n\n  const modalInputs = [\n    { label: 'Name', placeholder: 'Plugin name', validate: value => !!value },\n    { label: 'URL', placeholder: 'https://plugyourpluginifyouwantplug', validate: value => !!value }\n  ]\n\n  const reinitUrl = () => {\n    window.location.href = '/#/wallet/gnosis/plugins'\n  }\n\n  const addPlugin = useCallback((name, url) => {\n    const newDapp = { name, url, customId: Date.now()  }\n    const newPlugins = [...customPlugins, newDapp]\n    setCustomPlugins(newPlugins)\n    setSelectedApp(newDapp)\n    reinitUrl()\n  }, [customPlugins, setCustomPlugins])\n\n  const removeCustomPlugin = useCallback((customId) => {\n    const newPlugins = [...customPlugins.filter(x => x.customId !== customId)]\n    setCustomPlugins(newPlugins)\n  }, [customPlugins, setCustomPlugins])\n\n  const inputModal =\n    <InputModal\n      title=\"Add New Address\"\n      inputs={modalInputs}\n      onClose={([name, url]) => addPlugin(name, url)}>\n    </InputModal>\n\n  const showInputModal = () => showModal(inputModal)\n\n  // loading url initial dapp\n  useEffect(() => {\n      if (passedDapp) {\n        setSelectedApp(passedDapp)\n      }\n    }\n  , [passedDapp])\n\n  return (\n    <div id=\"plugin-gnosis-container\">\n      <ul id=\"dapps-container\" className={selectedApp ? 'small-thumbs' : ''}>\n        <li className='add-plugin'>\n          <Button mini icon={<MdOutlineAdd />} onClick={showInputModal}>Add plugin</Button>\n        </li>\n        {[...dapps, ...customPlugins].map((dapp, index) => (\n          <li\n            key={index}\n            onClick={() => {\n              setSelectedApp(dapp);\n              reinitUrl()\n            }}\n            className={(selectedApp && dapp.url === selectedApp.url) ? 'selected' : ''}\n          >\n            {dapp.customId && <Button className='remove-btn' mini red icon={<MdRemove />} onClick={() => removeCustomPlugin(dapp.customId)} />}\n            <div className=\"logo-container\" style={{ backgroundImage: `url(${dapp.logo})` }}></div>\n            <div className=\"dapp-name\">{dapp.name}</div>\n            <div className=\"dapp-desc\">{dapp.desc}</div>\n          </li>\n        ))}\n      </ul>\n      {selectedApp &&\n        <GnosisSafeAppIframe\n          network={network}\n          selectedApp={selectedApp}\n          selectedAcc={selectedAcc}\n          removeApp={removeCustomPlugin}\n          gnosisConnect={gnosisConnect}\n          gnosisDisconnect={gnosisDisconnect}\n\n        />\n      }\n    </div>\n  )\n}\n","import './Accounts.scss'\n\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AiOutlinePlus } from 'react-icons/ai'\nimport { MdOutlineContentCopy, MdLogout, MdOutlineClose, MdOutlineCheck } from 'react-icons/md'\nimport { MdDragIndicator, MdOutlineSort } from 'react-icons/md'\n\nimport * as blockies from 'blockies-ts';\nimport { DropDown, Button } from 'components/common';\nimport { useToasts } from 'hooks/toasts';\nimport { useDragAndDrop, useCheckMobileScreen } from 'hooks'\nimport { ToolTip } from 'components/common'\n\nconst Accounts = ({ accounts, selectedAddress, onSelectAcc, onRemoveAccount, hidePrivateValue, userSorting, setUserSorting }) => {\n    const { addToast } = useToasts()\n    const [logoutWarning, setLogoutWarning] = useState(false)\n    const [closed, setClosed] = useState(false)\n\n    const isMobileScreen = useCheckMobileScreen()\n\n    const sortType = userSorting.accounts?.sortType || 'default'\n\n    const onDropEnd = (list) => {        \n        setUserSorting(\n            prev => ({\n                ...prev,\n                accounts: {\n                    sortType: 'custom',\n                    items: list\n                }\n            })\n        )\n    }\n    \n    const {\n        dragStart,\n        dragEnter,\n        dragTarget,\n        target,\n        handle,\n        drop\n    } = useDragAndDrop('id', onDropEnd)\n\n    const sortedAccounts = [...accounts].sort((a, b) => {\n        if (sortType === 'custom' && userSorting.accounts?.items?.length) {\n            const sorted = userSorting.accounts.items.indexOf(a.id) - userSorting.accounts.items.indexOf(b.id)\n            return sorted\n        } else {\n            const sorted = accounts.indexOf(a.id) - accounts.indexOf(b.id)\n            return sorted\n        }\n    })\n\n    const shortenedAddress = address => address.slice(0, 5) + '...' + address.slice(-3)\n    const isActive = id => id === selectedAddress ? 'active' : ''\n    const toIcon = seed => blockies.create({ seed }).toDataURL()\n    const toIconBackgroundImage = seed => ({ backgroundImage: `url(${toIcon(seed)})`})\n    const walletType = signerExtra => {\n        if (signerExtra && signerExtra.type === 'ledger') return 'Ledger'\n        else if (signerExtra && signerExtra.type === 'trezor') return 'Trezor'\n        else return 'Web3'\n    }\n    const copyAddress = async address => {\n        await navigator.clipboard.writeText(address)\n        addToast('Copied to clipboard!')\n    }\n\n    const onSelectAccount = (id) => {\n        onSelectAcc(id)\n        setClosed(true)\n    }\n\n    return (\n        <DropDown id=\"accounts\" icon={toIcon(selectedAddress)} title={hidePrivateValue(shortenedAddress(selectedAddress))} open={closed} onOpen={() => setClosed(false)}>\n          <div className=\"list\">\n            {!isMobileScreen && <div className=\"sort-buttons\">\n                <ToolTip label='Sorted accounts by drag and drop'>\n                    <MdDragIndicator color={sortType === \"custom\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\"\n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        accounts: {\n                            ...prev.accounts,\n                            sortType: 'custom'\n                        }\n                    }))} />\n                </ToolTip>\n                <ToolTip label='Sorted accounts by default'>\n                    <MdOutlineSort color={sortType === \"default\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\"\n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        accounts: {\n                            ...prev.accounts,\n                            sortType: 'default'\n                        }\n                    }))} />\n                </ToolTip>\n            </div>}\n            {\n              sortedAccounts.map(({ id, email, signer, signerExtra }, i) => \n                logoutWarning !== id ?\n                    <div\n                        className={`account ${isActive(id)}`}\n                        key={id}\n                        draggable={sortedAccounts.length > 1 && sortType === 'custom' && !isMobileScreen}\n                        onDragStart={(e) => {                \n                            if (handle.current === target.current || handle.current.contains(target.current)) dragStart(e, i)\n                            else e.preventDefault();\n                         }}\n                        onMouseDown={(e) => dragTarget(e, i)}\n                        onDragEnter={(e) => dragEnter(e, i)}\n                        onDragEnd={(e) => drop(sortedAccounts)}\n                        onDragOver={(e) => e.preventDefault()}\n                    >\n                        <div className=\"inner\" onClick={() => onSelectAccount(id)}>\n                            {sortedAccounts.length > 1 && sortType === 'custom' && !isMobileScreen && <MdDragIndicator className='drag-handle' id={`${i}-handle`} />}\n                            <div className=\"icon\" style={toIconBackgroundImage(id)}></div>\n                            <div className=\"details\">\n                                <div className=\"address\">{ id }</div>\n                                <label>{ email ? `Email/Password account (${email})` : `${walletType(signerExtra)} (${shortenedAddress(signer.address)})` }</label>\n                            </div>\n                        </div>\n                        <div className=\"buttons\">\n                            <div className=\"button\" onClick={() => copyAddress(id)}>\n                                <MdOutlineContentCopy/>\n                            </div>\n                            <div className=\"button\" onClick={() => setLogoutWarning(id)}>\n                                <MdLogout/>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div id=\"confirm-delete-account\" className={`account ${isActive(id)}`} key={id}>\n                        <div className=\"message\">\n                            Are you sure you want to log out from this account ?\n                        </div>\n                        <div className=\"buttons\">\n                            <div className=\"button danger\" onClick={() => {\n                                setLogoutWarning(false)\n                                onRemoveAccount(id)\n                            }}>\n                                <MdOutlineCheck/>\n                            </div>\n                            <div className=\"button\" onClick={() => setLogoutWarning(false)}>\n                                <MdOutlineClose/>\n                            </div>\n                        </div>\n                    </div>\n              )\n            }\n          </div>\n          <div id=\"add-account\">\n            <NavLink to=\"/add-account\">\n              <Button icon={<AiOutlinePlus/>} small>Add Account</Button>\n            </NavLink>\n          </div>\n        </DropDown>\n    )\n}\n\nexport default Accounts","import { Select } from 'components/common';\nimport { useDragAndDrop, useCheckMobileScreen } from 'hooks';\nimport { ToolTip } from 'components/common';\nimport { MdDragIndicator, MdOutlineSort } from 'react-icons/md';\n\nconst Networks = ({\n    network,\n    setNetwork,\n    allNetworks,\n    userSorting,\n    setUserSorting,\n    dappsCatalog,\n    dapModeTopBar\n  }) => {\n    const sortType = userSorting.networks?.sortType || 'default'\n\n    const onDropEnd = (list) => {        \n        setUserSorting(\n            prev => ({\n                ...prev,\n                networks: {\n                    sortType: 'custom',\n                    items: list\n                }\n            })\n        )\n    }\n\n    const isMobileScreen = useCheckMobileScreen()\n    const {\n        dragStart,\n        dragEnter,\n        dragTarget,\n        handle,\n        target,\n        drop\n    } = useDragAndDrop('value', onDropEnd)\n\n    const sortedNetworks = [...allNetworks].sort((a, b) => {\n        if (sortType === 'custom' && userSorting?.networks?.items?.length) {\n            const sorted = userSorting.networks.items.indexOf(a.id) - userSorting.networks.items.indexOf(b.id)\n            return sorted\n        } else {\n            const sorted = allNetworks.indexOf(a.id) - allNetworks.indexOf(b.id)\n            return sorted\n        }\n    })\n    const currHideNet = sortedNetworks.filter(n => network.id === n.id && network.hide)\n    const networksItems = sortedNetworks.filter(n => !n.hide).concat(currHideNet).map(({ id, name, icon }) => ({\n      label: name,\n      value: id,\n      icon,\n      disabled: dapModeTopBar && !dappsCatalog?.currentDappData?.networks?.includes(id)\n    }))\n   \n    return (\n        <Select\n            defaultValue={network.id}\n            draggable={sortType === 'custom' && !isMobileScreen ? true : false}\n            dragEnter={dragEnter}\n            drop={drop}\n            dragStart={(e, index) => {                \n                if (handle.current === target.current || handle.current.contains(target.current)) dragStart(e, index)\n                else e.preventDefault();\n             }}\n            dragTarget={dragTarget}\n            items={networksItems}\n            displayDraggableHeader={!isMobileScreen}\n            onChange={({ value }) => setNetwork(value)}\n            draggableHeader={<div className='sort-buttons'>\n                <ToolTip label='Sorted networks by drag and drop'>\n                    <MdDragIndicator color={sortType === \"custom\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\" \n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        networks: {\n                            ...prev.networks,\n                            sortType: 'custom'\n                        }\n                    }))} />\n                </ToolTip>\n                <ToolTip label='Sorted networks by default'>\n                    <MdOutlineSort color={sortType === \"default\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\" \n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        networks: {\n                            ...prev.networks,\n                            sortType: 'default'\n                        }\n                    }))} />\n                </ToolTip>\n            </div>}\n        />\n    );\n};\n\nexport default Networks;  \n","import { isFirefox } from 'lib/isFirefox'\n\nconst checkPermissions = async (name, onPrompt) => {\n    let status = false;\n\n    try {\n        const { state } = await navigator.permissions.query({\n            name,\n            allowWithoutGesture: false,\n        })\n        if (state === 'granted') return true\n        if (state === 'prompt') {\n            if (onPrompt) {\n                await onPrompt\n                return checkPermissions(name)\n            } else return false\n        }\n    } catch (e) {\n        console.error('Error while trying to query permissions', e)\n    }\n\n    return status;\n}\n\nconst checkClipboardPermission = (prompt = false) => isFirefox() ? false : prompt ? checkPermissions('clipboard-read', navigator.clipboard.readText()) : checkPermissions('clipboard-read')\nconst checkNotificationPermission = (prompt = false) => prompt ? checkPermissions('notifications', Notification.requestPermission()) : checkPermissions('notifications')\n\nconst askForPermission = async name => {\n    try {\n        if (name === 'clipboard-read') {\n            await navigator.clipboard.readText()\n            return true\n        }\n\n        if (name === 'notifications') {\n            const status = await Notification.requestPermission()\n            return status === 'granted' || status === 'default'\n        }\n\n        return false\n    } catch(e) {\n        console.error(`Permission ${name} blocked`);\n        return false\n    }\n}\n\nexport {\n    askForPermission,\n    checkClipboardPermission,\n    checkNotificationPermission\n}\n","import { fetchCaught } from 'lib/fetch'\n\nexport const canOpenInIframe = async (url) => {\n    const res = await fetchCaught(url, { method: 'HEAD' })\n  \n    // NOTE: looks like it enough to open it in iframe \n    // It fails for cors and x-frame-options\n    const canBeLoaded = res?.resp?.ok\n\n    return canBeLoaded\n  }","import './DApps.scss'\n\nimport React, { useState, useCallback } from 'react'\nimport { FiHelpCircle } from 'react-icons/fi'\nimport { BiTransferAlt } from 'react-icons/bi'\nimport { MdBrokenImage } from 'react-icons/md'\nimport { AiOutlineDisconnect } from 'react-icons/ai'\nimport { DropDown, ToolTip, Button } from \"components/common\"\nimport { checkClipboardPermission } from 'lib/permissions'\nimport { MdOutlineWarning } from 'react-icons/md'\nimport { canOpenInIframe } from 'lib/dappsUtils'\nimport { useHistory } from 'react-router-dom'\n\nconst DApps = ({ connections, connect, disconnect, isWcConnecting }) => {\n    const history = useHistory()\n    const [isClipboardGranted, setClipboardGranted] = useState(false)\n\n    const checkPermission = async () => {\n        const status = await checkClipboardPermission()\n        setClipboardGranted(status)\n        return status\n    }\n\n    const readClipboard = useCallback(async () => {\n        if (isClipboardGranted) {\n            const content = await navigator.clipboard.readText()\n            if (content.startsWith('wc:')) connect({ uri: content })\n        } else {\n            const uri = prompt('Enter WalletConnect URI')\n            if (uri) connect({ uri })\n        }\n    }, [connect, isClipboardGranted])\n\n    const isLegacyWC = ({ bridge }) => /https:\\/\\/bridge.walletconnect.org/g.test(bridge)\n\n    const wcTitle = (<div className='ddWcTitle'><img src='./resources/walletconnect.svg' alt='wc-logo'/>WalletConnect</div>)\n\n    const onConnectionClick = useCallback( async (url) => {\n        const canOpen = await canOpenInIframe(url)\n        if(canOpen) {\n            history.push(`/wallet/dapps?dappUrl=${encodeURIComponent(url + `?${Date.now()}`)}`)\n        } else {\n            window.open(url, '_blank')\n        }\n    }, [history])\n\n    return (\n        <DropDown id=\"dApps\" title={wcTitle} badge={connections.length} onOpen={() => checkPermission()} isLoading={isClipboardGranted && isWcConnecting}>\n            <div id=\"connect-dapp\">\n                <div className=\"heading\">\n                    <Button small icon={<BiTransferAlt />} disabled={isClipboardGranted} onClick={readClipboard}>\n                        Connect dApp\n                    </Button>\n                    <a href='https://help.ambire.com/hc/en-us/articles/4410889965842' target='_blank' rel='noreferrer'>\n                        <FiHelpCircle size={30} />\n                    </a>\n                </div>\n                {isClipboardGranted ? (\n                    <label>\n                        Automatic connection enabled, just copy a WalletConnect URL and\n                        come back to this tab.\n                    </label>\n                ) : null}\n            </div>\n            <div className='dappList'>\n                {connections.map(({ session, uri, isOffline }) => (\n                  <div className=\"item dapps-item\" key={session.key}>\n                      <div className=\"icon\">\n                          <div className=\"icon-overlay\" style={{backgroundImage: `url(${session.peerMeta.icons.filter(x => !x.endsWith('favicon.ico'))[0]})`}}/>\n                          <MdBrokenImage/>\n                      </div>\n                      <span onClick={() => onConnectionClick(session.peerMeta.url)}>\n                          <div className=\"details\">\n                              {\n                                  isLegacyWC(session) ?\n                                    <ToolTip className=\"session-warning\" label=\"dApp uses legacy WalletConnect bridge which is unreliable and often doesn't work. Please tell the dApp to update to the latest WalletConnect version.\">\n                                        <MdOutlineWarning/>\n                                    </ToolTip>\n                                    :\n                                    null\n                              }\n                              {\n                                  isOffline ?\n                                    <ToolTip className=\"session-error\" label=\"WalletConnect connection may be offline. Check again later. If this warning persist try to disconnect and connect WalletConnect.\">\n                                        <AiOutlineDisconnect />\n                                    </ToolTip>\n                                    :\n                                    null\n                              }\n                              <div className=\"name\">{session.peerMeta.name}</div>\n                          </div>\n                      </span>\n                      <div className=\"separator\"></div>\n                      <button onClick={() => disconnect(uri)}>Disconnect</button>\n                  </div>\n                ))}\n            </div>\n        </DropDown>\n    )\n}\n\nexport default DApps\n","import './Links.scss'\n\nimport { DropDown } from \"components/common\"\nimport { MdChatBubbleOutline, MdMenuBook, MdOutlineHelpOutline, MdOutlineLightbulb } from \"react-icons/md\";\nimport { BsDiscord, BsTelegram, BsTwitter } from \"react-icons/bs\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst Links = () => {\n    const [linksViewed, setLinksViewed] = useLocalStorage({ key: 'linksViewed', defaultValue: false })\n\n    const onOpen = () => {\n        setLinksViewed(true)\n    }\n\n    return (\n        <DropDown id=\"help-dropdown\" className={`${linksViewed ? 'viewed' : ''}`} title={<MdOutlineHelpOutline/>} onOpen={onOpen}>\n            <a className=\"item\" href='https://help.ambire.com/hc/en-us/categories/4404980091538-Ambire-Wallet' target=\"_blank\" rel=\"noreferrer\">\n                <MdMenuBook/> Help Center\n            </a>\n            <a className=\"item\" href=\"https://help.ambire.com/hc/en-us/requests/new\" target=\"_blank\" rel=\"noreferrer\">\n                <MdChatBubbleOutline/> Report an issue\n            </a>\n            <a className=\"item\" href=\"https://discord.gg/nMBGJsb\" target=\"_blank\" rel=\"noreferrer\">\n                <BsDiscord/> Discord\n            </a>\n            <a className=\"item\" href=\"https://twitter.com/AmbireWallet\" target=\"_blank\" rel=\"noreferrer\">\n                <BsTwitter/> Twitter\n            </a>\n            <a className=\"item\" href=\"https://t.me/AmbireWallet\" target=\"_blank\" rel=\"noreferrer\">\n                <BsTelegram/> Telegram\n            </a>\n            <a className=\"item\" href=\"https://www.ambire.com/Ambire%20ToS%20and%20PP%20(26%20November%202021).pdf\" target=\"_blank\" rel=\"noreferrer\">\n                <MdOutlineLightbulb/> ToS\n            </a>\n        </DropDown>\n    )\n}\n\nexport default Links\n","import { useContext, useEffect, useRef } from \"react\"\nimport { ModalContext } from \"components/ModalProvider/ModalProvider\"\n\nconst useDynamicModal = (component, props, watchProps = {}, opts) => {\n    const { showDynamicModal, updateModal } = useContext(ModalContext)\n    const previousWatchProps = useRef(watchProps)\n\n    useEffect(() => {\n        if (JSON.stringify(previousWatchProps.current) !== JSON.stringify(watchProps)) {\n            updateModal(watchProps)\n            previousWatchProps.current = watchProps\n        }\n    }, [watchProps, updateModal])\n\n    return () => showDynamicModal(component, { ...props, ...watchProps }, opts)\n}\n\nexport default useDynamicModal","import { useMemo } from \"react\"\nimport { multiplierBadges } from 'ambire-common/src/constants/multiplierBadges'\nimport { ToolTip } from \"components/common\"\n\nconst MultiplierBadges = ({ rewards }) => {\n  // Multiplier badges\n  const badges = useMemo(() => multiplierBadges.map(badge => {\n    const isUnlocked = rewards.multipliers && rewards.multipliers.map(({ name }) => name).includes(badge.id)\n    return {\n      ...badge,\n      active: isUnlocked\n    }\n  }), [rewards])\n\n  return (\n    <div className=\"badges\">\n      {\n        badges.map(({ id, name, icon, color, multiplier, link, active }) => (\n          <a href={link} target=\"_blank\" rel=\"noreferrer\" key={id}>\n              <ToolTip label={`You ${active ? 'are receiving' : 'do not have'} the ${name} x${multiplier} multiplier`}>\n                  <div className={`badge ${active ? 'active' : ''}`} style={{ backgroundColor: color, borderColor: color }}>\n                      <div className=\"icon\">{ icon }</div>\n                      <div className=\"multiplier\">x { multiplier }</div>\n                  </div>\n              </ToolTip>\n          </a>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default MultiplierBadges","import './WalletTokenModal.scss'\n\nimport { Button, Modal, ToolTip } from 'components/common'\nimport { MdOutlineClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport useStakedWalletToken from 'ambire-common/src/hooks/useStakedWalletToken'\nimport MultiplierBadges from './MultiplierBadges'\nimport { useState } from 'react'\nimport UnbondModal from './UnbondModal/UnbondModal'\n\nconst WalletTokenModal = ({ accountId, claimableWalletToken, rewards }) => {\n    const [isUnbondModalVisible, setIsUnbondModalVisible] = useState(false)\n    const { hideModal } = useModals()\n    const { stakedAmount } = useStakedWalletToken({ accountId })\n\n    const hideUnbondModal = () => setIsUnbondModalVisible(false)\n\n    const openUnbondModal = () => setIsUnbondModalVisible(true)\n\n    const {\n        vestingEntry,\n        currentClaimStatus,\n        claimableNow,\n        disabledReason,\n        claimDisabledReason,\n        claimEarlyRewards,\n        claimVesting,\n        claimableNowUsd,\n        mintableVestingUsd,\n        shouldDisplayMintableVesting,\n    } = claimableWalletToken\n    const { walletTokenAPYPercentage, adxTokenAPYPercentage, xWALLETAPYPercentage } = rewards;\n\n    const claimeWithBurnNotice = 'This procedure will claim 50% of your outstanding rewards as $WALLET, and permanently burn the other 50%'\n    \n    const claimWithBurn = () => claimEarlyRewards(false)\n\n    const modalButtons = <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n\n    return (\n        <Modal id=\"wallet-token-modal\" title=\"WALLET token distribution\" buttons={modalButtons}>\n            <UnbondModal \n                isVisible={isUnbondModalVisible} \n                hideModal={hideUnbondModal} \n                text=\"This procedure will claim only 50% of your outstanding \n                rewards as $WALLET, and permanently burn the rest. \n                Are you sure?\"\n                onClick={claimWithBurn}\n            />\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Early users Incentive: Total</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{ rewards['balance-rewards'] }</span></div>\n                        <div className=\"amount apy\">{walletTokenAPYPercentage} <span>APY</span></div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { /* claimButton */ }\n                </div>\n            </div>\n            {/* <div className=\"item\">\n                <div className=\"details\">\n                    <label>Referral Incentive</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">0</span></div>\n                        <div className=\"amount-dollar\"><span className=\"secondary-accent\">$</span> 0</div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { claimButton }\n                </div>\n            </div> */}\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>ADX Staking Bonus: Total</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{ rewards['adx-rewards'] }</span></div>\n                        <div className=\"amount apy\">{adxTokenAPYPercentage} <span>APY</span></div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { /* claimButton */ }\n                </div>\n            </div>\n\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Claimable now: early users + ADX Staking bonus</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{\n                            currentClaimStatus.loading ? '...' : claimableNow\n                        }</span></div>\n                        <div className=\"amount usd\">\n                            <span className=\"secondary-accent\">$</span>\n                            { claimableNowUsd }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <ToolTip label={\n                            claimDisabledReason || disabledReason || claimeWithBurnNotice\n                        }>\n                        <Button className=\"claim-rewards-with-burn\" small clear onClick={openUnbondModal} disabled={!!(claimDisabledReason || disabledReason)}>Claim with burn</Button>\n                    </ToolTip>\n\n                    <ToolTip label={\n                            claimDisabledReason || disabledReason || 'Claim all of your outstanding rewards as staked $WALLET (xWALLET)'\n                        }>\n                        <Button className=\"claim-rewards-x-wallet\" small clear onClick={claimEarlyRewards} disabled={!!(claimDisabledReason || disabledReason)}>CLAIM IN xWALLET</Button>\n                    </ToolTip>\n                </div>\n            </div>\n\n            {shouldDisplayMintableVesting && (\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Claimable early supporters vesting</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">\n                            { currentClaimStatus.mintableVesting }\n                        </span></div>\n                        <div className=\"amount usd\">\n                            <span className=\"secondary-accent\">$</span>\n                            { mintableVestingUsd }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <ToolTip label={\n                            disabledReason || `Linearly vested over approximately ${Math.ceil((vestingEntry.end - vestingEntry.start) / 86400)} days`\n                        }>\n                        <Button small clear onClick={claimVesting} disabled={!!disabledReason}>CLAIM</Button>\n                    </ToolTip>\n                </div>\n            </div>\n            )}\n\n            {!!stakedAmount && (\n                <div className=\"item\">\n                    <div className=\"details\">\n                        <label>Staked WALLET</label>\n                        <div className=\"balance\">\n                            <div className=\"amount\"><span className=\"primary-accent\">\n                                { stakedAmount }\n                            </span></div>\n                            <div className=\"amount apy\">{ xWALLETAPYPercentage } <span>APY</span></div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <MultiplierBadges rewards={rewards}/>\n            <div id=\"info\">\n                You are receiving $WALLETs for holding funds on your Ambire wallet as an early user. <a href=\"https://blog.ambire.com/announcing-the-wallet-token-a137aeda9747\" target=\"_blank\" rel=\"noreferrer\">Read More</a>\n            </div>\n        </Modal>\n    )\n}\n\nexport default WalletTokenModal\n","import useDynamicModal from \"hooks/useDynamicModals\";\nimport { Button, ToolTip } from \"components/common\";\nimport WalletTokenModal from \"components/Modals/WalletTokenModal/WalletTokenModal\";\nimport useClaimableWalletToken from 'ambire-common/src/hooks/useClaimableWalletToken'\nimport useConstants from 'hooks/useConstants'\n\nconst WalletTokenButton = ({ rewardsData, account = {}, network, hidePrivateValue, addRequest }) => {\n    const claimableWalletToken = useClaimableWalletToken({\n        useConstants,\n        accountId: account.id,\n        network,\n        addRequest,\n        totalLifetimeRewards: rewardsData.rewards.totalLifetimeRewards,\n        walletUsdPrice: rewardsData.rewards.walletUsdPrice,\n      })\n    const { currentClaimStatus, pendingTokensTotal } = claimableWalletToken\n    const { isLoading: isRewardsDataLoading, errMsg } = rewardsData\n    const isLoading = isRewardsDataLoading || currentClaimStatus.loading;\n\n    const showWalletTokenModal = useDynamicModal(WalletTokenModal, { claimableWalletToken, accountId: account.id }, { rewards: rewardsData.rewards })\n\n    return (\n        !isLoading && (errMsg || currentClaimStatus.error) ?\n            <ToolTip label=\"WALLET rewards are not available without a connection to the relayer\">\n                <Button small border disabled onClick={showWalletTokenModal}>Unavailable</Button>\n            </ToolTip>\n            :\n            <Button small border disabled={isLoading} onClick={showWalletTokenModal}>{ isLoading ? '...' : hidePrivateValue(pendingTokensTotal) } WALLET</Button>\n    )\n}\n\nexport default WalletTokenButton\n","export default __webpack_public_path__ + \"static/media/dapps.cec88e8a.svg\";","import \"./TopBar.scss\";\n\nimport React, { useState, useMemo } from \"react\";\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\nimport { MdOutlineArrowForward, MdOutlineClose, MdOutlineMenu, MdRemoveRedEye, MdVisibilityOff, MdMenu, MdExitToApp, MdInfo } from \"react-icons/md\";\nimport Accounts from \"./Accounts/Accounts\";\nimport Networks from \"./Networks/Networks\";\nimport { networkIconsById } from \"consts/networks\";\nimport DApps from \"./DApps/DApps\";\nimport * as blockies from 'blockies-ts';\nimport Links from \"./Links/Links\";\nimport WalletTokenButton from \"./WalletTokenButton/WalletTokenButton\";\nimport { Button } from 'components/common';\nimport DAPPS_ICON from 'resources/dapps.svg';\n\nconst TopBar = ({\n  connections,\n  connect,\n  disconnect,\n  isWcConnecting,\n  onSelectAcc,\n  onRemoveAccount,\n  selectedAcc,\n  accounts,\n  network,\n  setNetwork,\n  allNetworks,\n  rewardsData,\n  privateMode: { isPrivateMode, togglePrivateMode, hidePrivateValue },\n  addRequest,\n  userSorting,\n  setUserSorting,\n  dappsCatalog\n}) => {\n  const [isMenuOpen, setMenuOpen] = useState(false)\n  const routeMatch = useRouteMatch('/wallet/dapps')\n\n  const { isDappMode, toggleSideBarOpen, currentDappData, loadCurrentDappData } = dappsCatalog\n\n  const dappModeTopBar = useMemo(() => isDappMode && routeMatch && currentDappData, [currentDappData, isDappMode, routeMatch])\n\n  const account = accounts.find(({ id }) => id === selectedAcc)\n  const accountIcon = blockies.create({ seed: account ? account.id : null }).toDataURL()\n \n  const visualEnv =\n    (process.env.REACT_APP_VISUAL_ENV === 'dev')\n      ? 'dev' : (\n        new URL(document.URL).pathname.startsWith('/staging/')\n      ) ? 'staging' : null\n\n    return (\n    <div id=\"topbar\" className={( visualEnv ? ('visual-env visual-env-' + visualEnv ) : '') + (dappModeTopBar ? ' dapp-mode' : '') }>\n      {\n        visualEnv &&\n          <div className='env-bar' >\n            {visualEnv === 'dev' && <>Development mode</>}\n            {visualEnv === 'staging' && <>Staging mode</>}\n          </div>\n      }\n      <div id=\"mobile-menu\" onClick={() => setMenuOpen(!isMenuOpen)}>\n        <div className=\"icon\" style={{backgroundImage: `url(${accountIcon})`}}></div>\n        <MdOutlineArrowForward/>\n        <div className=\"icon\" style={{backgroundImage: `url(${networkIconsById[network.id]})`}}></div>\n        <div id=\"menu-button\">\n          { isMenuOpen ? <MdOutlineClose/> : <MdOutlineMenu/> }\n        </div>\n      </div>\n\n      {dappModeTopBar ?\n        <div className='dapp-menu'>\n          <div className='dapp-menu-btns'>\n            {/* <ToolTip label='Open Ambire Wallet menu'> */}\n              <Button className='ambire-menu-btn' border mini icon={<MdMenu size={23} />}\n                onClick={() => toggleSideBarOpen()}\n              ></Button>\n            {/* </ToolTip> */}\n            <div className='dapp-data'>\n              {/* <ToolTip label={`Connected with ${currentDappData?.connectionType} -  see/find out more on our blog`}> */}\n                {/* TODO: update the blogpost link */}\n                <a className=\"info-btn\" href={'https://blog.ambire.com/connect-to-any-dapp-with-ambire-wallet-and-walletconnect-c1bc096a531e'} \n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <MdInfo size={23} />\n                </a>\n              {/* </ToolTip> */}\n              {/* <ToolTip label={`Connected to ${currentDappData?.name} with Ambire Wallet`}> */}\n                <a href={currentDappData?.providedBy?.url || currentDappData?.url} \n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <img className='dapp-logo' src={currentDappData?.iconUrl || DAPPS_ICON} alt={currentDappData?.name}/>\n                </a>\n              {/* </ToolTip> */}\n              {/* <ToolTip label={`Exit from ${currentDappData?.name}`}> */}\n                <Button\n                  className='dapp-exit-btn'\n                  secondary mini \n                  icon={<MdExitToApp size={15} /> }\n                  onClick={() => loadCurrentDappData(null)}\n                >Exit</Button>\n              {/* </ToolTip> */}\n            </div>\n          </div>\n        </div>\n      :        \n      <NavLink to={'/wallet/dashboard'}>\n        <div id=\"logo\" />\n        <div id=\"icon\" />\n      </NavLink>     \n      }\n\n      <div className={`container ${isMenuOpen ? 'open' : ''}`}>\n        {selectedAcc && <WalletTokenButton\n          rewardsData={rewardsData}\n          account={account}\n          network={network}\n          hidePrivateValue={hidePrivateValue}\n          addRequest={addRequest}\n        />}\n        {isPrivateMode ? <MdVisibilityOff cursor=\"pointer\" size={28} onClick={togglePrivateMode} /> : <MdRemoveRedEye cursor=\"pointer\" size={28} onClick={togglePrivateMode} />}\n        <DApps connections={connections} connect={connect} disconnect={disconnect} isWcConnecting={isWcConnecting}/>\n        <Accounts accounts={accounts} selectedAddress={selectedAcc} onSelectAcc={onSelectAcc} onRemoveAccount={onRemoveAccount} hidePrivateValue={hidePrivateValue}  userSorting={userSorting} setUserSorting={setUserSorting}/>        \n        <Networks setNetwork={setNetwork} network={network} allNetworks={allNetworks}  userSorting={userSorting}\n        setUserSorting={setUserSorting} dappsCatalog={dappsCatalog} dapModeTopBar={dappModeTopBar}/>\n        <Links/>\n      </div>\n    </div>\n  );\n};\n\nexport default TopBar;\n","import './PermissionsModal.scss'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { MdCheck, MdClose, MdOutlineCheck } from 'react-icons/md'\nimport { useModals, usePermissions } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { askForPermission } from 'lib/permissions'\nimport { Modal, Toggle, Button, Checkbox, ToolTip } from 'components/common'\nimport { isFirefox } from 'lib/isFirefox'\nimport { fetchGet } from 'lib/fetch'\nimport { AiOutlineReload } from 'react-icons/ai'\nimport { BiExport } from 'react-icons/bi'\nimport accountPresets from 'ambire-common/src/constants/accountPresets'\n\nconst toastErrorMessage = name => `You blocked the ${name} permission. Check your browser permissions tab.`\n\nconst PermissionsModal = ({ relayerIdentityURL, account, onAddAccount, isCloseBtnShown, isBackupOptout, showThankYouPage }) => {\n    const { hideModal } = useModals()\n    const { isNoticationsGranted, isClipboardGranted, modalHidden, setModalHidden } = usePermissions()\n    const { addToast } = useToasts()\n    const [isEmailConfirmed, setEmailConfirmed] = useState(false)\n    const [isEmailResent, setEmailResent] = useState(false)\n    const [isJsonBackupDownloaded, setIsJsonBackupDownloaded] = useState(isBackupOptout)\n    const [resendTimeLeft, setResendTimeLeft] = useState(60000)\n\n    const days = Math.ceil(accountPresets.quickAccTimelock / 86400)\n    const areBlockedPermissions = (!isFirefox() && !isClipboardGranted) || !isNoticationsGranted\n    const isAccountNotConfirmed = account.emailConfRequired && !isEmailConfirmed\n    const buttonDisabled = isAccountNotConfirmed || (!modalHidden && areBlockedPermissions)\n    const sendConfirmationEmail = async () => {\n        try {\n            const response = await fetchGet(relayerIdentityURL + '/resend-verification-email')\n            if (!response.success) throw new Error('Relayer did not return success.')\n\n            addToast('Verification email sent!')\n            setEmailResent(true)\n        } catch(e) {\n            console.error(e)\n            addToast('Could not resend verification email.' + e.message || e, { error: true })\n            setEmailResent(false)\n        }\n    }\n    \n    const checkEmailConfirmation = useCallback(async () => {\n        try {\n            const identity = await fetchGet(relayerIdentityURL)\n            if (identity) {\n                const { emailConfirmed } = identity.meta\n                const isConfirmed = !!emailConfirmed\n                setEmailConfirmed(isConfirmed)\n\n                if (isConfirmed && account.emailConfRequired) {\n                    onAddAccount({\n                        ...account,\n                        emailConfRequired: false\n                    })\n                }\n            }\n        } catch(e) {\n            console.error(e);\n            addToast('Could not check email confirmation.', { error: true })\n        }\n    }, [relayerIdentityURL, account, onAddAccount, addToast])\n\n    const requestNotificationsPermission = async () => {\n        const status = await askForPermission('notifications')\n        if (!status) addToast(toastErrorMessage('Notifications'), { error: true })\n    }\n    \n    const requestClipboardPermission = async () => {\n        const status = await askForPermission('clipboard-read')\n        if (!status) addToast(toastErrorMessage('Clipboard'), { error: true })\n    }\n    \n    useEffect(() => {\n        !isEmailConfirmed && checkEmailConfirmation()\n        const emailConfirmationInterval = setInterval(() => !isEmailConfirmed && checkEmailConfirmation(), 3000)\n        return () => clearInterval(emailConfirmationInterval)\n    }, [isEmailConfirmed, checkEmailConfirmation])\n\n    const handleDoneOrIgnoreBtnsClicked = () => {\n        hideModal()\n        if (showThankYouPage) openThankYouPage()\n    }\n\n    const handleOnClose = () => {\n        if (showThankYouPage) openThankYouPage()\n    }\n    const openThankYouPage = () => window.open(\"https://www.ambire.com/thankyou\", \"_blank\")\n\n    const buttons = isJsonBackupDownloaded ? (<>\n        <Button clear small icon={<MdClose/>} disabled={isAccountNotConfirmed} onClick={handleDoneOrIgnoreBtnsClicked}>Ignore</Button>\n        <Button small icon={<MdCheck/>} disabled={buttonDisabled} onClick={handleDoneOrIgnoreBtnsClicked}>Done</Button>\n    </>) : (<>\n        <Button clear small icon={<MdClose/>} disabled={true} onClick={handleDoneOrIgnoreBtnsClicked}>Ignore</Button>\n        <Button small icon={<MdCheck/>} disabled={true} onClick={handleDoneOrIgnoreBtnsClicked}>Done</Button>\n    </>)\n\n    const downloadFile = ({ data, fileName, fileType }) => {\n        const blob = new Blob([data], { type: fileType })\n    \n        const a = document.createElement('a')\n        a.download = fileName\n        a.href = window.URL.createObjectURL(blob)\n        const clickEvt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n        })\n        a.dispatchEvent(clickEvt)\n        a.remove()\n    }\n\n    const handleExportClicked = () => {\n        setIsJsonBackupDownloaded(true)\n        let copiedAcc = { ...account }\n        console.log('copiedAcc',copiedAcc)\n        if (typeof copiedAcc.emailConfRequired !== 'undefined') delete copiedAcc.emailConfRequired\n        if (typeof copiedAcc.backupOptout !== 'undefined') delete copiedAcc.backupOptout\n        if (typeof copiedAcc.cloudBackupOptout !== 'undefined') delete copiedAcc.cloudBackupOptout\n        \n        downloadFile({\n            data: JSON.stringify(copiedAcc),\n            fileName: `${copiedAcc.id}.json`,\n            fileType: 'text/json',\n        })\n        \n        onAddAccount({\n            ...account,\n            backupOptout: false\n        })\n    }\n\n    useEffect(() => {\n        const resendInterval = setInterval(() => setResendTimeLeft(resendTimeLeft => resendTimeLeft > 0 ? resendTimeLeft - 1000 : 0), 1000)\n        return () => clearTimeout(resendInterval)\n    }, [])\n\n    return (\n        <Modal id=\"permissions-modal\" title=\"We need a few things 🙏\" buttons={buttons} isCloseBtnShown={isCloseBtnShown} onClose={handleOnClose}>\n            {\n                account.email ? \n                    <div className=\"permission\">\n                    <div className=\"details\">\n                        <div className=\"name\">Email Verification</div>\n                        <div className=\"description\">\n                            <b>Confirming your email is mandatory so that we can make sure your account can be recovered in case access is lost.</b>\n                            &nbsp;We already sent an email, please check your inbox.\n                        </div>\n                    </div>\n                    <div className=\"status\">\n                        { \n                            !isEmailConfirmed ?\n                                <label>Waiting for<br/>your confirmation</label>\n                                : \n                                <span className=\"check-icon\"><MdOutlineCheck/></span>\n                        }\n                        { \n                            !isEmailConfirmed && !isEmailResent ? \n                                <ToolTip label={`Will be available in ${resendTimeLeft / 1000} seconds`} disabled={resendTimeLeft === 0}>\n                                    <Button mini clear icon={<AiOutlineReload/>} disabled={resendTimeLeft !== 0} onClick={sendConfirmationEmail}>Resend</Button>\n                                </ToolTip>\n                                :\n                                null\n                        }\n                    </div>\n                </div>\n                :\n                null\n            }\n            <div className=\"permission\">\n                <div className=\"details\">\n                    <div className=\"name\">Notifications Permission</div>\n                    <div className=\"description\">\n                        Needed to draw your attention to Ambire Wallet when there is a transaction signing request.<br/>\n                        You can also click the notifications to go directly to the Ambire tab.<br/>\n                        We do not send any other notifications.\n                    </div>\n                </div>\n                <Toggle checked={isNoticationsGranted} onChange={() => requestNotificationsPermission()}/>\n            </div>\n            <div className={`permission ${isFirefox() ? 'disabled' : ''}`}>\n                <div className=\"details\">\n                    <div className=\"name\">Clipboard Permission { isFirefox() ? <span className=\"unavailable\">(Unavailable in Firefox)</span> : null }</div>\n                    <div className=\"description\">\n                        Needed so that dApps can be connected automatically just by copying their WalletConnect URL.\n                    </div>\n                    { \n                        isFirefox() ? \n                            <div className=\"unavailable\">\n                                Without this, you can still use Ambire, but you will have to paste URLs manually\n                            </div> : null\n                    }\n                </div>\n                <Toggle checked={isClipboardGranted} onChange={() => requestClipboardPermission()}/>\n            </div>\n            {!isBackupOptout && <div className=\"permission\">\n                <div className=\"details\">\n                    <div className=\"name\">Download a backup</div>\n                    <div className=\"description\">\n                        In case you forget your password or lose your backup, <br/>\n                        you will have to wait {days} days and pay the recovery fee to restore access to your account.\n                    </div>\n                </div>\n                <div className=\"status\">\n                    {isJsonBackupDownloaded ? \n                        (<span className=\"check-icon\"><MdOutlineCheck/></span>) : \n                        (<Button onClick={handleExportClicked} icon={<BiExport/>}>Export</Button>)\n                    }\n                </div>\n            </div>}\n            {isAccountNotConfirmed\n                ? (<></>)\n                // Not gonna show this at all if the email is not confirmed\n                : (<Checkbox\n                    label=\"I understand, do not show this again.\"\n                    checked={modalHidden}\n                    onChange={({ target }) => setModalHidden(target.checked)}/>)\n            }\n            {\n                !isBackupOptout ? <p className=\"download-backup\">You have to download a backup of you profile before you can continue</p> : null\n            }\n        </Modal>\n    )\n}\n\nexport default PermissionsModal\n","import { Button, Checkbox, Modal, DAppIncompatibilityWarningMsg } from 'components/common'\nimport { useModals } from 'hooks'\nimport { useState } from 'react'\nimport { MdBrokenImage, MdClose } from 'react-icons/md'\nimport './UnsupportedDAppsModal.scss'\n\nconst UnsupportedDAppsModal = ({ connections, disconnect, advancedModeList, onContinue }) => {\n    const { hideModal } = useModals()\n    const [advancedMode, setAdvancedMode] = useState(false)\n\n    const handleCancel = () => {\n        connections.map(({ uri }) => disconnect(uri))\n        hideModal()\n    }\n\n    const handleContinue = () => {\n        onContinue([\n            ...advancedModeList,\n            ...connections.map(({ session }) => session.peerMeta.url)\n        ])\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdClose/>} onClick={handleCancel}>Cancel</Button>\n        <Button disabled={!advancedMode} onClick={handleContinue}>Continue</Button>\n    </>\n\n    return (\n        <Modal\n            id=\"unsupported-dapps\"\n            title=\"Unsupported dApps\"\n            buttons={buttons}\n            isCloseBtnShown={false}\n        >\n            <div className='message'>\n                These dApps does not fully support smart wallets and/or WalletConnect:\n            </div>\n\n            <div className='dapps-list'>\n                {\n                    connections.map(({ session }, i) => (\n                        <a className='dapp' key={`dapp-${i}`} href={session.peerMeta.url} target=\"_blank\" rel=\"noreferrer\">\n                            <div className='icon' style={{ backgroundImage: `url(${session.peerMeta.icons[0]})` }}>\n                                <MdBrokenImage/>\n                            </div>\n                            <div className='name'>{ session.peerMeta.name }</div>\n                        </a>\n                    ))\n                }\n            </div>\n            <DAppIncompatibilityWarningMsg/>\n            <div className='message'>\n                For more information on why these dApps do not support Ambire, please read <a href='https://help.ambire.com/hc/en-us/articles/4415496135698-Which-dApps-are-supported-by-Ambire-Wallet-' target='_blank' rel='noreferrer'>this article</a>.\n\t    </div>\n            <div className='separator'/>\n\n            <div className='advanced-mode'>\n                <label className='advanced-mode-label'>Advanced mode:</label>\n                <Checkbox label=\"I know what I'm doing and I accept the risks\" checked={advancedMode} onChange={({ target }) => setAdvancedMode(target.checked)}/>\n            </div>\n        </Modal>\n    )\n}\n\nexport default UnsupportedDAppsModal\n","import './GasIndicator.scss'\nimport { GiGasPump } from 'react-icons/gi'\nimport networks from 'consts/networks'\nimport { useEffect, useState } from 'react'\nimport { fetchGet } from 'lib/fetch'\nimport { ACTION_GAS_COSTS, AMBIRE_OVERHEAD_COST} from 'ambire-common/src/constants/actionGasCosts'\nimport { Link } from 'react-router-dom'\n\nconst GAS_COST_ERC20_TRANSFER = ACTION_GAS_COSTS.find(c => c.name === 'ERC20: Transfer').gas + AMBIRE_OVERHEAD_COST\n\nconst GasIndicator = ({ selectedNetwork, relayerURL, match }) => {\n  const [gasData, setGasData] = useState(null)\n  const [cacheBreak, setCacheBreak] = useState(() => Date.now())\n\n  useEffect(() => {\n    if ((Date.now() - cacheBreak) > 5 * 1000) setCacheBreak(Date.now())\n    const intvl = setTimeout(() => setCacheBreak(Date.now()), 60 * 1000)\n    return () => clearTimeout(intvl)\n  }, [cacheBreak])\n\n  useEffect(() => {\n    let unmounted = false\n    const url = `${relayerURL}/gasPrice/${selectedNetwork.id}?cacheBreak=${cacheBreak}`\n\n    fetchGet(url).then(gasData => {\n      if (unmounted) return\n\n      setGasData(gasData.data)\n    }).catch(err => {\n      if (unmounted) return\n      console.log('fetch error', err)\n    })\n    return () => unmounted = true\n  }, [relayerURL, selectedNetwork, cacheBreak])\n\n  if (gasData) {\n    return (<div className={'gas-info'}>\n            <span className={'native-price'}>\n                {networks.find(n => n.id === selectedNetwork.id)?.nativeAssetSymbol}: {(Number(gasData.gasFeeAssets.native)).toLocaleString('en-US', {\n              minimumFractionDigits: 2\n            })}\n            </span>\n            <Link to={match.url + \"/gas-tank\"}>\n              <span className={'gas-price'}>\n                <GiGasPump/> ${((gasData.gasPrice && gasData.gasPrice.maxPriorityFeePerGas ? (gasData.gasPrice.maxPriorityFeePerGas['medium'] + gasData.gasPrice['medium']) : gasData.gasPrice['medium']) * GAS_COST_ERC20_TRANSFER / 10 ** 18 * gasData.gasFeeAssets.native).toFixed(2)}\n              </span>\n            </Link>\n    </div>)\n  }\n  return null\n}\n\nexport default GasIndicator\n","import './SideBar.scss'\n\nimport { NavLink, useRouteMatch  } from 'react-router-dom'\nimport { MdDashboard, MdLock, MdCompareArrows, MdHelpCenter, MdClose } from 'react-icons/md'\nimport { AiOutlineAppstoreAdd } from 'react-icons/ai'\nimport { GiReceiveMoney, GiGasPump } from 'react-icons/gi'\nimport { BsCurrencyExchange } from 'react-icons/bs'\nimport { BsPiggyBank } from 'react-icons/bs'\nimport { BiTransfer } from 'react-icons/bi'\nimport { CgArrowsExchangeV } from 'react-icons/cg'\nimport { Loading, Button } from 'components/common'\nimport { useCallback, useEffect, useRef, useState, useMemo } from 'react'\nimport GasIndicator from 'components/Wallet/GasIndicator/GasIndicator'\n\nconst helpCenterUrl = 'https://help.ambire.com/hc/en-us/categories/4404980091538-Ambire-Wallet'\n\nconst SideBar = ({ match, portfolio, hidePrivateValue, relayerURL, selectedNetwork, dappsCatalog }) => {\n  const sidebarRef = useRef()\n  const [balanceFontSize, setBalanceFontSize] = useState(0)\n  const { isDappMode, sideBarOpen, toggleSideBarOpen, toggleDappMode } = dappsCatalog\n  const routeMatch = useRouteMatch('/wallet/dapps')\n\n  const dappModeSidebar = useMemo(() => isDappMode && routeMatch, [isDappMode, routeMatch])\n\n    const resizeBalance = useCallback(() => {\n        const balanceFontSizes = {\n            3: '2em',\n            5: '1.5em',\n            7: '1.3em',\n            9: '1.2em',\n            11: '1em',\n        }\n\n        const charLength = portfolio.balance.total.truncated.length\n        const closest = Object.keys(balanceFontSizes).reduce((prev, current) => Math.abs(current - charLength) < Math.abs(prev - charLength) ? current : prev)\n        setBalanceFontSize(balanceFontSizes[closest])\n    }, [portfolio.balance.total])\n\n    useEffect(() => resizeBalance(), [resizeBalance])\n\n  const onDappsClick = useCallback(() => {\n    if(dappModeSidebar) {\n      toggleDappMode()\n    }\n  }, [dappModeSidebar, toggleDappMode])  \n\n  return (\n    <div id=\"sidebar\" className={(dappModeSidebar ? 'dapp-mode' : '') + (sideBarOpen ? ' open' : '') } ref={sidebarRef}>\n      {/* NOTE: click outside not working because of the iframe - ths is simpler than adding event listeners to the dapps ifeame  */}\n      {dappModeSidebar && sideBarOpen && <div className='outside-handler' onClick={() => toggleSideBarOpen()}></div> }\n      {dappModeSidebar &&\n      <div className='ambire-logo'>\n        <div className=\"logo\" />\n        <div className=\"icon\" />\n        <Button  clear icon={<MdClose size={23} />} mini border\n          onClick={() => toggleSideBarOpen()}\n        ></Button>\n      </div>\n      }     \n      <div className=\"balance\">\n        <label>Balance</label>\n        {portfolio.isCurrNetworkBalanceLoading ? (\n          <div className={'loaderContainer'}>\n            <Loading />\n          </div>\n        ) : (\n          <div\n            className=\"balanceDollarAmount\"\n            style={{ fontSize: balanceFontSize }}\n          >\n            <span className=\"dollarSign highlight\">$</span>\n            {hidePrivateValue(portfolio.balance.total.truncated)}\n            <span className=\"highlight\">\n              .{hidePrivateValue(portfolio.balance.total.decimals)}\n            </span>\n          </div>\n        )}\n        <div>\n          <GasIndicator \n            relayerURL={relayerURL} selectedNetwork={selectedNetwork} match={match}/>\n        </div>\n      </div>\n      <nav>\n        <NavLink to={match.url + \"/dashboard\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <MdDashboard/>Dashboard\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/deposit\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <GiReceiveMoney/>Deposit\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/transfer\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BiTransfer/>Transfer\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/swap\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BsCurrencyExchange/>Swap\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/dapps\"} activeClassName=\"selected\">\n          <div className=\"item\" onClick={onDappsClick}>\n            <AiOutlineAppstoreAdd />dApps\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/gas-tank\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <GiGasPump/>Gas Tank\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/cross-chain\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <CgArrowsExchangeV/>Cross-Chain\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/earn\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BsPiggyBank/>Earn\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/transactions\"} activeClassName=\"selected\">\n          <div className=\"item\">\n                <MdCompareArrows/>Transactions\n          </div>\n        </NavLink>\n        {/* Temporarily commented OpenSea tab. */}\n        {/* <NavLink to={match.url + \"/opensea\"} activeClassName=\"selected\">\n          <div className=\"item\">\n            <div className='opensea-icon'/>OpenSea\n          </div>\n        </NavLink> */}\n        <NavLink to={match.url + \"/security\"} activeClassName=\"selected\">\n          <div className=\"item\">\n            <MdLock/>Security\n          </div>\n        </NavLink>\n        <div className=\"separator\"></div>\n        <a href={helpCenterUrl} target=\"_blank\" rel=\"noreferrer\">\n          <div className=\"item\" id=\"help-center\">\n            <MdHelpCenter/>Help Center\n          </div>\n        </a>\n      </nav>\n    </div>\n  )\n}\n\nexport default SideBar\n","import './AddCustomDappModal.scss'\nimport { useState, useMemo, useCallback, useEffect } from 'react'\nimport { Button, Modal, TextInput, Radios, ToolTip } from 'components/common'\nimport { useModals } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { MdOutlineAdd, MdOutlineClose, MdImage, MdErrorOutline, MdBuildCircle } from 'react-icons/md'\nimport { fetch } from 'lib/fetch'\nimport NETWORKS from 'consts/networks'\nimport { getManifestFromDappUrl, getDappId, getNormalizedUrl } from 'ambire-common/src/services/dappCatalog'\nimport { isValidUrl, isValidCustomDappData } from 'ambire-common/src/services/validations'\nimport DAPPS_ICON from 'resources/dapps.svg'\n\nconst AddCustomDappModal = ({ dappsCatalog, dappUrl = '' }) => {\n    const { addToast } = useToasts()\n    const { hideModal } = useModals()\n\n    const { addCustomDapp, isDappInCatalog } = dappsCatalog\n    const [name, setName] = useState('')\n    const [url, setUrl] = useState('')\n    const [description, setDescription] = useState('')\n    const [iconUrl, setIconUrl] = useState(null)\n    const [connectionType, setConnectionType] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [urlErr, setUrlErr] = useState(null)\n    const [urlInfo, setUrlInfo] = useState(null)\n    const [iconUrlInfo, setIconUrlInfo] = useState(null)\n    const [networksInfo, setNetworksInfo] = useState(null)\n    const [networks, setNetworks] = useState([])\n    const [inputValidation, setInputValidation] = useState({})\n    const [isAppAlreadyExists, setIsAppAlreadyExists] = useState(false)\n\n    const disabled = useMemo(() => !inputValidation.success || isAppAlreadyExists || loading, [inputValidation.success, isAppAlreadyExists, loading])\n\n    const addDapp = useCallback(async () => {\n        setLoading(true)\n\n        addCustomDapp({\n            id: getDappId(name),\n            name,\n            url,\n            description,\n            iconUrl: iconUrlInfo ? '' : iconUrl,\n            connectionType,\n            networks\n        })\n\n        addToast(`${name} added to Ambire Wallet dApp catalog`)\n\n        setLoading(false)\n        hideModal()\n    }, [addCustomDapp, addToast, connectionType, description, hideModal, iconUrl, iconUrlInfo, name, networks, url])\n\n    const onUrlInput = useCallback(async (urlInputStr = '') => {\n        const normalizedDappUrl = getNormalizedUrl(urlInputStr)\n        setUrl(normalizedDappUrl)\n        setName('')\n        setDescription('')\n        setIconUrl('')\n        setConnectionType('')\n        setUrlInfo('')\n        setIconUrlInfo('')\n        setNetworksInfo('')\n        setLoading(true)\n        const isValidUrlInput = isValidUrl(normalizedDappUrl)\n\n        if (!isValidUrlInput) {\n            setUrlErr(!!normalizedDappUrl ? 'Invalid Url' : null)\n            setLoading(false)\n            return\n        } else (\n            setUrlErr(null)\n        )\n        const isInCatalog = isDappInCatalog(normalizedDappUrl)\n        setIsAppAlreadyExists(isInCatalog)\n\n        const manifest = await getManifestFromDappUrl(fetch, normalizedDappUrl)\n\n        if (manifest) {\n            setName(manifest.name)\n            setDescription(manifest.description)\n            setIconUrl(manifest.iconUrl)\n            setConnectionType(manifest.connectionType)\n            setNetworks(manifest.networks || [])\n            setUrlInfo(isInCatalog ? `${normalizedDappUrl} is already in your wallet catalog` : '')\n            setNetworksInfo(!manifest?.networks?.length ? `Supported networks not detected! Please select manually.` : '')\n        } else {\n            setUrlInfo('Can\\'t find dApp data — make sure it supports Gnosis Safe apps or WalletConnect')\n        }\n\n        setLoading(false)\n    }, [isDappInCatalog])\n\n    const onRadioChange = useCallback(value => {\n        setConnectionType(value)\n    }, [])\n\n    const radios = useMemo(() => [\n        {\n            label: 'Gnosis Safe App',\n            value: 'gnosis',\n            disabled: !url || urlErr\n        },\n        {\n            label: 'WalletConnect',\n            value: 'walletconnect',\n            disabled: !url || urlErr\n        }\n    ], [url, urlErr])\n\n    useEffect(() => {\n        if (dappUrl) {\n            onUrlInput(dappUrl)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const buttons = useMemo(() =>\n        <>\n            <Button clear icon={<MdOutlineClose />} onClick={() => hideModal()}>Close</Button>\n            <Button icon={<MdOutlineAdd />} disabled={disabled} onClick={addDapp}>Add</Button>\n        </>\n        , [addDapp, disabled, hideModal])\n\n    const onNetworkClick = (network) => {\n        setNetworks(prev => {\n            const index = prev.indexOf(network)\n            const updated = [...prev]\n            if (index >= 0) {\n                updated.splice(index, 1)\n            } else {\n                updated.push(network)\n            }\n\n            return updated\n        })\n    }\n\n    useEffect(() => {\n        setInputValidation(url ? isValidCustomDappData({\n            id: getDappId(name || ''),\n            name,\n            url,\n            description,\n            iconUrl: iconUrlInfo ? '' : iconUrl,\n            connectionType,\n            networks\n        }) : {})\n    }, [connectionType, description, iconUrl, iconUrlInfo, name, networks, url])\n\n    return (\n        <Modal id='add-custom-dapp-modal'\n            title={<div className='custom-dapp-title'>\n                <ToolTip label={`Click here to see how create dApp for Ambire Wallet catalog`}>\n                    <a className=\"info-btn\" href={'https://github.com/AmbireTech/wallet-dapp-catalog#readme'}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\">\n                        <MdBuildCircle size={32} />\n                    </a>\n                </ToolTip>\n                <div>Add custom dApp</div>\n            </div>\n            }\n            buttons={buttons}>\n            <div>\n                <TextInput\n                    value={url}\n                    label=\"URL\"\n                    onInput={value => onUrlInput(value)}\n                    className='dapp-input'\n                    placeholder='https://some.dapp.com'\n                />\n                {<div className='input-err' >\n                    {urlErr || inputValidation?.errors?.url || urlInfo}\n                </div>}\n            </div>\n\n            <div>\n                <TextInput\n                    small\n                    label=\"Name\"\n                    value={name}\n                    onInput={value => setName(value)}\n                    className='dapp-input'\n                />\n                {<div className='input-err' >\n                    {inputValidation?.errors?.name}\n                </div>}\n            </div>\n            <div>\n                <TextInput\n                    small\n                    label=\"Description\"\n                    value={description}\n                    onInput={value => setDescription(value)}\n                    className='dapp-input'\n                />\n            </div>\n\n            <div>\n                <div className='icon-input'>\n                    <TextInput\n                        small\n                        label=\"Icon URL\"\n                        value={iconUrl}\n                        onInput={value => { setIconUrl(value); setIconUrlInfo('') }}\n                        className='dapp-input'\n                    />\n                    <div className='icon-wrapper'>\n                        {\n\n                            iconUrl && !iconUrlInfo ?\n                                <img width={46} height={46} src={iconUrl || DAPPS_ICON} alt={(name || 'no') + ' logo'}\n                                    onError={() => {\n                                        setIconUrlInfo('Invalid icon URL, please update it or default dApp icon will be displayed');\n                                    }} />\n                                : iconUrlInfo ? <MdErrorOutline size={40} /> : <MdImage size={40} />}\n                    </div>\n                </div>\n                {<div className='input-err' >\n                    {inputValidation?.errors?.iconUrl || iconUrlInfo}\n                </div>}\n            </div>\n\n            <div>\n                <div className='connection-radios'>\n                    <div>Connection Type</div>\n                    <Radios radios={radios} value={connectionType} onChange={onRadioChange} row />\n                </div>\n                {<div className='input-err' >\n                    {inputValidation?.errors?.connectionType}\n                </div>}\n            </div>\n\n            <div className='networks'>\n                <div>Supported networks ({networks.length} selected)</div>\n                <div className='networks-container'>\n                    {\n                        NETWORKS.map(n => {\n                            return (\n                                <ToolTip label={n.name} key={n.id}>\n                                    <span className={`network-tag${networks.includes(n.id) ? ' selected' : ''}`}\n                                        style={{ backgroundImage: `url(${n.icon})` }}\n                                        onClick={() => onNetworkClick(n.id)}\n                                    >\n                                    </span>\n                                </ToolTip>\n                            )\n                        })\n                    }\n                </div>\n                {<div className='input-err' >\n                    {networksInfo || inputValidation?.errors?.networks}\n                </div>}\n            </div>\n        </Modal>\n    )\n\n}\n\nexport default AddCustomDappModal\n","import NETWORKS from 'consts/networks'\nimport { TextInput, ToolTip } from 'components/common'\nimport GnosisSafeAppIframe from 'components/Plugins/GnosisSafeApps/GnosisSafeAppIframe'\nimport './DappsCatalog.scss'\nimport { useCallback, Fragment, useEffect, useState } from 'react'\nimport { MdInfo, MdSearch, MdDelete, MdBuildCircle } from 'react-icons/md'\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai'\nimport { Button } from 'components/common'\nimport DAPPS_ICON from 'resources/dapps.svg'\nimport AMBIRE_ICON_HOT from 'resources/icon.png'\nimport AddCustomDappModal from 'components/Modals/AddCustomDappModal/AddCustomDappModal'\nimport { useModals } from 'hooks'\nimport { fetch } from 'lib/fetch'\nimport { canOpenInIframe, getManifestFromDappUrl } from 'ambire-common/src/services/dappCatalog'\nimport { useOneTimeQueryParam } from 'hooks/oneTimeQueryParam'\nimport { useHistory } from 'react-router-dom'\n\nconst CONNECTION_TYPE_LABEL = {\n  'walletconnect': 'WalletConnect'\n}\n\nconst CATEGORY_LABEL = {\n  'walletconnect': 'WalletConnect'\n}\n\nconst DappsCatalog = ({ network, dappsCatalog, selectedAcc, gnosisConnect, gnosisDisconnect }) => {\n  const dappUrl = useOneTimeQueryParam('dappUrl')\n  const { addCustomDapp, loadDappFromUrl, isDappMode, currentDappData, toggleFavorite, favorites, filteredCatalog, onCategorySelect, categoryFilter, search, onSearchChange, categories, loadCurrentDappData, removeCustomDapp } = dappsCatalog\n  const { showModal } = useModals()\n  const [dappUrlFromLink, setDappUrlsFromLink] = useState('')\n  const history = useHistory()\n\n  useEffect(() => {\n    setDappUrlsFromLink(dappUrl)\n  }, [dappUrl])\n\n  const sortFiltered = useCallback((filteredItems) => {\n    return filteredItems.map(item => {\n      return {\n        ...item,\n        supported: !item.networks?.length || !!item.networks?.find(supported => supported === network.id)\n      }\n    }).sort((a, b) => {\n      return b.supported - a.supported\n    })\n  }, [network])\n\n  const getNetworkTooltipContent = useCallback((networks) => {\n    return (\n      <div className='tooltipNetworks'>\n        {\n          networks?.map((n) => {\n            const network = NETWORKS.find(an => an.id === n)\n            if (network) {\n              return (\n                <div key={network.id} className='tooltipNetwork'>\n                  <span className='tooltipNetwork-icon'\n                    style={{ backgroundImage: `url(${network.iconUrl})` }}>\n                  </span>\n                  <span>\n                    {network.name}\n                  </span>\n                </div>\n              )\n            }\n            return null\n          }\n          ).filter(n => n)\n        }\n      </div>\n    )\n  }, [])\n\n  const onFavoriteClick = useCallback((e, item) => {\n    toggleFavorite(item)\n    e.stopPropagation()\n  }, [toggleFavorite])\n\n  const openDapp = useCallback(async (item) => {\n    if ((item.connectionType === 'gnosis' && (!item.custom)) || item.forceInternal || await canOpenInIframe(fetch, item.url)) {\n      loadCurrentDappData(item)\n    } else {\n      window.open(item.url, '_blank')\n    }\n  }, [loadCurrentDappData])\n\n  const onRemoveCustomClick = useCallback((e, item) => {\n    e.stopPropagation()\n    e.preventDefault()\n    removeCustomDapp(item)\n  }, [removeCustomDapp])\n\n  const openCustomDappModal = useCallback((_ev, dappUrl) => {\n    showModal(<AddCustomDappModal dappsCatalog={dappsCatalog} dappUrl={dappUrl} />)\n  }, [dappsCatalog, showModal])\n\n  useEffect(() => {\n    if (!dappUrlFromLink) return\n\n    if (!selectedAcc) {\n      // TODO: Handle global query param\n      history.push(`/add-account?dappUrl=${dappUrlFromLink}`)\n    }\n\n    const loaded = loadDappFromUrl(dappUrlFromLink)\n    setDappUrlsFromLink('')\n\n    if (loaded) {\n      return\n    } else {\n      async function tryAutoLoad() {\n        const manifest = await getManifestFromDappUrl(fetch, dappUrlFromLink)\n        if (manifest && manifest.isWalletPlugin) {\n          addCustomDapp(manifest)\n        } else {\n          openCustomDappModal(null, dappUrlFromLink)\n        }\n      }\n\n      tryAutoLoad()\n        .catch(e => {\n          console.error('tryAutoLoad:', e);\n        })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dappUrlFromLink, loadDappFromUrl, selectedAcc])\n\n  return (\n    <section id='dappCatalog'>\n      {isDappMode && currentDappData ?\n        <GnosisSafeAppIframe\n          className='dapp-iframe'\n          network={network}\n          selectedApp={currentDappData}\n          selectedAcc={selectedAcc}\n          // removeApp={removeCustomPlugin}\n          gnosisConnect={gnosisConnect}\n          gnosisDisconnect={gnosisDisconnect}\n        />\n        :\n        <Fragment>\n          <div className='filter-section'>\n            <div className='input-icon'>\n              <TextInput value={search} onChange={onSearchChange} placeholder='Search filter' icon={<MdSearch />} />\n            </div>\n            <div className='categories'>\n              {categories.map(c => {\n                return <span\n                  key={c.name}\n                  className={`category category-${c.name}${categoryFilter?.name === c.name ? ' selected' : ''}`}\n                  onClick={() => onCategorySelect(c)}>{CATEGORY_LABEL[c.name] || c.name}</span>\n              })}\n            </div>\n          </div>\n\n          <div className='catalogItems'>\n            <div className={`catalogItem add-custom-dapp`} >\n              <div className='tools'>\n                <ToolTip label={`Click here to see how create dApp for Ambire Wallet catalog`}>\n                  <a className=\"info-btn\" href={'https://github.com/AmbireTech/wallet-dapp-catalog#readme'}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\">\n                    <MdBuildCircle size={23} />\n                  </a>\n                </ToolTip>\n                <img className='custom-dapp' src={DAPPS_ICON} alt='add custom dapps' />\n              </div>\n              <div className='custom-dapp-icon-wrapper'>\n                <img className='custom-dapp-icon' src={DAPPS_ICON} alt='add custom dapps icon' />\n              </div>\n              <Button border mini onClick={openCustomDappModal}>Add custom dApp</Button>\n            </div>\n            {\n              sortFiltered(filteredCatalog).map(item => {\n                return <div className={`catalogItem${item.supported ? '' : ' not-supported'}`}\n                  onClick={() => item.supported && openDapp(item)}\n                  key={item.id}\n                >\n\n                  <div className='tools'>\n                    {item.featured &&\n                      // <ToolTip label={`Hot dApp`}>\n                        <img className='icon hot-dapp' src={AMBIRE_ICON_HOT} alt='hot dApp icon' />\n                      // </ToolTip>\n                    }\n                    {item.custom &&\n                      // <ToolTip label={`Remove ${item.name} from your catalog`}>\n                        <MdDelete className='icon remove-dapp' onClick={(e) => onRemoveCustomClick(e, item)} />\n                      // </ToolTip>\n                    }\n                    {item.custom &&\n                      <img className='custom-dapp icon' src={DAPPS_ICON} alt='custom dapp icon' />\n                    }\n                    {/* <ToolTip label={`${favorites[item.url] ? 'Remove' : 'Add'} ${item.name} ${favorites[item.url] ? 'from' : 'to'} favorites`}> */}\n                      <span className={`favorite${favorites[item.url] ? ' selected' : ''}`} onClick={(e) => onFavoriteClick(e, item)}> {\n                        favorites[item.url]\n                          ? <AiFillStar className='icon' /> :\n                          <AiOutlineStar className='icon' />\n\n                      }</span>\n                    {/* </ToolTip> */}\n                  </div>\n\n                  <div className='base-info'>\n                    <div className='logoSplit'>\n                      <div className='logo'>\n                        <img src={item.iconUrl || DAPPS_ICON} alt={item.name} />\n                      </div>\n                      <div className='content'>\n                        <span className='title'>{item.name}</span>\n                      </div>\n                    </div>\n                    <div className='description'>{item.description}</div>\n                  </div>\n\n                  <div>\n\n                    {!item.supported &&\n                      <div className='tag-row unsupported'>\n                        <span className='tag unsupported'>{network.id} unsupported</span>\n                      </div>\n                    }\n\n                    <div className='aligned-tag-rows'>\n                      {\n                        !!item.networks?.length &&\n                        <ToolTip htmlContent={getNetworkTooltipContent(item.networks)} >\n                          <div className='tag-row network-tag-row'>\n                            {/* NOTE: remove reverse if there is way to match the design without flex-direction: row-reverse; */}\n                            {\n                              item.networks?.length > 3 &&\n                              <span className='tag network-tag network-tag-more'>...</span>\n                            }\n                            {\n                              item.networks?.slice(0, 3).reverse().map((n) => {\n                                const network = NETWORKS.find(an => an.id === n)\n                                if (network) {\n                                  return <span key={network.id} className='tag network-tag'\n                                    style={{ backgroundImage: `url(${network.icon})` }}></span>\n                                }\n                                return null\n                              })\n                            }\n                          </div>\n                        </ToolTip>\n                      }\n\n                      <div className='tag-row tag-types'>\n                        <span className={`tag type-tag type-tag-${item.category}`}>{CONNECTION_TYPE_LABEL[item.category] || item.category}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              })\n            }\n          </div>\n\n          {\n            !filteredCatalog.length &&\n            <div className='no-dapp-found'>No dApp found in our list matching your criteria</div>\n          }\n\n          <div className='info-wc'>\n            <MdInfo /> Note: any dApp that supports WalletConnect can be connected as well\n          </div>\n        </Fragment>\n      }\n    </section>\n  )\n}\n\nexport default DappsCatalog\n","import \"./Wallet.scss\"\n\nimport { lazy, Suspense, useCallback, useEffect, useMemo, useRef } from 'react'\nimport { Switch, Route, Redirect, useLocation, useRouteMatch } from \"react-router-dom\"\nimport PluginGnosisSafeApps from 'components/Plugins/GnosisSafeApps/GnosisSafeApps'\nimport { useModals, usePermissions, useLocalStorage } from 'hooks'\nimport { isFirefox } from 'lib/isFirefox'\nimport unsupportedDApps from 'ambire-common/src/constants/unsupportedDApps'\n// Components\nimport TopBar from \"./TopBar/TopBar\"\nimport PermissionsModal from \"components/Modals/PermissionsModal/PermissionsModal\"\nimport UnsupportedDAppsModal from \"components/Modals/UnsupportedDAppsModal/UnsupportedDAppsModal\"\nimport SideBar from \"./SideBar/SideBar\"\nimport { Loading } from \"components/common\"\nimport DappsCatalog from \"./DappsCatalog/DappsCatalog\"\n// Pages\nconst Transfer = lazy(() => import(\"./Transfer/Transfer\"))\nconst Dashboard = lazy(() => import(\"./Dashboard/Dashboard\"))\nconst Swap = lazy(() => import(\"./Swap/Swap\"))\nconst Earn = lazy(() => import(\"./Earn/Earn\"))\nconst Security = lazy(() => import(\"./Security/Security\"))\nconst Transactions = lazy(() => import('./Transactions/Transactions'))\nconst Collectible = lazy(() => import(\"./Collectible/Collectible\"))\nconst CrossChain = lazy(() => import(\"./CrossChain/CrossChain\"))\nconst OpenSea = lazy(() => import(\"./OpenSea/OpenSea\"))\nconst Deposit = lazy(() => import(\"./Deposit/Deposit\"))\nconst Gas = lazy(() => import(\"./Gas/Gas\"))\n\nexport default function Wallet(props) {\n  const { showModal } = useModals()\n  const { isClipboardGranted, isNoticationsGranted, arePermissionsLoaded, modalHidden } = usePermissions()\n  const { pathname } = useLocation()\n  const walletContainer = useRef()\n  const { isDappMode } = props.dappsCatalog\n  const routeMatch = useRouteMatch('/wallet/dapps')\n\n  const dapModeSidebar = useMemo(() => isDappMode && routeMatch, [isDappMode, routeMatch])\n\n  const isLoggedIn = useMemo(() => props.accounts.length > 0, [props.accounts])\n  const [advancedModeList, setAdvancedModeList] = useLocalStorage({ key: 'dAppsAdvancedMode', defaultValue: [] })\n\n  const routes = [\n    {\n      path: '/dashboard/:tabId?/:page?',\n      component: <Dashboard\n        portfolio={props.portfolio}\n        selectedNetwork={props.network}\n        selectedAccount={props.selectedAcc}\n        accounts={props.accounts}\n        setNetwork={props.setNetwork}\n        privateMode={props.privateMode}\n        rewardsData={props.rewardsData}\n        addRequest={props.addRequest}\n        relayerURL={props.relayerURL}\n        useStorage={props.useStorage}\n        userSorting={props.userSorting}\n        setUserSorting={props.setUserSorting}\n        match={props.match}\n        showSendTxns={props.showSendTxns}\n      />\n    },\n    {\n      path: '/deposit',\n      component: <Deposit\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={props.network}\n        accounts={props.accounts}\n        addRequest={props.addRequest}\n        relayerURL={props.relayerURL}\n        portfolio={props.portfolio}\n        useStorage={props.useStorage}\n      />\n    },\n    {\n      path: '/transfer/:tokenAddressOrSymbol?',\n      component: <Transfer\n        portfolio={props.portfolio}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={{...props.network}}\n        addRequest={props.addRequest}\n        accounts={props.accounts}\n        addressBook={props.addressBook}\n      />\n    },\n    {\n      path: '/cross-chain',\n      component: <CrossChain\n        addRequest={props.addRequest}\n        selectedAccount={props.selectedAcc}\n        portfolio={props.portfolio}\n        network={props.network}\n        relayerURL={props.relayerURL}\n      />\n    },\n    {\n      path: '/earn',\n      component: <Earn\n        portfolio={props.portfolio}\n        selectedNetwork={{ ...props.network }}\n        selectedAcc={props.selectedAcc}\n        rewardsData={props.rewardsData}\n        addRequest={props.addRequest}\n      />\n    },\n    {\n      path: '/security',\n      component: <Security\n        relayerURL={props.relayerURL}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={props.network}\n        accounts={props.accounts}\n        addRequest={props.addRequest}\n        showSendTxns={props.showSendTxns}\n        onAddAccount={props.onAddAccount}\n      />\n    },\n    {\n      path: '/transactions/:page?',\n      component: <Transactions\n        relayerURL={props.relayerURL}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={props.network}\n        addRequest={props.addRequest}\n        eligibleRequests={props.eligibleRequests}\n        showSendTxns={props.showSendTxns}\n        setSendTxnState={props.setSendTxnState}\n      />\n    },\n    {\n      path: '/swap',\n      component: <Swap\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    },\n    {\n      path: '/dapps',\n      component: <DappsCatalog\n        network={props.network}\n        dappsCatalog={props.dappsCatalog}\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n      />\n    },\n    {\n      path: '/opensea',\n      component: <OpenSea\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    },\n    {\n      path: '/nft/:network/:collectionAddr/:tokenId',\n      component: <Collectible\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={{...props.network}}\n        addRequest={props.addRequest}\n        accounts={props.accounts}\n        addressBook={props.addressBook}\n      />\n    },\n    {\n      path: '/gnosis/plugins/:plugin?',\n      component: <PluginGnosisSafeApps\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    },\n    {\n      path: '/gas-tank',\n      component: <Gas\n        selectedNetwork={{...props.network}}\n        relayerURL={props.relayerURL}\n        portfolio={props.portfolio}\n        selectedAccount={props.selectedAcc}\n        userSorting={props.userSorting}\n        setUserSorting={props.setUserSorting}\n        setGasTankState={props.setGasTankState}\n        gasTankState={props.gasTankState}\n      />\n    }\n  ]\n\n  const LoggedInGuard = () => (\n    !isLoggedIn ? <Redirect to=\"/add-account\"/> : null\n  )\n\n  const handlePermissionsModal = useCallback(async () => {\n    const account = props.accounts.find(({ id }) => id === props.selectedAcc)\n    if (!account) return\n\n    const relayerIdentityURL = `${props.relayerURL}/identity/${account.id}`\n\n    const areBlockedPermissions = arePermissionsLoaded\n      && ((!isFirefox() && !isClipboardGranted) || !isNoticationsGranted)\n    const showCauseOfPermissions = areBlockedPermissions && !modalHidden\n    const showCauseOfEmail = !!account.emailConfRequired\n    const showCauseOfBackupOptout = account.backupOptout\n\n    const permissionsModal = <PermissionsModal\n      relayerIdentityURL={relayerIdentityURL}\n      account={account}\n      onAddAccount={props.onAddAccount}\n      isCloseBtnShown={!showCauseOfBackupOptout}\n      isBackupOptout={!showCauseOfBackupOptout}\n      showThankYouPage={props.showThankYouPage}\n    />\n\n    if (showCauseOfEmail || showCauseOfPermissions || showCauseOfBackupOptout) showModal(permissionsModal, { disableClose: true })\n  }, [props.accounts, props.relayerURL, props.onAddAccount, props.showThankYouPage, props.selectedAcc, arePermissionsLoaded, isClipboardGranted, isNoticationsGranted, modalHidden, showModal])\n\n  useEffect(() => handlePermissionsModal(), [handlePermissionsModal])\n\n  useEffect(() => {\n    const scrollTimeout = setTimeout(() => walletContainer.current && walletContainer.current.scrollTo({ top: 0, behavior: 'smooth' }), 0)\n    return () => clearTimeout(scrollTimeout)\n  }, [pathname])\n\n  useEffect(() => {\n    const unsupported = props.connections\n      .filter(({ session }) => session && session.peerMeta && unsupportedDApps.includes(session.peerMeta.url) && !advancedModeList.includes(session.peerMeta.url))\n\n    if (unsupported.length) showModal(<UnsupportedDAppsModal connections={unsupported} disconnect={props.disconnect} advancedModeList={advancedModeList} onContinue={setAdvancedModeList} />)\n  }, [props.connections, props.disconnect, showModal, advancedModeList, setAdvancedModeList])\n\n  return (\n    <div id=\"wallet\">\n      <SideBar match={props.match} portfolio={props.portfolio} hidePrivateValue={props.privateMode.hidePrivateValue} relayerURL={props.relayerURL} selectedNetwork={props.network} dappsCatalog={props.dappsCatalog} />\n      <TopBar {...props} />\n\n      <div id=\"wallet-container\" className={dapModeSidebar ? 'dapp-mode' : ''} ref={walletContainer}>\n        <div id=\"wallet-container-inner\">\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              {\n                routes.map(({ path, component }) => (\n                  <Route exact path={props.match.url + path} key={path}>\n                    <LoggedInGuard/>\n                      { component ? component : null }\n                  </Route>\n                ))\n              }\n              <Route path={props.match.url + '/*'}>\n                <Redirect to={props.match.url + '/dashboard'} />\n              </Route>\n              <Route path={props.match.url}>\n                <LoggedInGuard/>\n              </Route>\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import './GnosisSafeApps.scss'\n\nimport { useEffect, useRef, useState } from 'react'\nimport {\n    Skeleton,\n    AmbireLoading\n} from 'components/common'\n\nexport default function GnosisSafeAppIframe({\n    selectedApp = {},\n    title = 'Ambire Plugin',\n    network,\n    selectedAcc,\n    gnosisConnect,\n    gnosisDisconnect,\n    className\n}) {\n\n    const { chainId } = network || {}\n    const { url } = selectedApp || {}\n    const [loading, setLoading] = useState(true)\n    const [hash, setHash] = useState('')\n    const iframeRef = useRef(null);\n\n\n    useEffect(() => {\n        const newHash = url + chainId + selectedAcc\n        setHash(newHash)\n    }, [chainId, selectedAcc, url])\n\n    useEffect(() => {\n        setLoading(true)\n    }, [hash])\n\n    useEffect(() => {\n        gnosisConnect({\n            selectedAcc,\n            iframeRef,\n            app: selectedApp\n        });\n\n        return () => {\n            gnosisDisconnect()\n        }\n\n    }, [selectedApp, network, selectedAcc, iframeRef, gnosisConnect, gnosisDisconnect])\n\n    return (\n        <div id=\"plugin-gnosis-container\" className={className}>\n            {\n                loading &&\n                <div className='iframe-placeholder'>\n                    <Skeleton >\n                        <AmbireLoading />\n                    </Skeleton>\n                </div>\n            }\n\n            {\n                url &&\n                <iframe\n                    id={hash}\n                    key={hash}\n                    ref={iframeRef}\n                    title={title}\n                    src={url}\n                    onLoad={() => setLoading(false)}\n                    style={loading ? { display: 'none' } : {}}\n                />\n            }\n        </div>)\n}\n","export default __webpack_public_path__ + \"static/media/circle.ee8bb2e5.svg\";","import './UnbondModal.scss'\n\nimport { createPortal } from 'react-dom'\nimport { Button } from 'components/common'\nimport { MdOutlineClose } from 'react-icons/md'\nimport Lottie from 'lottie-react'\nimport AnimationData from './assets/animation.json'\nimport Circle from './assets/circle.svg'\n\nconst UnbondModal = ({ isVisible, hideModal, text, onClick }) => {\n  const root = document.getElementById('root')\n  \n  return isVisible ? createPortal(\n    <div id=\"unbond-modal\">\n      <div className='modal'>\n        <div className='content'>\n          <div className='danger-animation-wrapper'>\n            <Lottie className='danger-animation' animationData={AnimationData} background=\"transparent\" speed=\"1\" loop autoplay />\n            <img src={Circle} alt='circle' className='danger-animation-circle'/>\n          </div>\n          <span className='warning-title'>Warning</span>\n          <p className='warning-text'>\n            {text}\n          </p>\n        </div>\n        <div className='buttons'>\n          <Button className='button' danger onClick={onClick}>Yes, Claim anyway</Button>\n          <Button className='button' clear icon={<MdOutlineClose/>} onClick={hideModal}>Close</Button>\n        </div>\n      </div>\n    </div>\n  , root) : null\n}\n\nexport default UnbondModal"],"sourceRoot":""}