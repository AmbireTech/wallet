{"version":3,"sources":["components/EmailLogin/EmailLogin.js","components/LoginOrSignupForm/LoginOrSignupForm.js","components/LoginOrSignupForm/LoginOrSignupForm.module.scss","resources/icons/chevron-left.svg","components/EmailLogin/EmailLogin.module.scss"],"names":["EmailLogin","relayerURL","onAddAccount","useState","requiresEmailConfFor","setRequiresConfFor","err","setErr","inProgress","setInProgress","useLocalStorage","key","isStringStorage","loginSessionKey","setLoginSessionKey","removeLoginSessionKey","attemptLogin","ignoreEmailConfirmationRequired","a","email","passphrase","fetchCaught","encodeURIComponent","headers","authorization","resp","body","errMsg","status","errType","fetch","method","requestAuthResp","json","sessionKey","_id","identityInfo","salt","identityFactoryAddr","baseIdentityAddr","bytecode","meta","quickAccSigner","primaryKeyBackup","id","signer","select","message","onLoginUserAction","useEffect","timer","setTimeout","clearTimeout","className","styles","loginSignupWrapper","emailLoginSection","logo","error","href","inner","emailConf","emailAnimation","animationData","AnimationData","background","speed","loop","autoplay","loginEmail","onAccRequest","magicLink","backButton","LoginOrSignupForm","action","passConfirmInput","useRef","passphraseConfirm","state","setState","onUpdate","updates","newState","invalid","current","setCustomValidity","isSignup","days","Math","ceil","accountPresets","quickAccTimelock","noBackupDisclaimer","additionalOnSignup","backupOptout","label","required","Link","children","target","rel","onClick","e","stopPropagation","additionalInputs","type","minLength","placeholder","value","onChange","ref","labelClassName","checkboxLabel","checked","onSubmit","preventDefault","accType","style","display","disabled","module","exports","_g","_excluded","_extends","Object","assign","i","arguments","length","source","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgChevronLeft","_ref","svgRef","title","titleId","props","xmlns","width","height","viewBox","transform","d","fill","ForwardRef"],"mappings":"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","file":"static/js/25.3c2e8037.chunk.js","sourcesContent":["import styles from './EmailLogin.module.scss'\n\nimport { useState, useEffect } from 'react'\n\nimport { fetch, fetchCaught } from 'lib/fetch'\n\nimport LoginOrSignup from 'components/LoginOrSignupForm/LoginOrSignupForm'\nimport { useLocalStorage } from 'hooks'\n\nimport { ReactComponent as ChevronLeftIcon } from 'resources/icons/chevron-left.svg'\n\nimport Lottie from 'lottie-react'\nimport AnimationData from './assets/confirm-email.json'\n\n// NOTE: the same polling that we do here with the setEffect should be used for txns\n// that require email confirmation\nexport default function EmailLogin({ relayerURL, onAddAccount }) {\n    const [requiresEmailConfFor, setRequiresConfFor] = useState(null)\n    const [err, setErr] = useState('')\n    const [inProgress, setInProgress] = useState(false)\n    const [loginSessionKey, setLoginSessionKey, removeLoginSessionKey] = useLocalStorage({ key: 'loginSessionKey', isStringStorage: true })\n\n    const EMAIL_VERIFICATION_RECHECK = 3000\n\n    const attemptLogin = async ({ email, passphrase }, ignoreEmailConfirmationRequired) => {\n      // try by-email first: if this returns data we can just move on to decrypting\n      // does not matter which network we request\n      const { resp, body, errMsg } = await fetchCaught(`${relayerURL}/identity/by-email/${encodeURIComponent(email)}`, { headers: {\n          authorization: loginSessionKey ? `Bearer ${loginSessionKey}` : null\n      } })\n      if (errMsg) {\n        setErr(errMsg)\n        return\n      }\n\n      if (resp.status === 401 && body.errType === 'UNAUTHORIZED') {\n        if (ignoreEmailConfirmationRequired) {\n          // we still have to call this to make sure the state is consistent and to force a re-render (to trigger the effect again)\n          setRequiresConfFor({ email, passphrase })\n          return\n        }\n        const requestAuthResp = await fetch(`${relayerURL}/identity/by-email/${encodeURIComponent(email)}/request-confirm-login`, { method: 'POST' })\n        if (requestAuthResp.status !== 200) {\n          setErr(`Email confirmation needed but unable to request: ${requestAuthResp.status}`)\n          return\n        }\n        const loginSessionKey = (await requestAuthResp.json()).sessionKey\n        setLoginSessionKey(loginSessionKey)\n        setRequiresConfFor({ email, passphrase })\n        return\n      }\n      // If we make it beyond this point, it means no email confirmation will be required\n      if (resp.status === 404 && body.errType === 'DOES_NOT_EXIST') {\n        setRequiresConfFor(null)\n        setErr('Account does not exist')\n        return\n      }\n\n      if (resp.status === 200) {\n        const identityInfo = body\n        const { _id, salt, identityFactoryAddr, baseIdentityAddr, bytecode } = identityInfo\n        const { quickAccSigner, primaryKeyBackup } = identityInfo.meta\n\n        onAddAccount({\n          id: _id,\n          email: identityInfo.meta.email,\n          primaryKeyBackup,\n          salt, identityFactoryAddr, baseIdentityAddr, bytecode,\n          signer: quickAccSigner\n        }, { select: true })\n\n        // Remove the key value so that it can't be used anymore on this browser\n        removeLoginSessionKey()\n      } else {\n        setErr(body.message ? `Relayer error: ${body.message}` : `Unknown no-message error: ${resp.status}`)\n      }\n      setRequiresConfFor(null)\n    }\n\n    const onLoginUserAction = async ({ email, passphrase }) => {\n      setErr('')\n      setRequiresConfFor(null)\n      setInProgress(true)\n      try {\n        await attemptLogin({ email, passphrase })\n      } catch (e) {\n          setErr(`Unexpected error: ${e.message || e}`)\n      }\n      setInProgress(false)\n    }\n\n    // try logging in once after EMAIL_VERIFICATION_RECHECK\n    useEffect(() => {\n      if (requiresEmailConfFor) {\n        const timer = setTimeout(async () => {\n            setInProgress(true)\n            await attemptLogin(requiresEmailConfFor, true)\n            setInProgress(false)\n        }, EMAIL_VERIFICATION_RECHECK)\n        return () => clearTimeout(timer)\n      }\n    })\n\n    // @TODO import from JSON; maybe without a URL, as we'll just pop a file selector and then import the JSON\n    const importJSONHref = `/#/json-import`\n\n    if (!relayerURL) {\n        return (<section className={`${styles.loginSignupWrapper} ${styles.emailLoginSection}`}>\n            <div className={styles.logo}/>\n            <h3 className={styles.error}>Email login not supported without the relayer.</h3>\n            <a href={importJSONHref}><button>Import JSON</button></a>\n        </section>)\n    }\n\n    const inner = requiresEmailConfFor ?\n      (<div className={`${styles.emailConf}`}>\n        <Lottie className={styles.emailAnimation} animationData={AnimationData} background=\"transparent\" speed=\"1\" loop autoplay />\n        <h3>\n          Email confirmation required\n        </h3>\n        <p>\n          We sent an email to\n          {' '}\n          <span className={styles.email}>\n            {requiresEmailConfFor.email}\n          </span>\n          .\n          <br />\n          Please check your inbox and click\n          <br />\n          \"Authorize New Device\".\n        </p>\n        {err ? (<p className={styles.error}>{err}</p>) : (<></>)}\n      </div>)\n      : (<div className={styles.loginEmail}>\n        <LoginOrSignup onAccRequest={onLoginUserAction} inProgress={inProgress}></LoginOrSignup>\n        <div className={styles.magicLink}>A password will not be required, we will send a magic login link to your email.</div>\n        <a className={styles.backButton} href=\"#/add-account\">\n          <ChevronLeftIcon />\n          {' '}\n          Back to Register\n        </a>\n        {err ? (<p className={styles.error}>{err}</p>) : (<></>)}\n\n        {/*<a href={importJSONHref}>Import JSON</a>*/}\n      </div>)\n\n    return (\n      <section className={`${styles.loginSignupWrapper} ${styles.emailLoginSection}`}>\n      <div className={styles.logo} />\n      {inner}\n    </section>\n    )\n  }\n","import styles from './LoginOrSignupForm.module.scss'\nimport { useState, useRef } from 'react'\nimport accountPresets from 'ambire-common/src/constants/accountPresets'\nimport { Checkbox } from \"components/common\"\n\nexport default function LoginOrSignupForm({ action = 'LOGIN', onAccRequest, inProgress }) {\n    const passConfirmInput = useRef(null)\n    const [state, setState] = useState({\n      email: '', passphrase: '', passphraseConfirm: '', action\n    })\n    const onSubmit = e => {\n      e.preventDefault()\n      onAccRequest({\n        action: state.action,\n        accType: 'QUICK',\n        email: state.email,\n        passphrase: state.passphrase,\n        backupOptout: state.backupOptout,\n      })\n    }\n    const onUpdate = updates => {\n      const newState = { ...state, ...updates }\n      setState(newState)\n      const shouldValidate = newState.action === 'SIGNUP'\n      const invalid = shouldValidate && (\n        newState.passphrase !== newState.passphraseConfirm\n      )\n      // @TODO translation string\n      if (passConfirmInput.current) {\n          passConfirmInput.current.setCustomValidity(invalid ? 'Passwords must match' : '')\n      }\n    }\n    const minPwdLen = 8\n    const isSignup = state.action === 'SIGNUP'\n    const days = Math.ceil(accountPresets.quickAccTimelock / 86400)\n    const noBackupDisclaimer = `In case you forget your password or lose your backup, you will have to wait ${days} days and pay the recovery fee to restore access to your account.`\n    const additionalOnSignup = state.backupOptout ? (\n      <Checkbox label={noBackupDisclaimer} required={true}></Checkbox>\n    ) : (<></>)\n    const Link = ({ href, children }) => (<a href={href} target='_blank' rel='noreferrer' onClick={e => e.stopPropagation()}>{children}</a>)\n    const additionalInputs = isSignup ?\n      (<>\n        <input\n          type=\"password\"\n          required\n          minLength={minPwdLen}\n          placeholder=\"Password\"\n          value={state.passphrase}\n          onChange={e => onUpdate({ passphrase: e.target.value })}\n        ></input>\n        <input\n          ref={passConfirmInput}\n          required\n          minLength={minPwdLen}\n          type=\"password\"\n          placeholder=\"Confirm password\"\n          value={state.passphraseConfirm}\n          onChange={e => onUpdate({ passphraseConfirm: e.target.value })}></input>\n        <Checkbox\n          labelClassName={styles.checkboxLabel}\n          label={<>I agree to the <Link href='https://www.ambire.com/Ambire%20ToS%20and%20PP%20(26%20November%202021).pdf'>Terms of Service and Privacy policy</Link>.</>}\n          required={true}\n        ></Checkbox>\n        <Checkbox\n          labelClassName={styles.checkboxLabel}\n          label={<>Backup on <Link href='https://help.ambire.com/hc/en-us/articles/4410892186002-What-is-Ambire-Cloud-'>Ambire Cloud</Link>.</>}\n          checked={!state.backupOptout}\n          onChange={e => onUpdate({ backupOptout: !e.target.checked })}\n        ></Checkbox>\n        {additionalOnSignup}\n      </>) : (<></>)\n\n    return (\n      <form onSubmit={onSubmit}>\n        <input type=\"email\" required placeholder=\"Email\" value={state.email} onChange={e => onUpdate({ email: e.target.value })}></input>\n        {\n          // Trick the password manager into putting in the email\n          !isSignup ? (<input type=\"password\" style={{ display: \"none\" }}></input>): (<></>)\n        }\n        {additionalInputs}\n        <input type=\"submit\" disabled={inProgress} value={isSignup ?\n          (inProgress ? \"Signing up...\" : \"Sign Up\")\n          : (inProgress ? \"Logging in...\" : \"Log In\")}></input>\n      </form>\n    )\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkboxLabel\":\"LoginOrSignupForm_checkboxLabel__2zFZy\"};","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChevronLeft(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: 7.414,\n    height: 12.001,\n    viewBox: \"0 0 7.414 12.001\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"left-arrow_icon\",\n    \"data-name\": \"left-arrow icon\",\n    transform: \"translate(141.414 -227) rotate(90)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Path_7\",\n    \"data-name\": \"Path 7\",\n    d: \"M1983,10.413h0l-.707-.707-5-5a1,1,0,0,1,1.414-1.414L1980,4.586l3,3,1.262-1.262L1986,4.586l1.293-1.292a1,1,0,0,1,1.414,1.414L1987.414,6h0l-1.739,1.738-1.968,1.969-.022.022-.685.685Z\",\n    transform: \"translate(-1750 131)\",\n    fill: \"#ebecff\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChevronLeft);\nexport default __webpack_public_path__ + \"static/media/chevron-left.adab1904.svg\";\nexport { ForwardRef as ReactComponent };","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginSignupWrapper\":\"EmailLogin_loginSignupWrapper__1R3nC\",\"logo\":\"EmailLogin_logo__2AeQW\",\"pluginInfo\":\"EmailLogin_pluginInfo__3XYmw\",\"name\":\"EmailLogin_name__21rjI\",\"signersToChoose\":\"EmailLogin_signersToChoose__136ad\",\"loginEmail\":\"EmailLogin_loginEmail__1SeKL\",\"emailLoginSection\":\"EmailLogin_emailLoginSection__1RB2a\",\"backButton\":\"EmailLogin_backButton__173k4\",\"error\":\"EmailLogin_error__169Mf\",\"emailConf\":\"EmailLogin_emailConf__3XbDU\",\"email\":\"EmailLogin_email__3p432\",\"magicLink\":\"EmailLogin_magicLink__2A8Iv\",\"emailAnimation\":\"EmailLogin_emailAnimation__18j9w\"};"],"sourceRoot":""}