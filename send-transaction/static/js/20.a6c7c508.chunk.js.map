{"version":3,"sources":["../node_modules/ambire-common/src/constants/abis/AAVELendingPoolAbi.ts","../node_modules/ambire-common/src/constants/AAVELendingPoolProviders.ts","../node_modules/@yfi/sdk/dist/index.js","../../src/types/common.ts","../../src/types/custom/simulation.ts","../../src/types/custom/zapper.ts","../../src/context.ts","../../node_modules/regenerator-runtime/runtime.js","../../src/cache.ts","../../src/common.ts","../../src/services/subgraph/queries.ts","../../src/interfaces/earnings.ts","../../src/interfaces/fees.ts","../../src/interfaces/ironbank.ts","../../src/helpers.ts","../../src/services/partners/pickle.ts","../../src/simulationExecutor.ts","../../src/vault.ts","../../src/interfaces/simulation.ts","../../src/interfaces/strategy.ts","../../src/interfaces/token.ts","../../src/interfaces/vault.ts","../../src/abi.ts","../../src/struct.ts","../../src/services/adapters/ironbank.ts","../../src/services/adapters/registry.ts","../../src/services/assets.ts","../../src/services/lens.ts","../../src/services/oracle.ts","../../src/services/subgraph/index.ts","../../src/services/telegram.ts","../../src/services/vision.ts","../../src/chain.ts","../../src/services/zapper.ts","../../src/services/allowlist.ts","../../src/services/helper.ts","../../src/services/meta.ts","../../src/services/transaction.ts","../../src/yearn.ts","../node_modules/@yfi/sdk/node_modules/cross-fetch/dist/browser-polyfill.js","../node_modules/@yfi/sdk/node_modules/bignumber.js/bignumber.js","../node_modules/@yfi/sdk/node_modules/emittery/index.js","../node_modules/@yfi/sdk/node_modules/cross-fetch/dist/browser-ponyfill.js","../../src.ts/bignumber.ts","../../src.ts/_version.ts","../node_modules/ambire-common/src/services/approveToken/approveToken.ts","../node_modules/ambire-common/src/services/approveToken/index.ts","../../src.ts/index.ts","../node_modules/@babel/runtime/helpers/defineProperty.js","../node_modules/ambire-common/src/constants/abis/YearnTesseractVaultABI.ts"],"names":["AAVELendingPoolAbi","AAVELendingPoolProviders","ethereum","polygon","avalanche","module","exports","require","CustomError","message","error_type","Error","SdkError","error_code","SimulationError","ZapperError","EthersError","TenderlyError","ZapProtocol","PriceFetchingError","DefaultContext","zapper","simulation","dashboardUrl","cache","useCache","url","Context","ctx","Object","assign","events","EventEmitter","setMaxListeners","setProvider","provider","JsonRpcProvider","read","write","emit","PROVIDER","this","etherscan","adapters","addresses","runtime","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","generator","create","Generator","context","_invoke","state","method","arg","done","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","CachedFetcher","path","chainId","fetch","queryParameters","undefined","cached","currentValue","fetchWithTimeout","console","warn","status","statusText","json","maxAgeMatches","headers","get","match","maxAge","parseInt","now","Date","getTime","expiryDate","cachedValue","timeout","race","_","setTimeout","Service","Emittery","ServiceInterface","yearn","WrappedContract","address","abi","Contract","on","_this2","ContractService","contract","_this3","LAB_ADDRESSESS","ASSET_HISTORIC_EARNINGS","blocks","map","block","join","BigZero","BigNumber","EarningsInterface","_this","protocolEarnings","services","subgraph","fetchQuery","response","data","vaults","toFixed","vault","latestUpdate","returnsGenerated","tokensValueInUsdc","token","id","decimals","plus","assetEarnings","assetAddress","earningsUsdc","getAddress","amount","amountUsdc","tokenAddress","accountAssetsData","accountAddress","ignoredVaults","account","earnings","holdings","earningsAssetData","grossApy","estimatedYearlyYield","all","vaultPositions","assetPosition","balanceTokens","balanceShares","multipliedBy","pricePerShare","div","updates","reduce","current","withdrawals","tokensReceived","tokensSent","deposits","positiveTokens","negativeTokens","earningsTokens","minus","balanceUsdc","earned","assetAddresses","assetsData","assetData","vision","apy","apys","totalEarnings","datum","sum","isEqualTo","net_apy","times","max","toNumber","assetsHistoricEarnings","fromDaysAgo","assetHistoricEarningsCache","lens","v2","assetsStatic","asset","getBlockNumber","latestBlockNumber","allSettled","assetHistoricEarnings","resolvedPromise","blockNumber","blockOffset","Array","from","day","_this4","blocksPerDay","labels","oracle","getPriceUsdc","price","priceUsdc","earningsDayData","strategies","label","totalGain","strategy","latestReport","totalLoss","amountEarnt","dividedBy","pow","date","vaultDayData","timestamp","toJSON","dayData","accountHistoricEarnings","shareTokenAddress","toDaysAgo","shareToken","fromDate","getDate","toDate","_response$data$accoun","snapshotTimeline","flatMap","vaultPosition","sort","lhs","rhs","entries","vaultPositionUpdate","index","snapshot","startDate","endDate","previousSnapshot","lastSnapshot","distantFuture","setFullYear","usdcPrice","vaultDayDatum","find","positives","negatives","tokenAmount","daysAgo","setDate","FeesInterface","protocolFees","since","sinceDate","transfers","tokenAmountUsdc","IronBankInterface","overrides","cachedFetcherGet","filter","includes","market","ironBank","assetsDynamic","assets","dynamic","getStatic","getDynamic","cachedFetcherGetDynamic","positionsOf","summaryOf","generalPositionOf","metadataOf","assetsUserMetadata","balances","tokens","helper","tokenBalances","t","balance","cachedFetcherTokens","tokenAddresses","icons","icon","supported","ZeroAddress","EthAddress","WethAddress","handleHttpError","usdc","usd","Math","floor","Number","int","chunkArray","array","size","chunk","PickleJars","PickleService","Map","jar","oneHourAgo","lastFetchedDate","fetchPickleJarPrices","pickleJarUSDPrices","res","jarData","clear","relevantJars","jarAddress","usdPrice","jarDatum","liquidity_locked","set","baseUrl","SimulationExecutor","telegram","simulateRaw","to","input","options","makeSimulationRequest","simulateVaultInteraction","targetToken","getAddressFromTopic","topic","log","transaction","transaction_info","logs","raw","topics","NO_LOG","constructedPath","forkId","getPopulatedTransactionRequest","body","network_id","transactionRequest","block_number","simulation_type","root","gas","gasLimit","gas_price","gasPrice","save","nonce","JSON","stringify","SIMULATION_CALL","errorMessage","simulationResponse","error_message","sendErrorMessage","TENDERLY_RESPONSE_ERROR","allCalls","getAllSimulationCalls","call_trace","partialRevertError","PARTIAL_REVERT","executeSimulationWithReSimulationOnFailure","simulate","forkIdToDeleteOnSuccess","deleteFork","callTrace","concat","calls","signer","getSigner","maxFeePerGas","maxPriorityFeePerGas","populateTransaction","POPULATING_TRANSACTION","createFork","alias","description","CREATE_FORK","simulation_fork","simulationId","transactionUrl","item","sendMessage","VaultContract","encodeFunctionData","PickleJarContract","_VaultContract","pickleJarAbi","getRatio","YearnVaultContract","_VaultContract2","yearnVaultAbi","SimulationInterface","deposit","sellToken","toVault","zapProtocol","PICKLE","YEARN","vaultContract","FAIL_TOKEN_FETCH","underlyingToken","slippage","NO_SLIPPAGE","needsApproving","zapInApprovalState","isApproved","ZAP_IN_APPROVAL_STATE","simulationExecutor","zapInApprovalTransaction","ZAP_IN_APPROVAL","approvalTransaction","simulateZapApprovalTransaction","simulateDeposit","zapIn","depositNeedsApproving","approve","directDeposit","withdraw","fromVault","toToken","zapOutApprovalState","ZAP_OUT_APPROVAL_STATE","zapOutApprovalTransaction","ZAP_OUT_APPROVAL","simulateWithdrawal","zapOut","directWithdraw","TokenAbi","tokenContract","encodedInputData","allowance","lt","encodeDeposit","getNormalizedValueUsdc","FETCHING_PRICE_ORACLE","targetTokenAmountUsdc","NO_DECIMALS","NO_PRICE_PER_SHARE","targetUnderlyingTokensReceived","sourceTokenAddress","sourceTokenAmount","targetTokenAddress","targetTokenAmount","targetUnderlyingTokenAddress","targetUnderlyingTokenAmount","conversionRate","underlyingTokenAddress","skipGasEstimate","zapToken","ZAP_IN","zapInParams","amountReceivedUsdc","pickle","FETCHING_PRICE_PICKLE","oracleToken","zapInAmountUsdc","buyTokenAddress","encodeWithdraw","ZAP_OUT","zapOutParams","_asyncToGenerator","output","zapOutAmountUsdc","soldAssetAmountUsdc","zapApprovalTransaction","VaultAbi","StrategyInterface","vaultsStrategiesMetadata","vaultAddresses","cachedFetcher","fetchMetadataFromApi","vaultStrategiesMetadata","fetchMetadataFromChain","fetchVaultsData","vaultsData","meta","strategiesMetadata","vaultsStrategiesMetadataPromises","vaultAddress","vaultDatum","fetchVaultStrategiesMetadata","symbol","vaultsStrategyData","strategiesPromise","assetStrategiesAddresses","strat","underlyingTokenContract","underlyingTokenSymbol","debtRatio","lte","metadatum","metadata","protocols","replace","metadataAndDebtRatio","eq","ok","TokenInterface","getPriceFromRouter","isArray","fromEntries","vaultBalances","zapperBalances","vaultBalanceAddresses","Set","has","ironBankTokens","a","cachedFetcherSupported","supportedTokens","ready","sendTransaction","gasPriceFastGwei","fast","zapInApprovalParams","approveZapOut","zapOutApprovalParams","VaultInterface","vaultMetadataOverridesPromise","vaultMetadataOverrides","allAddresses","chunks","promises","flat","strategiesMetadataPromise","assetsHistoricEarningsPromise","assetsWithOrder","override","hideAlways","order","historicEarnings","adapter","arr","metadataOverrides","assetsApy","tokenId","displayIcon","defaultDisplayToken","fillMetadataOverrides","_this5","tokensPromise","tokensMetadataPromise","tokensMetadata","tokenMetadata","symbolOverride","fillTokenMetadataOverrides","executeVaultContractTransaction","_this6","vaultRef","_this7","signature","executeZapperTransaction","fallbackGasPrice","combinedParams","_context21","code","makeTransaction","originalGasPrice","_context22","tokenIconOverride","tokenSymbolOverride","tokenNameOverride","vaultSymbolOverride","vaultIconOverride","apyTypeOverride","makeEmptyApy","apyOverride","depositsDisabled","withdrawalsDisabled","allowZapIn","allowZapOut","migrationContract","migrationTargetVault","vaultNameOverride","vaultDetailPageAssets","hideIfNoDeposits","emergencyShutdown","retired","migrationAvailable","gross_apr","fees","performance","withdrawal","management","keep_crv","cvx_keep_crv","points","composite","AssetStaticAbi","AssetDynamicAbi","Metadata","PositionAbi","AdapterAbi","struct","tuple","properties","structArray","copy","property","isBigNumberish","tuples","IronBankAdapter","_ContractService","addressByChain","assetsPromise","blocksPerYear","lendApyBips","aprBipsToApyBips","lendAprBips","borrowApyBips","borrowAprBips","adapterPositionOf","assetsTokensAddresses","aprBips","period","bn","clone","POW_PRECISION","RegistryV2Adapter","registryV2","controller","totalAssets","totalSupply","YearnAsset","YearnAssetAlt","TrustAsset","AssetService","aliases","initialize","deserializeState","parse","makeSerializedState","supportedJson","aliasesJson","alts","LensService","getAdapters","getRegistries","getAssets","getPositions","getPositionsOf","getAssetsFromAdapter","OracleService","getCalculations","calculations","getPriceUsdcRecommended","getUsdcAddress","usdcAddress","isCurveLpToken","lpToken","getCurvePriceUsdc","getBasePrice","getVirtualPrice","getCurveRegistryAddress","isIronBankMarket","getIronBankMarketPriceUsdc","getIronBankMarkets","isLpToken","token0","token1","getPriceFromRouterUsdc","getLpTokenTotalLiquidityUsdc","getLpTokenPriceUsdc","SubgraphService","subgraphName","yearnSubgraphEndpoint","query","variables","variable","toLowerCase","errors","TelegramService","text","telegramChatId","telegramBotId","params","URLSearchParams","chat_id","disable_web_page_preview","VisionService","boost","currentBoost","pool_apy","poolApy","boosted_apr","boostedApy","base_apr","baseApy","Chains","ZapperService","api_key","network","String","hide","products","balanceRaw","balanceUSD","ownerAddress","sellTokenAddress","slippagePercentage","affiliateAddress","sellAmount","poolAddress","toTokenAddress","shouldSellEntireBalance","AllowListService","validateCalldata","targetAddress","callData","success","validateCalldataByOrigin","originName","HelperService","tokenPrices","tokensPrices","tokensBalances","tokenAllowances","spenders","allowances","MetaService","buildUrl","MetaURL","TransactionService","allowListService","validateTx","Yearn","assetServiceState","allowlistAddress","allowList","setChainId","support","Blob","e","viewClasses","isArrayBufferView","ArrayBuffer","isView","indexOf","normalizeName","test","normalizeValue","iteratorFor","items","shift","Headers","append","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","buf","view","Uint8Array","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","DataView","_bodyArrayBuffer","rejected","arrayBuffer","readAsText","readBlobAsText","chars","fromCharCode","readArrayBufferAsText","formData","decode","oldValue","callback","thisArg","methods","Request","credentials","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","redirectStatuses","redirect","RangeError","location","DOMException","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","globalObject","isNumeric","mathceil","ceil","mathfloor","bignumberError","tooManyDigits","BASE","LOG_BASE","MAX_SAFE_INTEGER","POWS_TEN","SQRT_BASE","MAX","bitFloor","n","coeffToString","s","z","j","r","charCodeAt","compare","x","y","b","xc","c","yc","k","l","intCheck","min","isOdd","toExponential","str","toFixedPoint","len","zs","configObject","convertBase","parseNumeric","P","valueOf","ONE","DECIMAL_PLACES","ROUNDING_MODE","TO_EXP_NEG","TO_EXP_POS","MIN_EXP","MAX_EXP","CRYPTO","MODULO_MODE","FORMAT","prefix","groupSize","secondaryGroupSize","groupSeparator","decimalSeparator","fractionGroupSize","fractionGroupSeparator","suffix","ALPHABET","v","alphabet","caseChanged","isNum","_isBigNumber","search","substring","round","DEBUG","format","rm","c0","ne","maxOrMin","args","m","normalise","sd","d","ni","rd","pows10","out","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","config","p","crypto","getRandomValues","randomBytes","EXPONENTIAL_AT","RANGE","isBigNumber","maximum","arguments","minimum","gt","random","pow2_53","random53bitInt","dp","rand","Uint32Array","splice","decimal","toBaseOut","baseIn","baseOut","arrL","sign","callerIsToString","multiply","base","temp","xlo","xhi","carry","klo","khi","aL","bL","cmp","subtract","more","prod","prodL","q","qc","rem","remL","rem0","xi","xL","yc0","yL","yz","NaN","basePrefix","dotAfter","dotBefore","isInfinityOrNaN","whitespaceOrPlus","p1","p2","absoluteValue","abs","comparedTo","decimalPlaces","dividedToIntegerBy","idiv","exponentiatedBy","half","isModExp","nIsBig","nIsNeg","nIsOdd","isInteger","mod","integerValue","isFinite","isGreaterThan","isGreaterThanOrEqualTo","gte","isLessThan","isLessThanOrEqualTo","isNegative","isPositive","isZero","xLTy","xe","ye","modulo","xcL","ycL","ylo","yhi","zc","sqrtBase","negated","precision","shiftedBy","squareRoot","sqrt","rep","toFormat","g1","g2","intPart","fractionPart","isNeg","intDigits","substr","RegExp","toFraction","md","d0","d1","d2","exp","n0","n1","toPrecision","anyMap","WeakMap","eventsMap","producersMap","anyProducer","listenerAdded","listenerRemoved","assertEventName","eventName","assertListener","listener","getListeners","instance","getEventProducers","producers","enqueueProducers","eventData","enqueue","eventNames","isFinished","flush","queue","producer","add","return","delete","defaultMethodNamesOrAssert","methodNames","allEmitteryMethods","methodName","isListenerSymbol","off","bind","listeners","anyListeners","staticListeners","staticAnyListeners","offAny","count","target","emitteryPropertyName","emitteryMethodCaller","global","__self__","F","ponyfill","default","throwFault","toBigNumber","toBN","ERC20Interface","Interface","ERC20ABI","approveToken","scope","networkId","accountId","addRequestTxn","addToast","bigNumberHexAmount","constants","MaxUint256","prefixId","getProvider","YearnVaultABI"],"mappings":"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","file":"static/js/20.a6c7c508.chunk.js","sourcesContent":["const AAVELendingPoolAbi: string[] = [\n  'function getLendingPool() view returns (address address)',\n  'function getReservesList() view returns (address[] memory)',\n  'function getReserveData(address asset) view returns (tuple(uint256 availableLiquidity, uint256 totalStableDebt, uint256 totalVariableDebt, uint256 liquidityRate, uint256 variableBorrowRate, uint256 stableBorrowRate, uint256 averageStableBorrowRate, uint256 liquidityIndex, uint256 variableBorrowIndex, uint40 lastUpdateTimestamp) memory)',\n  'function deposit(address asset, uint256 amount, address onBehalfOf, uint16 referralCode)',\n  'function withdraw(address asset, uint256 amount, address to)'\n]\n\nexport default AAVELendingPoolAbi\n","const AAVELendingPoolProviders = {\n  ethereum: '0xb53c1a33016b2dc2ff3653530bff1848a515c8c5',\n  polygon: '0xd05e3E715d945B59290df0ae8eF85c1BdB684744',\n  avalanche: '0xb6A86025F0FE1862B372cb0ca18CE3EDe02A318f'\n}\n\nexport default AAVELendingPoolProviders\n","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./sdk.cjs.production.min.js')\n} else {\n  module.exports = require('./sdk.cjs.development.js')\n}\n","export class CustomError extends Error {\n  error_type: string;\n\n  constructor(message: string, error_type: string) {\n    super(message);\n    this.error_type = error_type;\n  }\n}\n\n/**\n * Generic SDK error. Wrapped errors are:\n *\n * - ethers.js errors\n * - http request errors\n */\nexport class SdkError extends CustomError {\n  error_code?: string;\n  static NO_SLIPPAGE = \"no_slippage\";\n\n  constructor(message: string, error_code?: string) {\n    super(message, \"sdk\");\n    this.error_code = error_code;\n  }\n}\n\n/**\n * Type alias for an address type.\n */\nexport type Address = string;\n\n/**\n * Type alias for a stringified big number. SDK tries to be bignumber-lib\n * agnostic so integer values are returned as strings.\n */\nexport type Integer = string;\n\n/**\n * Utility type to help distinguish [[Integer]]s that represent a USDC (6 dec)\n * value.\n */\nexport type Usdc = string;\n\n/**\n * Utility type to describe a map of predefined keys with the same value.\n */\nexport type TypedMap<K extends string | number | symbol, V> = { [key in K]: V };\n","import { Address, CustomError, Integer, Usdc } from \"../common\";\n\nexport class SimulationError extends CustomError {\n  error_code: string;\n  static NO_LOG = \"no_log\";\n  static TENDERLY_RESPONSE_ERROR = \"tenderly_response_error\";\n  static PARTIAL_REVERT = \"partial_revert\";\n\n  constructor(message: string, error_code: string) {\n    super(message, \"simulation\");\n    this.error_code = error_code;\n  }\n}\n\nexport class ZapperError extends CustomError {\n  error_code: string;\n  static ZAP_IN_APPROVAL_STATE = \"zap_in_approval_state\";\n  static ZAP_IN_APPROVAL = \"zap_in_approval\";\n  static ZAP_OUT_APPROVAL_STATE = \"zap_out_approval_state\";\n  static ZAP_OUT_APPROVAL = \"zap_out_approval\";\n  static ZAP_IN = \"zap_in\";\n  static ZAP_OUT = \"zap_out\";\n\n  constructor(message: string, error_code: string) {\n    super(message, \"zapper\");\n    this.error_code = error_code;\n  }\n}\nexport class EthersError extends CustomError {\n  error_code: string;\n  static FAIL_TOKEN_FETCH = \"fail_token_fetch\";\n  static NO_DECIMALS = \"no_decimals\";\n  static NO_PRICE_PER_SHARE = \"no_price_per_share\";\n  static POPULATING_TRANSACTION = \"populating_transaction\";\n\n  constructor(message: string, error_code: string) {\n    super(message, \"ethers\");\n    this.error_code = error_code;\n  }\n}\nexport class TenderlyError extends CustomError {\n  error_code: string;\n  static SIMULATION_CALL = \"simulation_call\";\n  static CREATE_FORK = \"create_fork\";\n\n  constructor(message: string, error_code: string) {\n    super(message, \"tenderly\");\n    this.error_code = error_code;\n  }\n}\nexport class PriceFetchingError extends CustomError {\n  error_code: string;\n  static FETCHING_PRICE_ORACLE = \"fetching_price_oracle\";\n  static FETCHING_PRICE_PICKLE = \"fetching_price_pickle\";\n\n  constructor(message: string, error_code: string) {\n    super(message, \"price_fetching\");\n    this.error_code = error_code;\n  }\n}\n\nexport interface TransactionOutcome {\n  sourceTokenAddress: Address;\n  sourceTokenAmount: Integer;\n  targetTokenAddress: Address;\n  targetTokenAmount: Integer;\n  targetTokenAmountUsdc: Usdc;\n  targetUnderlyingTokenAddress: Address;\n  targetUnderlyingTokenAmount: Integer;\n  conversionRate: number;\n  slippage: number;\n}\n\nexport interface SimulationOptions {\n  slippage?: number;\n  root?: string;\n  forkId?: string;\n  gasPrice?: Integer;\n  maxFeePerGas?: Integer;\n  maxPriorityFeePerGas?: Integer;\n  gasLimit?: Integer;\n  save?: boolean;\n}\n","import { Address, Integer } from \"../common\";\n\n/**\n * Simple gas prices in gwei\n */\nexport interface GasPrice {\n  standard: number;\n  instant: number;\n  fast: number;\n}\n\nexport interface ZapOptions {\n  slippage?: number;\n  gas?: keyof GasPrice;\n}\n\nexport interface ZapApprovalStateOutput {\n  spenderAddress: Address;\n  tokenAddress: Address;\n  ownerAddress: Address;\n  allowance: Integer;\n  amount: Integer;\n  isApproved: Boolean;\n}\n\nexport interface ZapApprovalTransactionOutput {\n  data: string;\n  to: Address;\n  from: Address;\n  gasPrice: Integer;\n}\n\nexport interface ZapOutput {\n  to: Address;\n  from: Address;\n  data: string;\n  value: string;\n  sellTokenAddress: Address;\n  sellTokenAmount: Integer;\n  buyTokenAddress: Address;\n  minTokens: Integer;\n  gasPrice: Integer;\n  gas: Integer;\n}\n\nexport enum ZapProtocol {\n  PICKLE = \"pickle\",\n  YEARN = \"yearn\"\n}\n","import { JsonRpcProvider } from \"@ethersproject/providers\";\nimport EventEmitter from \"events\";\nimport { PartialDeep } from \"type-fest\";\n\nimport { Address, SdkError } from \"./types\";\n\nexport interface AddressesOverride {\n  lens?: Address;\n  oracle?: Address;\n  adapters: {\n    registryV2?: Address;\n    ironBank?: Address;\n  };\n  helper?: Address;\n  allowList?: Address;\n}\n\n/**\n * For particular situations it's helpful to have two separate providers, one\n * for reading data and one for writing data.\n */\nexport interface ReadWriteProvider {\n  read: JsonRpcProvider;\n  write: JsonRpcProvider;\n}\n\n/**\n * To provide configuration for simulation error reporting\n */\nexport interface SimulationConfiguration extends TelegramConfiguration {\n  dashboardUrl?: string;\n}\n\n/**\n * Provides details about sending a message from a telegram bot to a\n * specific chat\n */\nexport interface TelegramConfiguration {\n  telegramChatId?: string;\n  telegramBotId?: string;\n}\n\nexport interface CacheConfiguration {\n  useCache: boolean;\n  url?: string;\n}\n\n/**\n * Context options that are used to access all the data sources queried by the\n * SDK.\n */\nexport interface ContextValue {\n  provider?: JsonRpcProvider | ReadWriteProvider;\n  zapper?: string;\n  etherscan?: string;\n  addresses?: PartialDeep<AddressesOverride>;\n  simulation?: SimulationConfiguration;\n  cache?: CacheConfiguration;\n}\n\nconst DefaultContext: ContextValue = {\n  // Public API key provided by zapper.\n  // see https://docs.zapper.fi/zapper-api/endpoints\n  zapper: \"96e0cc51-a62e-42ca-acee-910ea7d2a241\",\n  // The default tenderly dashboard for Yearn\n  simulation: { dashboardUrl: \"https://dashboard.tenderly.co/yearn/yearn-web\" },\n  cache: { useCache: true, url: \"https://cache.yearn.finance\" }\n};\n\n/**\n * [[Context]] is the configuration object passed around every function in\n * the SDK. It contains basic information on how to access the various services\n * that the SDK aggregates.\n *\n * [[Context]] **should not** be instantiated by users, as it's managed by\n * {@link Yearn.context}.\n */\nexport class Context implements Required<ContextValue> {\n  static PROVIDER = \"refresh:provider\";\n\n  private ctx: ContextValue;\n\n  /**\n   * For internal events only.\n   */\n  events: EventEmitter;\n\n  constructor(ctx: ContextValue) {\n    this.ctx = Object.assign({}, DefaultContext, ctx);\n    this.events = new EventEmitter().setMaxListeners(100);\n    this.setProvider(ctx.provider);\n  }\n\n  /**\n   * Change providers during executions for all services that require on-chain\n   * interaction.\n   * @param provider new provider(s)\n   */\n  setProvider(provider?: JsonRpcProvider | ReadWriteProvider) {\n    if (provider instanceof JsonRpcProvider) {\n      this.ctx.provider = { read: provider, write: provider };\n    } else if (provider) {\n      this.ctx.provider = provider;\n    }\n    this.events.emit(Context.PROVIDER, this.ctx.provider);\n  }\n\n  get provider(): ReadWriteProvider {\n    if (this.ctx.provider) return this.ctx.provider as ReadWriteProvider;\n    throw new SdkError(\"provider must be undefined in Context for this feature to work.\");\n  }\n\n  get zapper(): string {\n    if (this.ctx.zapper) return this.ctx.zapper;\n    throw new SdkError(\"zapper must be undefined in Context for this feature to work.\");\n  }\n\n  get etherscan(): string {\n    if (this.ctx.etherscan) return this.ctx.etherscan;\n    throw new SdkError(\"etherscan must be undefined in Context for this feature to work.\");\n  }\n\n  get addresses(): AddressesOverride {\n    return Object.assign({ adapters: {} }, this.ctx.addresses);\n  }\n\n  get simulation(): SimulationConfiguration {\n    if (this.ctx.simulation) return this.ctx.simulation;\n    throw new SdkError(\"simulation configuration must be defined in Context for this feature to work.\");\n  }\n\n  get cache(): CacheConfiguration {\n    if (this.ctx.cache) return this.ctx.cache;\n    throw new SdkError(\"cache must be defined in Context for this feature to work.\");\n  }\n}\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import { ChainId } from \"./chain\";\nimport { Context } from \"./context\";\n\nexport class CachedFetcher<T> {\n  expiryDate?: Date;\n  cachedValue?: T;\n  path: string;\n  ctx: Context;\n  chainId: ChainId;\n\n  constructor(path: string, ctx: Context, chainId: ChainId) {\n    this.path = path;\n    this.ctx = ctx;\n    this.chainId = chainId;\n  }\n\n  async fetch(queryParameters?: string): Promise<T | undefined> {\n    if (!this.ctx.cache.useCache || !this.ctx.cache.url) {\n      return undefined;\n    }\n\n    const cached = this.currentValue;\n    if (cached) {\n      return cached;\n    }\n\n    let path = `${this.ctx.cache.url}/v1/chains/${this.chainId}/${this.path}`;\n    if (queryParameters) {\n      path += `?${queryParameters}`;\n    }\n\n    let call: Response;\n    try {\n      const timeout = 5000;\n      call = await this.fetchWithTimeout(path, timeout);\n    } catch {\n      console.warn(`Call to cache at ${path} timed out`);\n      return undefined;\n    }\n    if (call.status !== 200) {\n      const { url, status, statusText } = call;\n      console.warn(`Call to cache failed at ${url} (status ${status} ${statusText})`);\n      return undefined;\n    }\n\n    const json = await call.json();\n    if (!json) {\n      return undefined;\n    }\n\n    const maxAgeMatches = call.headers.get(\"cache-control\")?.match(/max-age=(\\d+)/);\n    const maxAge = maxAgeMatches ? parseInt(maxAgeMatches[1], 10) : 30;\n    const now = new Date().getTime();\n    this.expiryDate = new Date(now + maxAge * 1000);\n    this.cachedValue = json;\n\n    return json as T;\n  }\n\n  private async fetchWithTimeout(url: string, timeout: number): Promise<Response> {\n    return Promise.race([\n      fetch(url),\n      new Promise<Response>((_, reject) => setTimeout(() => reject(\"timeout\"), timeout))\n    ]);\n  }\n\n  private get currentValue(): T | undefined {\n    if (!this.expiryDate) {\n      return undefined;\n    }\n\n    const now = new Date();\n    if (now < this.expiryDate && this.cachedValue) {\n      return this.cachedValue;\n    }\n\n    return undefined;\n  }\n}\n","import { Contract, ContractInterface } from \"@ethersproject/contracts\";\nimport Emittery from \"emittery\";\n\nimport { ChainId } from \"./chain\";\nimport { Context, ReadWriteProvider } from \"./context\";\nimport { Address } from \"./types\";\nimport { Yearn } from \"./yearn\";\n\nexport class Service<E = {}> {\n  ctx: Context;\n  chainId: ChainId;\n\n  events: Emittery<E>;\n\n  constructor(chainId: ChainId, ctx: Context) {\n    this.chainId = chainId;\n    this.ctx = ctx;\n\n    this.events = new Emittery();\n  }\n}\n\nexport class ServiceInterface<T extends ChainId, E = {}> extends Service<E> {\n  protected yearn: Yearn<T>;\n\n  constructor(yearn: Yearn<T>, chainId: T, ctx: Context) {\n    super(chainId, ctx);\n    this.yearn = yearn;\n  }\n}\n\n/**\n * Contract that supports two different providers to differentiate read and\n * write operations.\n */\nexport class WrappedContract {\n  address: Address;\n  abi: ContractInterface;\n\n  read: Contract;\n  write: Contract;\n\n  constructor(address: Address, abi: ContractInterface, ctx: Context) {\n    this.address = address;\n    this.abi = abi;\n\n    this.read = new Contract(address, abi, ctx.provider.read);\n    this.write = new Contract(address, abi, ctx.provider.write);\n    ctx.events.on(Context.PROVIDER, (provider: ReadWriteProvider) => {\n      this.read = new Contract(this.address, this.abi, provider.read);\n      this.write = new Contract(this.address, this.abi, provider.write);\n    });\n  }\n}\n\n/**\n * A service that has a contract representation on chain.\n */\nexport class ContractService<T extends ChainId, E = {}> extends Service<E> {\n  static abi: string[] = [];\n\n  address: string;\n\n  contract: WrappedContract;\n\n  constructor(address: Address, chainId: T, ctx: Context) {\n    super(chainId, ctx);\n    this.address = address;\n\n    this.contract = new WrappedContract(\n      this.address,\n      // @ts-ignore\n      this.constructor.abi,\n      ctx\n    );\n  }\n}\n","const YVBOOST = \"0x9d409a0a012cfba9b15f6d4b36ac57a46966ab9a\";\nconst YVECRV = \"0xc5bddf9843308380375a611c18b50fb9341f502a\";\nconst PSLPYVBOOSTETH = \"0xced67a187b923f0e5ebcc77c7f2f7da20099e378\";\n\nconst LAB_ADDRESSESS = [YVBOOST, YVECRV, PSLPYVBOOSTETH];\n\nexport const VAULT_EARNINGS = `query VaultEarnings($vault: ID!) {\n    vault(id: $vault) {\n      token {\n        id\n        decimals\n      }\n      latestUpdate {\n        returnsGenerated\n      }\n    }\n  }\n`;\n\nexport const PROTOCOL_EARNINGS = `query ProtocolEarnings {\n    vaults {\n      token {\n        id\n        decimals\n      }\n      latestUpdate {\n        returnsGenerated\n      }\n    }\n  }\n`;\n\nexport const buildAccountEarningsVariables = (id: string) => ({\n  id,\n  ignoredVaults: LAB_ADDRESSESS\n});\n\nexport const ACCOUNT_EARNINGS = `\n  query AccountEarnings($id: ID!, $ignoredVaults: [String!]) {\n    account(id: $id) {\n      vaultPositions(where: { vault_not_in: $ignoredVaults } ) {\n        balanceShares\n        token {\n          id\n          decimals\n        }\n        shareToken {\n          symbol\n        }\n        updates {\n          deposits\n          withdrawals\n          tokensReceived\n          tokensSent\n        }\n        vault {\n          id\n          latestUpdate {\n            pricePerShare\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const ASSET_HISTORIC_EARNINGS = (blocks: number[]) => {\n  const makeBlockQuery = (block: number) => {\n    return `\n    block_${block}: vault(id: $id, block: { number: ${block} } ) {\n      vaultDayData(orderBy: timestamp, orderDirection: desc, first: 1) {\n        timestamp\n      }\n      strategies {\n        latestReport {\n          totalGain\n          totalLoss\n        }\n      }\n    }\n    `;\n  };\n\n  const historicQueries = blocks.map(block => makeBlockQuery(block));\n\n  const result = `query AssetHistoricEarnings($id: ID!) {\n    vault(id: $id) {\n      token {\n        id\n        decimals\n      }\n    }\n    ${historicQueries.join(\"\")}\n  }\n  `;\n\n  return result;\n};\n\nexport const ACCOUNT_HISTORIC_EARNINGS = `query AccountHistoricEarnings($id: ID!, $shareToken: String!, $fromDate: String!, $toDate: BigInt!) {\n  account(id: $id) {\n      vaultPositions(where: { shareToken: $shareToken }) {\n        balanceShares\n        token {\n          id\n          decimals\n        }\n        vault {\n          vaultDayData(where: { timestamp_gte: $fromDate, timestamp_lte: $toDate }, orderBy: timestamp, orderDirection: asc, first: 1000) {\n            pricePerShare\n            timestamp\n          }\n        }\n        updates(orderBy: timestamp, orderDirection: asc, first: 1000) {\n          balanceShares\n          timestamp\n          deposits\n          withdrawals\n          tokensReceived\n          tokensSent\n        }\n      }\n    }\n  }\n`;\n\nexport const PROTOCOL_FEES = `query ProtocolFees($sinceDate: BigInt!) {\n    transfers(where: { timestamp_gt: $sinceDate }, first: 1000) {\n      tokenAmountUsdc\n    }\n  }\n`;\n","import { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"bignumber.js\";\n\nimport { CachedFetcher } from \"../cache\";\nimport { ChainId } from \"../chain\";\nimport { ServiceInterface } from \"../common\";\nimport {\n  ACCOUNT_EARNINGS,\n  ACCOUNT_HISTORIC_EARNINGS,\n  ASSET_HISTORIC_EARNINGS,\n  buildAccountEarningsVariables,\n  PROTOCOL_EARNINGS,\n  VAULT_EARNINGS\n} from \"../services/subgraph/queries\";\nimport {\n  AccountEarningsResponse,\n  AccountHistoricEarningsResponse,\n  ProtocolEarningsResponse,\n  VaultEarningsResponse\n} from \"../services/subgraph/responses\";\nimport { Address, SdkError } from \"../types\";\nimport {\n  AccountHistoricEarnings,\n  AssetEarnings,\n  AssetHistoricEarnings,\n  EarningsDayData,\n  EarningsUserData\n} from \"../types/custom/earnings\";\n\nconst BigZero = new BigNumber(0);\n\nexport class EarningsInterface<C extends ChainId> extends ServiceInterface<C> {\n  async protocolEarnings(): Promise<String> {\n    const response = await this.yearn.services.subgraph.fetchQuery<ProtocolEarningsResponse>(PROTOCOL_EARNINGS);\n\n    let result = BigZero;\n\n    if (!response?.data || !response.data?.vaults) {\n      return result.toFixed(0);\n    }\n\n    for (const vault of response.data.vaults) {\n      if (!vault.latestUpdate) {\n        continue;\n      }\n      const returnsGenerated = new BigNumber(vault.latestUpdate.returnsGenerated);\n      const earningsUsdc = await this.tokensValueInUsdc(returnsGenerated, vault.token.id, vault.token.decimals);\n      result = result.plus(earningsUsdc);\n    }\n\n    return result.toFixed(0);\n  }\n\n  async assetEarnings(assetAddress: Address): Promise<AssetEarnings> {\n    const response = await this.yearn.services.subgraph.fetchQuery<VaultEarningsResponse>(VAULT_EARNINGS, {\n      vault: assetAddress\n    });\n\n    if (!response?.data || !response.data?.vault) {\n      throw new SdkError(`No asset with address ${assetAddress}`);\n    }\n\n    const { vault } = response.data;\n\n    const returnsGenerated = new BigNumber(vault.latestUpdate?.returnsGenerated || 0);\n    const earningsUsdc = await this.tokensValueInUsdc(returnsGenerated, vault.token.id, vault.token.decimals);\n    return {\n      assetAddress: getAddress(assetAddress), // addresses from subgraph are not checksummed\n      amount: returnsGenerated.toFixed(0),\n      amountUsdc: earningsUsdc.toFixed(0),\n      tokenAddress: getAddress(vault.token.id)\n    };\n  }\n\n  async accountAssetsData(accountAddress: Address): Promise<EarningsUserData> {\n    const response = await this.yearn.services.subgraph.fetchQuery<AccountEarningsResponse>(\n      ACCOUNT_EARNINGS,\n      buildAccountEarningsVariables(accountAddress)\n    );\n\n    const account = response?.data?.account;\n\n    if (!account) {\n      return { earnings: \"0\", holdings: \"0\", earningsAssetData: [], grossApy: 0, estimatedYearlyYield: \"0\" };\n    }\n\n    const assetsData = await Promise.all(\n      account.vaultPositions.map(async assetPosition => {\n        const balanceTokens = new BigNumber(assetPosition.balanceShares)\n          .multipliedBy(new BigNumber(assetPosition.vault.latestUpdate?.pricePerShare || 0))\n          .div(10 ** assetPosition.token.decimals);\n\n        const { deposits, withdrawals, tokensReceived, tokensSent } = assetPosition.updates.reduce(\n          ({ deposits, withdrawals, tokensReceived, tokensSent }, current) => ({\n            deposits: deposits.plus(new BigNumber(current.deposits)),\n            withdrawals: withdrawals.plus(new BigNumber(current.withdrawals)),\n            tokensReceived: tokensReceived.plus(new BigNumber(current.tokensReceived)),\n            tokensSent: tokensSent.plus(new BigNumber(current.tokensSent))\n          }),\n          {\n            deposits: BigZero,\n            withdrawals: BigZero,\n            tokensReceived: BigZero,\n            tokensSent: BigZero\n          }\n        );\n\n        const positiveTokens = balanceTokens.plus(withdrawals).plus(tokensSent);\n        const negativeTokens = deposits.plus(tokensReceived);\n        const earningsTokens = positiveTokens.minus(negativeTokens);\n\n        const earningsUsdc = await this.tokensValueInUsdc(\n          earningsTokens,\n          assetPosition.token.id,\n          assetPosition.token.decimals\n        );\n\n        const balanceUsdc = await this.tokensValueInUsdc(\n          balanceTokens,\n          assetPosition.token.id,\n          assetPosition.token.decimals\n        );\n\n        return {\n          assetAddress: getAddress(assetPosition.vault.id),\n          balanceUsdc,\n          earned: earningsUsdc.toFixed(0)\n        };\n      })\n    );\n\n    const assetAddresses = assetsData.map(assetData => assetData.assetAddress);\n    const apys = await this.yearn.services.vision.apy(assetAddresses);\n\n    const totalEarnings = assetsData.map(datum => new BigNumber(datum.earned)).reduce((sum, value) => sum.plus(value));\n    const holdings = assetsData.map(datum => new BigNumber(datum.balanceUsdc)).reduce((sum, value) => sum.plus(value));\n\n    const grossApy = holdings.isEqualTo(BigZero)\n      ? BigZero\n      : assetsData\n          .map(datum => {\n            const apy = apys[datum.assetAddress]?.net_apy || 0;\n            return new BigNumber(apy).times(datum.balanceUsdc).div(holdings);\n          })\n          .reduce((sum, value) => sum.plus(value));\n\n    const estimatedYearlyYield = grossApy.multipliedBy(holdings);\n\n    const earningsAssetData = assetsData.map(datum => {\n      return {\n        assetAddress: datum.assetAddress,\n        earned: datum.earned\n      };\n    });\n\n    return {\n      earnings: BigNumber.max(totalEarnings, 0).toFixed(0),\n      holdings: BigNumber.max(holdings, 0).toFixed(0),\n      grossApy: grossApy.toNumber(),\n      estimatedYearlyYield: BigNumber.max(estimatedYearlyYield, 0).toFixed(0),\n      earningsAssetData: earningsAssetData\n    };\n  }\n\n  private assetHistoricEarningsCache = new CachedFetcher<AssetHistoricEarnings[]>(\n    \"vaults/earnings/get\",\n    this.ctx,\n    this.chainId\n  );\n\n  async assetsHistoricEarnings(fromDaysAgo: number = 30): Promise<AssetHistoricEarnings[]> {\n    if (fromDaysAgo === 30) {\n      const cached = await this.assetHistoricEarningsCache.fetch();\n      if (cached) {\n        return cached;\n      }\n    }\n\n    const assetsStatic = await this.yearn.services.lens.adapters.vaults.v2.assetsStatic();\n    const assetAddresses = assetsStatic.map(asset => asset.address);\n\n    const latestBlockNumber = await this.ctx.provider.read.getBlockNumber();\n\n    const resolvedPromises = await Promise.allSettled(\n      assetAddresses.map(async address => this.assetHistoricEarnings(address, fromDaysAgo, latestBlockNumber))\n    );\n\n    let result = [];\n\n    for (const resolvedPromise of resolvedPromises) {\n      if (resolvedPromise.status === \"fulfilled\") {\n        result.push(resolvedPromise.value);\n      }\n    }\n\n    return result;\n  }\n\n  async assetHistoricEarnings(\n    vault: Address,\n    fromDaysAgo: number,\n    latestBlockNumber?: number\n  ): Promise<AssetHistoricEarnings> {\n    interface StrategiesResponse {\n      latestReport?: {\n        totalGain: string;\n        totalLoss: string;\n      };\n    }\n\n    let blockNumber: number;\n    if (latestBlockNumber) {\n      blockNumber = latestBlockNumber;\n    } else {\n      blockNumber = await this.ctx.provider.read.getBlockNumber();\n    }\n\n    blockNumber -= this.blockOffset(); // subgraph might be slightly behind latest block\n\n    const blocks = Array.from(Array(fromDaysAgo).keys())\n      .reverse()\n      .map(day => blockNumber - day * this.blocksPerDay());\n\n    const response = await this.yearn.services.subgraph.fetchQuery<any>(ASSET_HISTORIC_EARNINGS(blocks), {\n      id: vault\n    });\n\n    const data = response.data;\n\n    const labels = blocks.map(block => `block_${block}`);\n\n    const token = data.vault.token.id as string;\n    const priceUsdc = await this.yearn.services.oracle.getPriceUsdc(token).then(price => new BigNumber(price));\n\n    const earningsDayData = labels.map(label => {\n      const strategies: StrategiesResponse[] = data[label].strategies;\n      const totalGain = strategies\n        .map(strategy => (strategy.latestReport ? new BigNumber(strategy.latestReport.totalGain) : new BigNumber(0)))\n        .reduce((sum, value) => sum.plus(value));\n\n      const totalLoss = strategies\n        .map(strategy => (strategy.latestReport ? new BigNumber(strategy.latestReport.totalLoss) : new BigNumber(0)))\n        .reduce((sum, value) => sum.plus(value));\n\n      const amountEarnt = totalGain.minus(totalLoss);\n\n      const amountUsdc = priceUsdc\n        .multipliedBy(amountEarnt)\n        .dividedBy(new BigNumber(10).pow(new BigNumber(data.vault.token.decimals)));\n\n      const dayData: EarningsDayData = {\n        earnings: {\n          amountUsdc: amountUsdc.toFixed(0),\n          amount: amountEarnt.toFixed(0)\n        },\n        date: new Date(+data[label].vaultDayData[0].timestamp).toJSON()\n      };\n\n      return dayData;\n    });\n\n    const result: AssetHistoricEarnings = {\n      assetAddress: vault,\n      dayData: earningsDayData,\n      decimals: data.vault.token.decimals\n    };\n\n    return result;\n  }\n\n  async accountHistoricEarnings(\n    accountAddress: Address,\n    shareTokenAddress: Address,\n    fromDaysAgo: number,\n    toDaysAgo?: number\n  ): Promise<AccountHistoricEarnings> {\n    if (toDaysAgo && toDaysAgo > fromDaysAgo) {\n      throw new SdkError(\"fromDaysAgo must be greater than toDaysAgo\");\n    }\n\n    const response = await this.yearn.services.subgraph.fetchQuery<AccountHistoricEarningsResponse>(\n      ACCOUNT_HISTORIC_EARNINGS,\n      {\n        id: accountAddress,\n        shareToken: shareTokenAddress,\n        fromDate: this.getDate(fromDaysAgo)\n          .getTime()\n          .toString(),\n        toDate: this.getDate(toDaysAgo || 0)\n          .getTime()\n          .toString()\n      }\n    );\n\n    const vaultPositions = response.data.account?.vaultPositions;\n\n    if (!vaultPositions) {\n      throw new SdkError(`No account with address ${accountAddress}`);\n    }\n\n    interface AccountSnapshot {\n      startDate: Date;\n      endDate: Date;\n      deposits: BigNumber;\n      withdrawals: BigNumber;\n      tokensReceived: BigNumber;\n      tokensSent: BigNumber;\n      balanceShares: BigNumber;\n    }\n\n    let snapshotTimeline: AccountSnapshot[] = [];\n\n    const updates = vaultPositions\n      .flatMap(vaultPosition => vaultPosition.updates)\n      .sort((lhs, rhs) => {\n        return +lhs.timestamp - +rhs.timestamp;\n      });\n\n    for (const [index, vaultPositionUpdate] of updates.entries()) {\n      if (index === 0) {\n        const snapshot: AccountSnapshot = {\n          startDate: new Date(0),\n          endDate: new Date(+vaultPositionUpdate.timestamp),\n          deposits: new BigNumber(vaultPositionUpdate.deposits),\n          withdrawals: new BigNumber(vaultPositionUpdate.withdrawals),\n          tokensReceived: new BigNumber(vaultPositionUpdate.tokensReceived),\n          tokensSent: new BigNumber(vaultPositionUpdate.tokensSent),\n          balanceShares: new BigNumber(vaultPositionUpdate.balanceShares)\n        };\n        snapshotTimeline.push(snapshot);\n      } else {\n        const previousSnapshot = snapshotTimeline[index - 1];\n        const snapshot: AccountSnapshot = {\n          startDate: previousSnapshot.endDate,\n          endDate: new Date(+vaultPositionUpdate.timestamp),\n          deposits: previousSnapshot.deposits.plus(new BigNumber(vaultPositionUpdate.deposits)),\n          withdrawals: previousSnapshot.withdrawals.plus(new BigNumber(vaultPositionUpdate.withdrawals)),\n          tokensReceived: previousSnapshot.tokensReceived.plus(new BigNumber(vaultPositionUpdate.tokensReceived)),\n          tokensSent: previousSnapshot.tokensSent.plus(new BigNumber(vaultPositionUpdate.tokensSent)),\n          balanceShares: previousSnapshot.balanceShares.plus(new BigNumber(vaultPositionUpdate.balanceShares))\n        };\n        snapshotTimeline.push(snapshot);\n      }\n    }\n\n    if (snapshotTimeline.length > 0) {\n      const lastSnapshot = snapshotTimeline[snapshotTimeline.length - 1];\n      const distantFuture = new Date().setFullYear(3000);\n      const snapshot: AccountSnapshot = {\n        startDate: lastSnapshot.endDate,\n        endDate: new Date(distantFuture),\n        deposits: lastSnapshot.deposits,\n        withdrawals: lastSnapshot.withdrawals,\n        tokensReceived: lastSnapshot.tokensReceived,\n        tokensSent: lastSnapshot.tokensSent,\n        balanceShares: lastSnapshot.balanceShares\n      };\n      snapshotTimeline.push(snapshot);\n    }\n\n    const vaultDayData = vaultPositions[0].vault.vaultDayData;\n    const token = vaultPositions[0].token;\n    const usdcPrice = await this.yearn.services.oracle.getPriceUsdc(token.id).then(id => new BigNumber(id));\n\n    const earningsDayData = await Promise.all(\n      vaultDayData.map(async vaultDayDatum => {\n        const date = new Date(+vaultDayDatum.timestamp);\n        const snapshot = snapshotTimeline.find(snapshot => date >= snapshot.startDate && date < snapshot.endDate);\n        if (snapshot) {\n          const balanceTokens = snapshot.balanceShares\n            .multipliedBy(new BigNumber(vaultDayDatum.pricePerShare))\n            .dividedBy(new BigNumber(10 ** token.decimals));\n          let positives = balanceTokens.plus(snapshot.withdrawals).plus(snapshot.tokensSent);\n          let negatives = snapshot.deposits.plus(snapshot.tokensReceived);\n          let earnings = positives.minus(negatives);\n\n          const amountUsdc = usdcPrice.multipliedBy(earnings).dividedBy(new BigNumber(10).pow(token.decimals));\n\n          return {\n            earnings: {\n              amount: earnings.toFixed(0),\n              amountUsdc: amountUsdc.toFixed(0)\n            },\n            date: date.toJSON()\n          };\n        } else {\n          return {\n            earnings: {\n              amount: \"0\",\n              amountUsdc: \"0\"\n            },\n            date: date.toJSON()\n          };\n        }\n      })\n    );\n\n    return {\n      accountAddress: accountAddress,\n      shareTokenAddress: shareTokenAddress,\n      decimals: token.decimals,\n      dayData: earningsDayData\n    };\n  }\n\n  private async tokensValueInUsdc(tokenAmount: BigNumber, tokenAddress: Address, decimals: number): Promise<BigNumber> {\n    const tokenUsdcPrice = await this.yearn.services.oracle.getPriceUsdc(tokenAddress);\n    return new BigNumber(tokenUsdcPrice).multipliedBy(tokenAmount).div(10 ** decimals);\n  }\n\n  private getDate(daysAgo: number) {\n    let date = new Date();\n    date.setDate(date.getDate() - daysAgo);\n    return date;\n  }\n\n  private blocksPerDay(): number {\n    switch (this.chainId) {\n      case 1:\n      case 1337:\n      case 42161:\n        return 5760;\n      case 250:\n        return 86400;\n    }\n  }\n\n  private blockOffset(): number {\n    switch (this.chainId) {\n      case 1:\n      case 1337:\n      case 42161:\n        return 100;\n      case 250:\n        return 1000;\n    }\n  }\n}\n","import BigNumber from \"bignumber.js\";\n\nimport { ChainId } from \"../chain\";\nimport { ServiceInterface } from \"../common\";\nimport { PROTOCOL_FEES } from \"../services/subgraph/queries\";\nimport { FeesResponse } from \"../services/subgraph/responses\";\nimport { Usdc } from \"../types\";\n\nexport class FeesInterface<C extends ChainId> extends ServiceInterface<C> {\n  async protocolFees(since: Date): Promise<Usdc> {\n    const response = await this.yearn.services.subgraph.fetchQuery<FeesResponse>(PROTOCOL_FEES, {\n      sinceDate: since.getTime().toString()\n    });\n\n    const transfers = response.data.transfers;\n\n    return transfers\n      .reduce((prev, current) => {\n        return prev.plus(new BigNumber(current.tokenAmountUsdc || 0));\n      }, new BigNumber(0))\n      .toFixed(0);\n  }\n}\n","import { CallOverrides } from \"@ethersproject/contracts\";\n\nimport { CachedFetcher } from \"../cache\";\nimport { ChainId } from \"../chain\";\nimport { ServiceInterface } from \"../common\";\nimport {\n  Address,\n  Balance,\n  CyTokenUserMetadata,\n  IronBankMarket,\n  IronBankMarketDynamic,\n  IronBankMarketStatic,\n  IronBankUserSummary,\n  Position,\n  SdkError,\n  Token\n} from \"../types\";\n\nexport class IronBankInterface<T extends ChainId> extends ServiceInterface<T> {\n  private cachedFetcherGet = new CachedFetcher<IronBankMarket[]>(\"ironbank/get\", this.ctx, this.chainId);\n  private cachedFetcherGetDynamic = new CachedFetcher<IronBankMarketDynamic[]>(\n    \"ironbank/getDynamic\",\n    this.ctx,\n    this.chainId\n  );\n  private cachedFetcherTokens = new CachedFetcher<Token[]>(\"ironbank/tokens\", this.ctx, this.chainId);\n\n  /**\n   * Get all IronBank markets.\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async get(addresses?: Address[], overrides?: CallOverrides): Promise<IronBankMarket[]> {\n    const cached = await this.cachedFetcherGet.fetch();\n    if (cached) {\n      if (addresses) {\n        return cached.filter(market => addresses.includes(market.address));\n      } else {\n        return cached;\n      }\n    }\n\n    const assetsStatic = await this.yearn.services.lens.adapters.ironBank.assetsStatic(addresses, overrides);\n    const assetsDynamic = await this.yearn.services.lens.adapters.ironBank.assetsDynamic(addresses, overrides);\n    const assets = new Array<IronBankMarket>();\n    for (const asset of assetsStatic) {\n      const dynamic = assetsDynamic.find(({ address }) => asset.address === address);\n      if (!dynamic) {\n        throw new SdkError(`Dynamic asset does not exist for ${asset.address}`);\n      }\n      assets.push({ ...asset, ...dynamic });\n    }\n    return assets;\n  }\n\n  /**\n   * Get static part of IronBank markets.\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async getStatic(addresses?: Address[], overrides?: CallOverrides): Promise<IronBankMarketStatic[]> {\n    return await this.yearn.services.lens.adapters.ironBank.assetsStatic(addresses, overrides);\n  }\n\n  /**\n   * Get dynamic part of IronBank markets.\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async getDynamic(addresses?: Address[], overrides?: CallOverrides): Promise<IronBankMarketDynamic[]> {\n    const cached = await this.cachedFetcherGetDynamic.fetch();\n    if (cached) {\n      if (addresses) {\n        return cached.filter(market => addresses.includes(market.address));\n      } else {\n        return cached;\n      }\n    }\n\n    return await this.yearn.services.lens.adapters.ironBank.assetsDynamic(addresses, overrides);\n  }\n\n  /**\n   * Get IronBank market positions for a particular address.\n   * @param address\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async positionsOf(address: Address, addresses?: Address[], overrides?: CallOverrides): Promise<Position[]> {\n    return this.yearn.services.lens.adapters.ironBank.positionsOf(address, addresses, overrides);\n  }\n\n  /**\n   * Get the IronBank User Summary for a particular address.\n   * @param address\n   * @param overrides\n   * @returns\n   */\n  async summaryOf(address: Address, overrides?: CallOverrides): Promise<IronBankUserSummary> {\n    return this.yearn.services.lens.adapters.ironBank.generalPositionOf(address, overrides);\n  }\n\n  /**\n   * Get the IronBank User Metadata for a particular address.\n   * @param address\n   * @param addresses\n   * @param overrides\n   * @returns\n   */\n  async metadataOf(address: Address, addresses?: Address[], overrides?: CallOverrides): Promise<CyTokenUserMetadata[]> {\n    return this.yearn.services.lens.adapters.ironBank.assetsUserMetadata(address, addresses, overrides);\n  }\n\n  /**\n   * Get all IronBank market's underlying token balances for a particular\n   * address.\n   * @param address\n   * @param overrides\n   * @returns\n   */\n  async balances(address: Address, overrides?: CallOverrides): Promise<Balance[]> {\n    const tokens = await this.tokens();\n    const balances = await this.yearn.services.helper.tokenBalances(\n      address,\n      tokens.map(token => token.address),\n      overrides\n    );\n    return balances.map(balance => {\n      const token = tokens.find(token => token.address === balance.address);\n      if (!token) {\n        throw new SdkError(`Token does not exist for Balance(${balance.address})`);\n      }\n      return {\n        ...balance,\n        token\n      };\n    });\n  }\n\n  /**\n   * Get all IronBank market's underlying tokens.\n   * @param overrides\n   * @returns\n   */\n  async tokens(overrides?: CallOverrides): Promise<Token[]> {\n    const cached = await this.cachedFetcherTokens.fetch();\n    if (cached) {\n      return cached;\n    }\n\n    const tokenAddresses = await this.yearn.services.lens.adapters.ironBank.tokens(overrides);\n    const tokens = await this.yearn.services.helper.tokens(tokenAddresses, overrides);\n    const icons = this.yearn.services.asset.icon(tokenAddresses);\n    return Promise.all(\n      tokens.map(async token => ({\n        ...token,\n        icon: icons[token.address],\n        supported: {},\n        priceUsdc: await this.yearn.services.oracle.getPriceUsdc(token.address, overrides)\n      }))\n    );\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\n\nimport { Integer, SdkError, Usdc } from \"./types\";\n\nexport const ZeroAddress = \"0x0000000000000000000000000000000000000000\";\nexport const EthAddress = \"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE\";\nexport const WethAddress = \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\";\n\n// handle a non-200 `fetch` response.\nexport async function handleHttpError(response: Response): Promise<Response> {\n  if (response.status !== 200) {\n    const { url, status, statusText } = response;\n    throw new SdkError(`HTTP to ${url} request failed (status ${status} ${statusText})`);\n  }\n  return response;\n}\n\n// formally convert USD values to USDC values (* 1e6), using Usdc type alias.\nexport function usdc(usd: any): Usdc {\n  return BigNumber.from(Math.floor(Number(usd) * 1e6)).toString();\n}\n\n// formally convert BigNumber to Integer type alias.\nexport function int(value: BigNumber): Integer {\n  return value.toString();\n}\n\nexport function chunkArray<T>(array: T[], size: number) {\n  if (size < 1) {\n    throw new Error(`Size needs to be positive: ${size}`);\n  }\n\n  let result = [];\n  for (let i = 0; i < array.length; i += size) {\n    let chunk = array.slice(i, i + size);\n    result.push(chunk);\n  }\n  return result;\n}\n","import { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"bignumber.js\";\n\nimport { Service } from \"../../common\";\nimport { usdc } from \"../../helpers\";\nimport { Address, Usdc } from \"../../types/common\";\n\nconst HourInMilliseconds = 1000 * 60 * 60;\nconst PickleApiUrl = \"https://api.pickle.finance/prod/protocol/pools\";\nconst PickleApiBackupUrl = \"https://f8wgg18t1h.execute-api.us-west-1.amazonaws.com/prod/protocol/pools\";\n\nexport const PickleJars = [\n  \"0xCeD67a187b923F0E5ebcc77C7f2F7da20099e378\" // yvboost-eth\n];\n\nexport class PickleService extends Service {\n  private pickleJarUSDPrices: Map<Address, BigNumber> = new Map();\n  private lastFetchedDate: Date = new Date(0);\n\n  /**\n   * Fetches the USD price of a pickle jar token\n   * @param jar the address of the jar to fetch\n   * @returns the price of the jar token in USD\n   */\n  async getPriceUsdc(jar: Address): Promise<Usdc> {\n    const oneHourAgo = new Date(Date.now() - HourInMilliseconds);\n    if (this.lastFetchedDate < oneHourAgo) {\n      await this.fetchPickleJarPrices();\n    }\n    return usdc(this.pickleJarUSDPrices.get(jar)?.toFixed(0)) || \"0\";\n  }\n\n  private async fetchPickleJarPrices() {\n    interface JarDatum {\n      liquidity_locked: number;\n      jarAddress: Address;\n      tokens: number;\n    }\n\n    const jarData: JarDatum[] = await fetch(PickleApiUrl)\n      .catch(() => {\n        return fetch(PickleApiBackupUrl);\n      })\n      .then(res => res.json());\n\n    this.pickleJarUSDPrices.clear();\n    this.lastFetchedDate = new Date();\n\n    const relevantJars = jarData.filter(jar => PickleJars.includes(getAddress(jar.jarAddress)));\n\n    for (const jarDatum of relevantJars) {\n      const usdPrice = new BigNumber(jarDatum.liquidity_locked / jarDatum.tokens);\n      this.pickleJarUSDPrices.set(getAddress(jarDatum.jarAddress), usdPrice);\n    }\n  }\n}\n","import { getAddress } from \"@ethersproject/address\";\nimport { JsonRpcProvider, JsonRpcSigner, TransactionRequest } from \"@ethersproject/providers\";\nimport BigNumber from \"bignumber.js\";\n\nimport { Context } from \"./context\";\nimport { TelegramService } from \"./services/telegram\";\nimport { EthersError, SimulationError, SimulationOptions, TenderlyError } from \"./types\";\nimport { Address, Integer } from \"./types/common\";\n\nconst baseUrl = \"https://simulate.yearn.network\";\nconst latestBlockKey = -1;\n\nexport interface SimulationResponse {\n  transaction: {\n    transaction_info: {\n      call_trace: SimulationCallTrace;\n      logs: SimulationLog[];\n    };\n    error_message?: string;\n  };\n  simulation: {\n    id: string;\n  };\n}\n\ninterface SimulationLog {\n  raw: {\n    address: Address;\n    topics: string[];\n    data: string;\n  };\n}\n\ninterface SimulationCallTrace {\n  output: Integer;\n  calls: SimulationCallTrace[] | null;\n  error?: string;\n}\n\n/**\n * [[SimulationExecutor]] performs simulation requests and returns the response\n * with no data manipulation. If the simulation results in an error then an alert is sent\n * via telegram if the appropriate environment variables are set. Forks are necessary to be\n * created if two subsequent simulations are needed e.g. if a zap in is wished to be simulated\n * but the user has not approved the zap contract then the steps to simulate it are:\n * 1. Create a fork\n * 2. Simulate the approval transaction using this fork\n * 3. Simulate the zap in using the approval transaction as the root\n */\nexport class SimulationExecutor {\n  constructor(private telegram: TelegramService, private ctx: Context) {}\n\n  /**\n   * Simulate a transaction\n   * @param from\n   * @param to\n   * @param input the encoded input data as per the ethereum abi specification\n   * @param value the ether value of the transaction\n   * @param options simulation options\n   * @returns data about the simulated transaction\n   */\n  async simulateRaw(\n    from: Address,\n    to: Address,\n    input: string,\n    options: SimulationOptions = {},\n    value: Integer = \"0\"\n  ): Promise<any> {\n    return await this.makeSimulationRequest(from, to, input, options, value);\n  }\n\n  /**\n   * Simulates an interaction with a vault to see how much of the desired token\n   * will be received. This happens by inspecting the logs of the transaction and\n   * finding the Transfer event where the desired token is transferred to the user.\n   * @param from\n   * @param to\n   * @param data\n   * @param targetToken the token being bought by this transaction\n   * @param from the address initiating this transaction\n   * @param options\n   * @param value\n   * @returns the amount of tokens simulated to be bought\n   */\n  async simulateVaultInteraction(\n    from: Address,\n    to: Address,\n    data: string,\n    targetToken: Address,\n    options: SimulationOptions,\n    value: Integer = \"0\"\n  ): Promise<Integer> {\n    let response: SimulationResponse = await this.makeSimulationRequest(from, to, data, options, value);\n\n    const getAddressFromTopic = (topic: string) => {\n      return getAddress(topic.slice(-40)); // the last 20 bytes of the topic is the address\n    };\n\n    const encodedTransferFunction = \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"; // keccak256(\"Transfer(address,address,uint256)\")\n\n    const log = response.transaction.transaction_info.logs\n      .reverse()\n      .find(\n        log =>\n          log.raw.topics[0] === encodedTransferFunction && getAddressFromTopic(log.raw.topics[2]) === getAddress(from)\n      );\n\n    if (!log) {\n      throw new SimulationError(`No log of transferring token ${targetToken} to ${from}`, SimulationError.NO_LOG);\n    }\n\n    const tokensReceived = new BigNumber(log.raw.data).toFixed(0);\n    return tokensReceived;\n  }\n\n  /**\n   * Performs a simulation with preset parameters\n   * @param from\n   * @param to\n   * @param data\n   * @param options\n   * @param value\n   * @returns the resulting data from the transaction\n   */\n  async makeSimulationRequest(\n    from: Address,\n    to: Address,\n    data: string,\n    options: SimulationOptions,\n    value: Integer = \"0\"\n  ): Promise<SimulationResponse> {\n    const constructedPath = options?.forkId ? `${baseUrl}/fork/${options.forkId}/simulate` : `${baseUrl}/simulate`;\n\n    const transactionRequest = await this.getPopulatedTransactionRequest(from, to, data, options, value);\n\n    const body = {\n      from,\n      to,\n      input: data,\n      network_id: transactionRequest.chainId?.toString() || \"1\",\n      block_number: latestBlockKey,\n      simulation_type: \"quick\",\n      root: options?.root,\n      value: transactionRequest.value?.toString() || \"0\",\n      gas: parseInt(transactionRequest.gasLimit?.toString() || \"0\"),\n      gas_price: transactionRequest.gasPrice?.toString() || 0,\n      save: options.save || true,\n      nonce: transactionRequest.nonce\n    };\n\n    const simulationResponse = await fetch(constructedPath, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .catch(() => {\n        throw new TenderlyError(\"simulation call to Tenderly failed\", TenderlyError.SIMULATION_CALL);\n      });\n\n    const errorMessage = simulationResponse.transaction.error_message;\n\n    if (errorMessage) {\n      if (options.save) {\n        this.sendErrorMessage(errorMessage, simulationResponse.simulation.id, options.forkId);\n      }\n      throw new SimulationError(errorMessage, SimulationError.TENDERLY_RESPONSE_ERROR);\n    } else {\n      // even though the transaction has been successful one of it's calls could have failed i.e. a partial revert might have happened\n      const allCalls = this.getAllSimulationCalls(simulationResponse.transaction.transaction_info.call_trace);\n      const partialRevertError = allCalls.find(call => call.error)?.error;\n      if (partialRevertError) {\n        const errorMessage = \"Partial Revert - \" + partialRevertError;\n        this.sendErrorMessage(errorMessage, simulationResponse.simulation.id, options?.forkId);\n        throw new SimulationError(errorMessage, SimulationError.PARTIAL_REVERT);\n      }\n    }\n\n    return simulationResponse;\n  }\n\n  /**\n   * Simulates a transaction, with the `save` parameter initially set to `false`. If this simulation fails then\n   * the simulation is re-executed but with `save` set to `true` so the failure can be stored and later analyzed.\n   * @param simulate the function which executes the simulation, passing in `save` as an argument.\n   * @param forkIdToDeleteOnSuccess if the simulation is successful there is no reason to save it. Delete the fork to avoid clutter\n   * @returns the result of the simulate parameter\n   */\n  async executeSimulationWithReSimulationOnFailure<T>(\n    simulate: (save: boolean) => Promise<T>,\n    forkIdToDeleteOnSuccess: string | null = null\n  ): Promise<T> {\n    try {\n      const result = await simulate(false).then(res => {\n        // if the transaction used a fork and was successful then delete it\n        if (forkIdToDeleteOnSuccess) {\n          this.deleteFork(forkIdToDeleteOnSuccess);\n        }\n        return res;\n      });\n\n      return result;\n    } catch (error) {\n      // re-simulate the transaction with `save` set to true so the failure can be analyzed later\n      try {\n        simulate(true);\n      } catch {}\n\n      throw error;\n    }\n  }\n\n  /**\n   * Recursively loops through the simulation call trace, aggregating all calls into a flattened array.\n   * @param callTrace the starting call trace to inspect\n   * @returns a flattened array of call data\n   */\n  private getAllSimulationCalls(callTrace: SimulationCallTrace): SimulationCallTrace[] {\n    let result: SimulationCallTrace[] = [];\n    result = result.concat(callTrace.calls || []);\n    for (const calls of callTrace.calls || []) {\n      const res = this.getAllSimulationCalls(calls);\n      result = result.concat(res);\n    }\n    return result;\n  }\n\n  /**\n   * Creates a transaction object and populates it to fill in parameters such as gas price,\n   * gas limit and nonce for a more accurate simulations\n   * @param from\n   * @param to\n   * @param data\n   * @param value\n   * @param options\n   * @returns A populated TransactionRequest object\n   */\n  private async getPopulatedTransactionRequest(\n    from: Address,\n    to: Address,\n    data: string,\n    options: SimulationOptions,\n    value: Integer = \"0\"\n  ): Promise<TransactionRequest> {\n    let signer: JsonRpcSigner;\n    if (options?.forkId) {\n      const provider = new JsonRpcProvider(`https://rpc.tenderly.co/fork/${options.forkId}`);\n      signer = provider.getSigner(from);\n    } else {\n      signer = this.ctx.provider.write.getSigner(from);\n    }\n\n    if (options.maxFeePerGas && options.maxPriorityFeePerGas) {\n      delete options.gasPrice;\n    }\n\n    const transactionRequest: TransactionRequest = {\n      from,\n      to,\n      data,\n      value,\n      gasLimit: options.gasLimit,\n      gasPrice: options.gasPrice,\n      maxFeePerGas: options.maxFeePerGas,\n      maxPriorityFeePerGas: options.maxPriorityFeePerGas,\n      type: options.gasPrice ? 0 : undefined\n    };\n\n    const result = await signer.populateTransaction(transactionRequest).catch(() => {\n      throw new EthersError(\"error populating transaction\", EthersError.POPULATING_TRANSACTION);\n    });\n\n    return result;\n  }\n\n  /**\n   * Create a new fork that can be used to simulate multiple sequential transactions on\n   * e.g. approval followed by a deposit.\n   * @returns the uuid of a new fork that has been created\n   */\n  async createFork(): Promise<string> {\n    interface Response {\n      simulation_fork: {\n        id: string;\n      };\n    }\n\n    const body = {\n      alias: \"\",\n      description: \"\",\n      network_id: \"1\"\n    };\n\n    const response: Response = await await fetch(`${baseUrl}/fork`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .catch(() => {\n        throw new TenderlyError(\"failed to create fork\", TenderlyError.CREATE_FORK);\n      });\n\n    return response.simulation_fork.id;\n  }\n\n  /**\n   * Deletes a fork. This should be done after its successful use in order to avoid clutter.\n   * @param forkId the fork to be deleted\n   * @returns the deletion response\n   */\n  private async deleteFork(forkId: string) {\n    return await fetch(`${baseUrl}/fork/${forkId}`, { method: \"DELETE\" });\n  }\n\n  /**\n   * Sends a message to a telegram channel reporting a simulation error\n   * @param errorMessage the error to be reported\n   * @param simulationId the id of the simulation so the simulation failure can be inspected in the dashboard\n   * @param forkId the optional id of the fork so the simulation failure can be inspected in the dashboard\n   */\n  private sendErrorMessage(errorMessage: string, simulationId: string, forkId?: string) {\n    let transactionUrl: string | undefined;\n    if (this.ctx.simulation.dashboardUrl) {\n      transactionUrl = `${this.ctx.simulation.dashboardUrl}/${\n        forkId ? `fork/${forkId}/simulation` : \"simulator\"\n      }/${simulationId}`;\n    }\n\n    const message = [\"Simulation error\", errorMessage, transactionUrl].map(item => item).join(\"\\n\\n\");\n\n    this.telegram.sendMessage(message);\n  }\n}\n","import { Contract } from \"@ethersproject/contracts\";\nimport { JsonRpcSigner } from \"@ethersproject/providers\";\nimport { BigNumber } from \"bignumber.js\";\n\nimport { Address } from \"./types/common\";\n\nexport abstract class VaultContract {\n  protected static get abi() {\n    return [\n      \"function token() view returns (address)\",\n      \"function decimals() view returns (uint256)\",\n      \"function deposit(uint256 amount) public\",\n      \"function withdraw(uint256 amount) public\"\n    ];\n  }\n\n  constructor(protected contract: Contract) {}\n\n  abstract pricePerShare(): Promise<BigNumber>;\n\n  async decimals(): Promise<BigNumber> {\n    const decimals = await this.contract.decimals();\n    return new BigNumber(decimals.toString());\n  }\n\n  async token(): Promise<Address> {\n    return await this.contract.token();\n  }\n\n  encodeDeposit = (amount: string): string => {\n    return this.contract.interface.encodeFunctionData(\"deposit\", [amount]);\n  };\n\n  encodeWithdraw = (amount: string): string => {\n    return this.contract.interface.encodeFunctionData(\"withdraw\", [amount]);\n  };\n}\n\nexport class PickleJarContract extends VaultContract {\n  private static get pickleJarAbi() {\n    return [\"function getRatio() public view returns (uint256)\"];\n  }\n\n  constructor(jarAddress: Address, signer: JsonRpcSigner) {\n    super(new Contract(jarAddress, [...VaultContract.abi, ...PickleJarContract.pickleJarAbi], signer));\n  }\n\n  async pricePerShare(): Promise<BigNumber> {\n    const ratio = await this.contract.getRatio();\n    return new BigNumber(ratio.toString());\n  }\n}\n\nexport class YearnVaultContract extends VaultContract {\n  private static get yearnVaultAbi() {\n    return [\"function pricePerShare() view returns (uint256)\"];\n  }\n\n  constructor(jarAddress: Address, signer: JsonRpcSigner) {\n    super(new Contract(jarAddress, [...VaultContract.abi, ...YearnVaultContract.yearnVaultAbi], signer));\n  }\n\n  async pricePerShare(): Promise<BigNumber> {\n    const pricePerShare = await this.contract.pricePerShare();\n    return new BigNumber(pricePerShare.toString());\n  }\n}\n","import { getAddress } from \"@ethersproject/address\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport { JsonRpcSigner } from \"@ethersproject/providers\";\nimport BigNumber from \"bignumber.js\";\n\nimport { ChainId } from \"../chain\";\nimport { ServiceInterface } from \"../common\";\nimport { EthAddress, WethAddress, ZeroAddress } from \"../helpers\";\nimport { PickleJars } from \"../services/partners/pickle\";\nimport { SimulationExecutor, SimulationResponse } from \"../simulationExecutor\";\nimport {\n  Address,\n  EthersError,\n  Integer,\n  PriceFetchingError,\n  SdkError,\n  ZapApprovalTransactionOutput,\n  ZapperError,\n  ZapProtocol\n} from \"../types\";\nimport { SimulationOptions, TransactionOutcome } from \"../types/custom/simulation\";\nimport { PickleJarContract, VaultContract, YearnVaultContract } from \"../vault\";\n\n/**\n * [[SimulationInterface]] allows the simulation of ethereum transactions using Tenderly's api.\n * This allows us to know information before executing a transaction on mainnet.\n * For example it can simulate how much slippage is likely to be experienced when withdrawing from a vault,\n * or how many underlying tokens the user will receive upon withdrawing share tokens.\n */\nexport class SimulationInterface<T extends ChainId> extends ServiceInterface<T> {\n  private simulationExecutor = new SimulationExecutor(this.yearn.services.telegram, this.ctx);\n\n  async deposit(\n    from: Address,\n    sellToken: Address,\n    amount: Integer,\n    toVault: Address,\n    options: SimulationOptions = {}\n  ): Promise<TransactionOutcome> {\n    const signer = this.ctx.provider.write.getSigner(from);\n    const zapProtocol = PickleJars.includes(toVault) ? ZapProtocol.PICKLE : ZapProtocol.YEARN;\n    let vaultContract =\n      zapProtocol === ZapProtocol.PICKLE\n        ? new PickleJarContract(toVault, signer)\n        : new YearnVaultContract(toVault, signer);\n\n    const underlyingToken = await vaultContract.token().catch(() => {\n      throw new EthersError(\"failed to fetch token\", EthersError.FAIL_TOKEN_FETCH);\n    });\n    const isZapping = underlyingToken !== sellToken;\n    let forkId: string | undefined;\n    let simulateDeposit: (save: boolean) => Promise<TransactionOutcome>;\n\n    if (isZapping) {\n      if (!options.slippage) {\n        throw new SdkError(\"slippage needs to be specified for a zap\", SdkError.NO_SLIPPAGE);\n      }\n\n      let needsApproving: boolean;\n\n      if (sellToken === EthAddress) {\n        needsApproving = false;\n      } else {\n        needsApproving = await this.yearn.services.zapper\n          .zapInApprovalState(from, sellToken, zapProtocol)\n          .then(state => !state.isApproved)\n          .catch(() => {\n            throw new ZapperError(\"approval state\", ZapperError.ZAP_IN_APPROVAL_STATE);\n          });\n      }\n\n      forkId = needsApproving ? await this.simulationExecutor.createFork() : undefined;\n      options.forkId = forkId;\n\n      const approvalTransactionId = needsApproving\n        ? await this.yearn.services.zapper\n            .zapInApprovalTransaction(from, sellToken, \"0\", zapProtocol)\n            .catch(() => {\n              throw new ZapperError(\"approval\", ZapperError.ZAP_IN_APPROVAL);\n            })\n            .then(async approvalTransaction => {\n              return await this.simulateZapApprovalTransaction(approvalTransaction, options);\n            })\n            .then(res => res.simulation.id)\n        : undefined;\n      options.root = approvalTransactionId;\n\n      simulateDeposit = (save: boolean) => {\n        options.save = save;\n        return this.zapIn(\n          from,\n          sellToken,\n          underlyingToken,\n          amount,\n          toVault,\n          vaultContract,\n          zapProtocol,\n          needsApproving,\n          options\n        );\n      };\n    } else {\n      const needsApproving = await this.depositNeedsApproving(from, sellToken, toVault, amount, signer);\n\n      forkId = needsApproving ? await this.simulationExecutor.createFork() : undefined;\n      options.forkId = forkId;\n\n      const approvalTransactionId = needsApproving\n        ? await this.approve(from, sellToken, amount, toVault, options)\n        : undefined;\n      options.root = approvalTransactionId;\n\n      simulateDeposit = (save: boolean) => {\n        options.save = save;\n        return this.directDeposit(from, sellToken, amount, toVault, vaultContract, options);\n      };\n    }\n    return this.simulationExecutor.executeSimulationWithReSimulationOnFailure(simulateDeposit, forkId);\n  }\n\n  async withdraw(\n    from: Address,\n    fromVault: Address,\n    amount: Integer,\n    toToken: Address,\n    options: SimulationOptions = {}\n  ): Promise<TransactionOutcome> {\n    const signer = this.ctx.provider.write.getSigner(from);\n    const vaultContract = new YearnVaultContract(fromVault, signer);\n    const underlyingToken = await vaultContract.token();\n    const isZapping = underlyingToken !== getAddress(toToken);\n    let forkId: string | undefined;\n    let simulateWithdrawal: (save: boolean) => Promise<TransactionOutcome>;\n\n    if (isZapping) {\n      if (!options.slippage) {\n        throw new SdkError(\"slippage needs to be specified for a zap\", SdkError.NO_SLIPPAGE);\n      }\n      let needsApproving: boolean;\n\n      if (fromVault === EthAddress) {\n        needsApproving = false;\n      } else {\n        needsApproving = await this.yearn.services.zapper\n          .zapOutApprovalState(from, fromVault)\n          .then(state => !state.isApproved)\n          .catch(() => {\n            throw new ZapperError(\"zap out approval state\", ZapperError.ZAP_OUT_APPROVAL_STATE);\n          });\n      }\n\n      forkId = needsApproving ? await this.simulationExecutor.createFork() : undefined;\n      options.forkId = forkId;\n      const approvalSimulationId = needsApproving\n        ? await this.yearn.services.zapper\n            .zapOutApprovalTransaction(from, fromVault, \"0\")\n            .catch(() => {\n              throw new ZapperError(\"zap out approval transaction\", ZapperError.ZAP_OUT_APPROVAL);\n            })\n            .then(async approvalTransaction => {\n              return await this.simulateZapApprovalTransaction(approvalTransaction, options);\n            })\n            .then(res => res.simulation.id)\n        : undefined;\n\n      options.root = approvalSimulationId;\n\n      simulateWithdrawal = (save: boolean) => {\n        options.save = save;\n        return this.zapOut(from, toToken, underlyingToken, amount, fromVault, needsApproving, options);\n      };\n    } else {\n      simulateWithdrawal = (save: boolean) => {\n        options.save = save;\n        return this.directWithdraw(from, toToken, amount, fromVault, vaultContract, options);\n      };\n    }\n    return this.simulationExecutor.executeSimulationWithReSimulationOnFailure(simulateWithdrawal, forkId);\n  }\n\n  private async approve(\n    from: Address,\n    token: Address,\n    amount: Integer,\n    vault: Address,\n    options: SimulationOptions\n  ): Promise<string> {\n    const TokenAbi = [\"function approve(address spender, uint256 amount) returns (bool)\"];\n    const signer = this.ctx.provider.write.getSigner(from);\n    const tokenContract = new Contract(token, TokenAbi, signer);\n    const encodedInputData = tokenContract.interface.encodeFunctionData(\"approve\", [vault, amount]);\n    options.save = true;\n\n    const simulationResponse: SimulationResponse = await this.simulationExecutor.makeSimulationRequest(\n      from,\n      token,\n      encodedInputData,\n      options\n    );\n\n    return simulationResponse.simulation.id;\n  }\n\n  private async depositNeedsApproving(\n    from: Address,\n    token: Address,\n    vault: Address,\n    amount: Integer,\n    signer: JsonRpcSigner\n  ): Promise<boolean> {\n    const TokenAbi = [\"function allowance(address owner, address spender) view returns (uint256)\"];\n    const contract = new Contract(token, TokenAbi, signer);\n    const result = await contract.allowance(from, vault).catch(() => {\n      \"deposit needs approving\";\n    });\n    return new BigNumber(result.toString()).lt(new BigNumber(amount));\n  }\n\n  private async directDeposit(\n    from: Address,\n    sellToken: Address,\n    amount: Integer,\n    toVault: Address,\n    vaultContract: VaultContract,\n    options: SimulationOptions\n  ): Promise<TransactionOutcome> {\n    const encodedInputData = vaultContract.encodeDeposit(amount);\n\n    const tokensReceived = await this.simulationExecutor.simulateVaultInteraction(\n      from,\n      toVault,\n      encodedInputData,\n      toVault,\n      options\n    );\n\n    const targetTokenAmountUsdc = await this.yearn.services.oracle\n      .getNormalizedValueUsdc(toVault, tokensReceived)\n      .catch(() => {\n        throw new PriceFetchingError(\"Error fetching price\", PriceFetchingError.FETCHING_PRICE_ORACLE);\n      });\n\n    const [decimals, pricePerShare] = await Promise.all([\n      vaultContract.decimals().catch(() => {\n        throw new EthersError(\"no decimals\", EthersError.NO_DECIMALS);\n      }),\n      vaultContract.pricePerShare().catch(() => {\n        throw new EthersError(\"no price per share\", EthersError.NO_PRICE_PER_SHARE);\n      })\n    ]);\n\n    const targetUnderlyingTokensReceived = new BigNumber(tokensReceived)\n      .div(new BigNumber(10).pow(decimals))\n      .multipliedBy(pricePerShare)\n      .toFixed(0);\n\n    const result: TransactionOutcome = {\n      sourceTokenAddress: sellToken,\n      sourceTokenAmount: amount,\n      targetTokenAddress: toVault,\n      targetTokenAmount: tokensReceived,\n      targetTokenAmountUsdc: targetTokenAmountUsdc,\n      targetUnderlyingTokenAddress: toVault,\n      targetUnderlyingTokenAmount: targetUnderlyingTokensReceived,\n      conversionRate: 1,\n      slippage: 0\n    };\n\n    return result;\n  }\n\n  private async zapIn(\n    from: Address,\n    sellToken: Address,\n    underlyingTokenAddress: Address,\n    amount: Integer,\n    toVault: Address,\n    vaultContract: VaultContract,\n    zapProtocol: ZapProtocol,\n    skipGasEstimate: boolean,\n    options: SimulationOptions\n  ): Promise<TransactionOutcome> {\n    const zapToken = sellToken === EthAddress ? ZeroAddress : sellToken;\n\n    if (!options.slippage) {\n      throw new SdkError(\"slippage needs to be set\", SdkError.NO_SLIPPAGE);\n    }\n\n    const zapInParams = await this.yearn.services.zapper\n      .zapIn(from, zapToken, amount, toVault, options.gasPrice || \"0\", options.slippage, skipGasEstimate, zapProtocol)\n      .catch(() => {\n        throw new ZapperError(\"zap in\", ZapperError.ZAP_IN);\n      });\n\n    const value = new BigNumber(zapInParams.value).toFixed(0);\n\n    options.gasPrice = options.gasPrice || zapInParams.gasPrice;\n    if (!skipGasEstimate) {\n      options.gasLimit = zapInParams.gas;\n    }\n\n    const tokensReceived = await this.simulationExecutor.simulateVaultInteraction(\n      from,\n      zapInParams.to,\n      zapInParams.data,\n      toVault,\n      options,\n      value\n    );\n\n    const [decimals, pricePerShare] = await Promise.all([\n      vaultContract.decimals().catch(() => {\n        throw new EthersError(\"no decimals\", EthersError.NO_DECIMALS);\n      }),\n      vaultContract.pricePerShare().catch(() => {\n        throw new EthersError(\"no price per share\", EthersError.NO_PRICE_PER_SHARE);\n      })\n    ]);\n    const targetUnderlyingTokensReceived = new BigNumber(tokensReceived)\n      .div(new BigNumber(10).pow(decimals))\n      .multipliedBy(pricePerShare)\n      .toFixed(0);\n\n    let amountReceivedUsdc: BigNumber;\n\n    switch (zapProtocol) {\n      case ZapProtocol.YEARN:\n        amountReceivedUsdc = await this.yearn.services.oracle\n          .getNormalizedValueUsdc(toVault, tokensReceived)\n          .then(price => new BigNumber(price))\n          .catch(() => {\n            throw new PriceFetchingError(\"error fetching price\", PriceFetchingError.FETCHING_PRICE_ORACLE);\n          });\n        break;\n      case ZapProtocol.PICKLE:\n        amountReceivedUsdc = (\n          await this.yearn.services.pickle\n            .getPriceUsdc(toVault)\n            .catch(() => {\n              throw new PriceFetchingError(\"error fetching price\", PriceFetchingError.FETCHING_PRICE_PICKLE);\n            })\n            .then(usdc => new BigNumber(usdc))\n        )\n          .dividedBy(new BigNumber(10).pow(decimals))\n          .multipliedBy(new BigNumber(tokensReceived));\n        break;\n    }\n\n    const oracleToken = sellToken === EthAddress ? WethAddress : sellToken;\n    const zapInAmountUsdc = new BigNumber(\n      await this.yearn.services.oracle.getNormalizedValueUsdc(oracleToken, amount).catch(() => {\n        throw new PriceFetchingError(\"error fetching price\", PriceFetchingError.FETCHING_PRICE_ORACLE);\n      })\n    );\n\n    const conversionRate = amountReceivedUsdc.div(new BigNumber(zapInAmountUsdc)).toNumber();\n\n    const result: TransactionOutcome = {\n      sourceTokenAddress: sellToken,\n      sourceTokenAmount: amount,\n      targetTokenAddress: zapInParams.buyTokenAddress,\n      targetTokenAmount: tokensReceived,\n      targetTokenAmountUsdc: amountReceivedUsdc.toFixed(0),\n      targetUnderlyingTokenAddress: underlyingTokenAddress,\n      targetUnderlyingTokenAmount: targetUnderlyingTokensReceived,\n      conversionRate: conversionRate,\n      slippage: 1 - conversionRate\n    };\n\n    return result;\n  }\n\n  private async directWithdraw(\n    from: Address,\n    toToken: Address,\n    amount: Integer,\n    fromVault: Address,\n    vaultContract: VaultContract,\n    options: SimulationOptions\n  ): Promise<TransactionOutcome> {\n    const encodedInputData = vaultContract.encodeWithdraw(amount);\n\n    const tokensReceived = await this.simulationExecutor.simulateVaultInteraction(\n      from,\n      fromVault,\n      encodedInputData,\n      toToken,\n      options\n    );\n\n    const targetTokenAmountUsdc = await this.yearn.services.oracle\n      .getNormalizedValueUsdc(toToken, tokensReceived)\n      .catch(() => {\n        throw new PriceFetchingError(\"error fetching price\", PriceFetchingError.FETCHING_PRICE_ORACLE);\n      });\n\n    let result: TransactionOutcome = {\n      sourceTokenAddress: fromVault,\n      sourceTokenAmount: amount,\n      targetTokenAddress: toToken,\n      targetTokenAmount: tokensReceived,\n      targetTokenAmountUsdc: targetTokenAmountUsdc,\n      targetUnderlyingTokenAddress: toToken,\n      targetUnderlyingTokenAmount: tokensReceived,\n      conversionRate: 1,\n      slippage: 0\n    };\n\n    return result;\n  }\n\n  private async zapOut(\n    from: Address,\n    toToken: Address,\n    underlyingTokenAddress: Address,\n    amount: Integer,\n    fromVault: Address,\n    skipGasEstimate: boolean,\n    options: SimulationOptions\n  ): Promise<TransactionOutcome> {\n    if (!options.slippage) {\n      throw new SdkError(\"slippage needs to be set\", SdkError.NO_SLIPPAGE);\n    }\n\n    const zapToken = toToken === EthAddress ? ZeroAddress : toToken;\n    const zapOutParams = await this.yearn.services.zapper\n      .zapOut(from, zapToken, amount, fromVault, \"0\", options.slippage, skipGasEstimate)\n      .catch(() => {\n        throw new ZapperError(\"error zapping out\", ZapperError.ZAP_OUT);\n      });\n\n    if (!skipGasEstimate) {\n      options.gasLimit = zapOutParams.gas;\n    }\n\n    const tokensReceived = await (async () => {\n      if (zapToken === ZeroAddress) {\n        let response: SimulationResponse = await this.simulationExecutor.makeSimulationRequest(\n          from,\n          zapOutParams.to,\n          zapOutParams.data,\n          options,\n          zapOutParams.value\n        );\n        return new BigNumber(response.transaction.transaction_info.call_trace.output).toFixed(0);\n      } else {\n        return await this.simulationExecutor.simulateVaultInteraction(\n          from,\n          zapOutParams.to,\n          zapOutParams.data,\n          toToken,\n          options,\n          zapOutParams.value\n        );\n      }\n    })();\n\n    const oracleToken = toToken === EthAddress ? WethAddress : toToken;\n    const zapOutAmountUsdc = await this.yearn.services.oracle\n      .getNormalizedValueUsdc(oracleToken, tokensReceived)\n      .catch(() => {\n        throw new PriceFetchingError(\"error fetching price\", PriceFetchingError.FETCHING_PRICE_ORACLE);\n      });\n    const soldAssetAmountUsdc = await this.yearn.services.oracle.getNormalizedValueUsdc(fromVault, amount).catch(() => {\n      throw new PriceFetchingError(\"error fetching price\", PriceFetchingError.FETCHING_PRICE_ORACLE);\n    });\n\n    const conversionRate = new BigNumber(zapOutAmountUsdc).div(new BigNumber(soldAssetAmountUsdc)).toNumber();\n\n    let result: TransactionOutcome = {\n      sourceTokenAddress: fromVault,\n      sourceTokenAmount: amount,\n      targetTokenAddress: toToken,\n      targetTokenAmount: tokensReceived,\n      targetTokenAmountUsdc: zapOutAmountUsdc,\n      targetUnderlyingTokenAddress: underlyingTokenAddress,\n      targetUnderlyingTokenAmount: tokensReceived,\n      conversionRate: conversionRate,\n      slippage: 1 - conversionRate\n    };\n\n    return result;\n  }\n\n  private async simulateZapApprovalTransaction(\n    zapApprovalTransaction: ZapApprovalTransactionOutput,\n    options: SimulationOptions\n  ): Promise<SimulationResponse> {\n    options.save = true;\n    return await this.simulationExecutor.makeSimulationRequest(\n      zapApprovalTransaction.from,\n      zapApprovalTransaction.to,\n      zapApprovalTransaction.data,\n      options\n    );\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { Contract } from \"@ethersproject/contracts\";\nimport fetch from \"cross-fetch\";\n\nimport { CachedFetcher } from \"../cache\";\nimport { ChainId } from \"../chain\";\nimport { ServiceInterface } from \"../common\";\nimport { Address, StrategiesMetadata, StrategyMetadata } from \"../types\";\nimport { VaultStrategiesMetadata } from \"../types/strategy\";\n\ninterface VaultData {\n  address: Address;\n  token: {\n    symbol: string;\n  };\n  strategies: {\n    name: string;\n    address: Address;\n  }[];\n}\n\nconst VaultAbi = [\n  \"function strategies(address) view returns (uint256 performanceFee, uint256 activation, uint256 debtRatio, uint256 rateLimit, uint256 lastReport, uint256 totalDebt, uint256 totalGain, uint256 totalLoss)\",\n  \"function token() view returns (address)\",\n  \"event StrategyAdded(address indexed strategy, uint256 debtRatio, uint256 minDebtPerHarvest, uint256 maxDebtPerHarvest, uint256 performanceFee)\"\n];\n\nconst TokenAbi = [\"function symbol() view returns (string)\"];\n\nexport class StrategyInterface<T extends ChainId> extends ServiceInterface<T> {\n  private cachedFetcher = new CachedFetcher<VaultStrategiesMetadata[]>(\n    \"strategies/metadata/get\",\n    this.ctx,\n    this.chainId\n  );\n\n  async vaultsStrategiesMetadata(vaultAddresses?: Address[]): Promise<VaultStrategiesMetadata[]> {\n    const cached = await this.cachedFetcher.fetch();\n    if (cached) {\n      return cached;\n    }\n\n    let vaults: Address[];\n    if (vaultAddresses) {\n      vaults = vaultAddresses;\n    } else {\n      vaults = await this.yearn.services.lens.adapters.vaults.v2\n        .assetsStatic()\n        .then(assets => assets.map(asset => asset.address));\n    }\n\n    let vaultStrategiesMetadata: VaultStrategiesMetadata[] | undefined;\n\n    try {\n      vaultStrategiesMetadata = await this.fetchMetadataFromApi(vaults);\n    } catch (error) {\n      console.error(error);\n    }\n\n    if (!vaultStrategiesMetadata) {\n      vaultStrategiesMetadata = await this.fetchMetadataFromChain(vaults);\n    }\n\n    return vaultStrategiesMetadata;\n  }\n\n  private async fetchMetadataFromApi(vaultAddresses: Address[]): Promise<VaultStrategiesMetadata[]> {\n    const vaultsData = await this.fetchVaultsData();\n\n    const strategiesMetadata = await this.yearn.services.meta.strategies();\n\n    let vaultsStrategiesMetadataPromises: Promise<VaultStrategiesMetadata | undefined>[];\n    vaultsStrategiesMetadataPromises = vaultAddresses.map(async vaultAddress => {\n      const vaultDatum = vaultsData.find(datum => datum.address === vaultAddress);\n      if (!vaultDatum) {\n        return undefined;\n      }\n      const vaultContract = new Contract(vaultDatum.address, VaultAbi, this.ctx.provider.read);\n      return this.fetchVaultStrategiesMetadata(\n        vaultDatum.strategies,\n        strategiesMetadata,\n        vaultContract,\n        vaultDatum.token.symbol\n      );\n    });\n\n    return Promise.all(vaultsStrategiesMetadataPromises).then(vaultsStrategyData => {\n      return vaultsStrategyData.flatMap(data => (data ? [data] : []));\n    });\n  }\n\n  private async fetchMetadataFromChain(vaultAddresses: Address[]): Promise<VaultStrategiesMetadata[]> {\n    const strategiesMetadata = await this.yearn.services.meta.strategies();\n    const provider = this.ctx.provider.read;\n\n    let vaultsStrategiesMetadataPromises: Promise<VaultStrategiesMetadata | undefined>[];\n    vaultsStrategiesMetadataPromises = vaultAddresses.map(async vaultAddress => {\n      const vaultContract = new Contract(vaultAddress, VaultAbi, provider);\n\n      const strategiesPromise = this.yearn.services.helper.assetStrategiesAddresses(vaultAddress).then(addresses =>\n        addresses.map(strat => {\n          return {\n            address: strat\n          };\n        })\n      );\n\n      const [strategies, underlyingTokenAddress] = await Promise.all([strategiesPromise, vaultContract.token()]);\n      const underlyingTokenContract = new Contract(underlyingTokenAddress, TokenAbi, provider);\n      const underlyingTokenSymbol = await underlyingTokenContract.symbol();\n\n      return this.fetchVaultStrategiesMetadata(strategies, strategiesMetadata, vaultContract, underlyingTokenSymbol);\n    });\n\n    return Promise.all(vaultsStrategiesMetadataPromises).then(vaultsStrategyData =>\n      vaultsStrategyData.flatMap(data => (data ? [data] : []))\n    );\n  }\n\n  private async fetchVaultStrategiesMetadata(\n    strategies: { address: Address; name?: string }[],\n    strategiesMetadata: StrategiesMetadata[],\n    vaultContract: Contract,\n    underlyingTokenSymbol: string\n  ): Promise<VaultStrategiesMetadata | undefined> {\n    if (strategies.length === 0) {\n      return undefined;\n    }\n\n    let metadata: StrategyMetadata[] = await Promise.all(\n      strategies.map(async strategy => {\n        let debtRatio: BigNumber;\n\n        try {\n          const struct = await vaultContract.strategies(strategy.address);\n          debtRatio = struct.debtRatio as BigNumber;\n        } catch (error) {\n          return undefined;\n        }\n\n        if (debtRatio.lte(BigNumber.from(\"0\"))) {\n          return undefined;\n        }\n\n        const metadatum = strategiesMetadata.find(strategiesMetadata =>\n          strategiesMetadata.addresses.includes(strategy.address)\n        );\n\n        const metadata: StrategyMetadata = {\n          address: strategy.address,\n          name: metadatum?.name || strategy.name || \"Strategy\",\n          description: metadatum?.description ?? \"I don't have a description for this strategy yet\",\n          protocols: metadatum?.protocols ?? []\n        };\n\n        metadata.description = metadata?.description.replace(/{{token}}/g, underlyingTokenSymbol);\n\n        return { data: metadata, debtRatio };\n      })\n    ).then(metadataAndDebtRatio =>\n      metadataAndDebtRatio\n        .flatMap(data => (data ? [data] : []))\n        .sort((lhs, rhs) => {\n          if (lhs.debtRatio.lt(rhs.debtRatio)) {\n            return 1;\n          } else if (lhs.debtRatio.eq(rhs.debtRatio)) {\n            return 0;\n          } else {\n            return -1;\n          }\n        })\n        .map(metadata => metadata.data)\n    );\n\n    if (metadata.length === 0) {\n      return undefined;\n    }\n\n    const result: VaultStrategiesMetadata = {\n      vaultAddress: vaultContract.address,\n      strategiesMetadata: metadata\n    };\n\n    return result;\n  }\n\n  private async fetchVaultsData(): Promise<VaultData[]> {\n    const res = await fetch(`https://api.yearn.finance/v1/chains/${this.chainId}/vaults/all`);\n\n    if (!res.ok) {\n      throw new Error(`An error has occured fetching vaults data: ${res.status}`);\n    }\n\n    return await res.json();\n  }\n}\n","import { CallOverrides, Contract } from \"@ethersproject/contracts\";\nimport { TransactionRequest, TransactionResponse } from \"@ethersproject/providers\";\nimport BigNumber from \"bignumber.js\";\n\nimport { CachedFetcher } from \"../cache\";\nimport { ChainId } from \"../chain\";\nimport { ServiceInterface } from \"../common\";\nimport { EthAddress } from \"../helpers\";\nimport { PickleJars } from \"../services/partners/pickle\";\nimport { Address, Integer, SdkError, TokenMetadata, TypedMap, Usdc, Vault, ZapProtocol } from \"../types\";\nimport { Balance, Icon, IconMap, Token } from \"../types\";\n\nconst TokenAbi = [\"function approve(address _spender, uint256 _value) public\"];\n\nexport class TokenInterface<C extends ChainId> extends ServiceInterface<C> {\n  private cachedFetcherSupported = new CachedFetcher<Token[]>(\"tokens/supported\", this.ctx, this.chainId);\n\n  /**\n   * Get exchange rate between two tokens.\n   * @param from\n   * @param to\n   * @returns exchange rate\n   */\n  async price(from: Address, to: Address): Promise<Integer> {\n    return this.yearn.services.oracle.getPriceFromRouter(from, to);\n  }\n\n  /**\n   * Get the suggested Usdc exchange rate for an token.\n   * @param token\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async priceUsdc<T extends Address>(token: T, overrides?: CallOverrides): Promise<Usdc>;\n\n  /**\n   * Get the suggested Usdc exchange rate for list of tokens.\n   * @param tokens\n   * @param overrides\n   * @returns Usdc exchange rate map (6 decimals)\n   */\n  async priceUsdc<T extends Address>(tokens: T[], overrides?: CallOverrides): Promise<TypedMap<T, Usdc>>;\n\n  async priceUsdc<T extends Address>(tokens: T | T[], overrides?: CallOverrides): Promise<TypedMap<T, Usdc> | Usdc> {\n    if (Array.isArray(tokens)) {\n      const entries = await Promise.all(\n        tokens.map(async token => {\n          const price = await this.yearn.services.oracle.getPriceUsdc(token, overrides);\n          return [token, price];\n        })\n      );\n      return Object.fromEntries(entries) as TypedMap<T, Usdc>;\n    }\n    return this.yearn.services.oracle.getPriceUsdc(tokens, overrides);\n  }\n\n  /**\n   * Fetch token balances from the {@link TokenInterface.supported} list\n   * for a particular address.\n   * @param address\n   */\n  async balances(address: Address): Promise<Balance[]> {\n    const vaultBalances = await this.yearn.vaults\n      .balances(address)\n      .then(balances => balances.filter(token => token.balance !== \"0\"));\n\n    if (this.chainId === 1 || this.chainId === 1337) {\n      let zapperBalances = await this.yearn.services.zapper.balances(address);\n      const vaultBalanceAddresses = new Set(vaultBalances.map(balance => balance.address));\n      zapperBalances = zapperBalances.filter(balance => !vaultBalanceAddresses.has(balance.address));\n      return zapperBalances.concat(vaultBalances);\n    }\n\n    if (this.chainId === 250 || this.chainId === 42161) {\n      let ironBankTokens = await this.yearn.ironBank.balances(address);\n      const vaultBalanceAddresses = new Set(vaultBalances.map(balance => balance.address));\n      ironBankTokens = ironBankTokens.filter(balance => !vaultBalanceAddresses.has(balance.address));\n      return ironBankTokens.concat(vaultBalances);\n    }\n\n    throw new SdkError(`the chain ${this.chainId} hasn't been implemented yet`);\n  }\n\n  /**\n   * Fetch all the tokens supported by the zapper protocol along with some basic\n   * metadata.\n   * @returns list of tokens supported by the zapper protocol.\n   */\n  async supported(): Promise<Token[]> {\n    const cached = await this.cachedFetcherSupported.fetch();\n    if (cached) {\n      return cached;\n    }\n\n    if (this.chainId === 1 || this.chainId === 1337) {\n      // only ETH Main is supported\n      const tokens = await this.yearn.services.zapper.supportedTokens();\n      const icons = await this.yearn.services.asset.ready.then(() =>\n        this.yearn.services.asset.icon(tokens.map(token => token.address))\n      );\n      return tokens.map(token => {\n        const icon = icons[token.address];\n        return icon ? { ...token, icon } : token;\n      });\n    }\n    return [];\n  }\n\n  /**\n   * Approve vault to spend a token on zapIn\n   * @param vault\n   * @param token\n   * @param amount\n   * @param account\n   * @returns transaction\n   */\n  async approve(\n    vault: Vault,\n    token: Address,\n    amount: Integer,\n    account: Address\n  ): Promise<TransactionResponse | Boolean> {\n    // If Ether is being sent, no need for approval\n    if (EthAddress === token) return true;\n\n    const signer = this.ctx.provider.write.getSigner(account);\n\n    if (vault.token === token) {\n      const tokenContract = new Contract(token, TokenAbi, signer);\n      const tx = await tokenContract.populateTransaction.approve(vault.address, amount);\n      return this.yearn.services.transaction.sendTransaction(tx);\n    }\n\n    const gasPrice = await this.yearn.services.zapper.gas();\n\n    const gasPriceFastGwei = new BigNumber(gasPrice.fast).times(new BigNumber(10 ** 9));\n\n    const zapProtocol = PickleJars.includes(vault.address) ? ZapProtocol.PICKLE : ZapProtocol.YEARN;\n\n    const zapInApprovalState = await this.yearn.services.zapper.zapInApprovalState(account, token, zapProtocol);\n\n    if (!zapInApprovalState.isApproved) {\n      const zapInApprovalParams = await this.yearn.services.zapper.zapInApprovalTransaction(\n        account,\n        token,\n        gasPriceFastGwei.toString(),\n        zapProtocol\n      );\n      const transaction: TransactionRequest = {\n        to: zapInApprovalParams.to,\n        from: zapInApprovalParams.from,\n        gasPrice: zapInApprovalParams.gasPrice,\n        data: zapInApprovalParams.data as string\n      };\n      return signer.sendTransaction(transaction);\n    }\n\n    return true;\n  }\n\n  /**\n   * Approve vault to spend a vault token on zapOut\n   * @param vault\n   * @param token\n   * @param account\n   * @returns transaction\n   */\n  async approveZapOut(vault: Vault, token: Address, account: Address): Promise<TransactionResponse | Boolean> {\n    const signer = this.ctx.provider.write.getSigner(account);\n    if (vault.token === token) {\n      const gasPrice = await this.yearn.services.zapper.gas();\n      const gasPriceFastGwei = new BigNumber(gasPrice.fast).times(new BigNumber(10 ** 9));\n\n      let sellToken = token;\n\n      const zapOutApprovalState = await this.yearn.services.zapper.zapOutApprovalState(account, sellToken);\n      if (!zapOutApprovalState.isApproved) {\n        const zapOutApprovalParams = await this.yearn.services.zapper.zapOutApprovalTransaction(\n          account,\n          sellToken,\n          gasPriceFastGwei.toString()\n        );\n        const transaction: TransactionRequest = {\n          to: zapOutApprovalParams.to,\n          from: zapOutApprovalParams.from,\n          gasPrice: zapOutApprovalParams.gasPrice,\n          data: zapOutApprovalParams.data as string\n        };\n        return signer.sendTransaction(transaction);\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get an icon url for a particular address.\n   * @param address\n   */\n  icon<T extends Address>(address: T): Icon;\n\n  /**\n   * Get a map of icons for a list of addresses.\n   * @param addresses\n   */\n\n  icon<T extends Address>(addresses: T[]): IconMap<T>;\n\n  icon<T extends Address>(address: T | T[]): IconMap<T> | Icon {\n    return this.yearn.services.asset.icon(address);\n  }\n\n  private cachedFetcher = new CachedFetcher<TokenMetadata[]>(\"tokens/metadata\", this.ctx, this.chainId);\n\n  async metadata(addresses?: Address[]): Promise<TokenMetadata[]> {\n    let result: TokenMetadata[];\n\n    const cached = await this.cachedFetcher.fetch();\n    if (cached) {\n      result = cached;\n    } else {\n      result = await this.yearn.services.meta.tokens();\n    }\n\n    if (addresses) {\n      return result.filter(metadata => addresses.includes(metadata.address));\n    } else {\n      return result;\n    }\n  }\n}\n","import { BigNumber } from \"@ethersproject/bignumber\";\nimport { CallOverrides, Contract } from \"@ethersproject/contracts\";\nimport { TransactionRequest, TransactionResponse } from \"@ethersproject/providers\";\n\nimport { CachedFetcher } from \"../cache\";\nimport { ChainId } from \"../chain\";\nimport { ServiceInterface } from \"../common\";\nimport { chunkArray, EthAddress, WethAddress } from \"../helpers\";\nimport { PickleJars } from \"../services/partners/pickle\";\nimport {\n  Address,\n  Apy,\n  Balance,\n  DepositOptions,\n  Integer,\n  SdkError,\n  Token,\n  TokenMetadata,\n  VaultDynamic,\n  VaultMetadataOverrides,\n  VaultStatic,\n  VaultsUserSummary,\n  VaultUserMetadata,\n  WithdrawOptions,\n  ZapProtocol\n} from \"../types\";\nimport { Position, Vault } from \"../types\";\n\nconst VaultAbi = [\"function deposit(uint256 amount) public\", \"function withdraw(uint256 amount) public\"];\n\nexport class VaultInterface<T extends ChainId> extends ServiceInterface<T> {\n  private cachedFetcherGet = new CachedFetcher<Vault[]>(\"vaults/get\", this.ctx, this.chainId);\n  private cachedFetcherGetDynamic = new CachedFetcher<VaultDynamic[]>(\"vaults/getDynamic\", this.ctx, this.chainId);\n  private cachedFetcherTokens = new CachedFetcher<Token[]>(\"vaults/tokens\", this.ctx, this.chainId);\n\n  /**\n   * Get all yearn vaults.\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async get(addresses?: Address[], overrides?: CallOverrides): Promise<Vault[]> {\n    const cached = await this.cachedFetcherGet.fetch();\n    if (cached) {\n      if (addresses) {\n        return cached.filter(vault => addresses.includes(vault.address));\n      } else {\n        return cached;\n      }\n    }\n\n    const vaultMetadataOverridesPromise = this.yearn.services.meta.vaults().catch(error => {\n      console.error(error);\n      return Promise.resolve([]);\n    });\n\n    const [vaultMetadataOverrides, assetsStatic] = await Promise.all([\n      vaultMetadataOverridesPromise,\n      this.getStatic(addresses, overrides)\n    ]);\n\n    let assetsDynamic: VaultDynamic[] = [];\n    try {\n      assetsDynamic = await this.getDynamic();\n    } catch {\n      const allAddresses = assetsStatic.map(asset => asset.address);\n      const chunks = chunkArray(allAddresses, 30);\n      const promises = chunks.map(async chunk => this.getDynamic(chunk, vaultMetadataOverrides, overrides));\n      assetsDynamic = await Promise.all(promises).then(chunks => chunks.flat());\n    }\n\n    const strategiesMetadataPromise = this.yearn.strategies\n      .vaultsStrategiesMetadata(assetsDynamic.map(asset => asset.address))\n      .catch(error => {\n        console.error(error);\n        return Promise.resolve([]);\n      });\n\n    let assetsHistoricEarningsPromise = this.yearn.earnings.assetsHistoricEarnings().catch(error => {\n      console.error(error);\n      return Promise.resolve([]);\n    });\n\n    const [strategiesMetadata, assetsHistoricEarnings] = await Promise.all([\n      strategiesMetadataPromise,\n      assetsHistoricEarningsPromise\n    ]);\n\n    const assetsWithOrder: { vault: Vault; order: number }[] = [];\n\n    for (const asset of assetsStatic) {\n      const dynamic = assetsDynamic.find(({ address }) => asset.address === address);\n      if (!dynamic) {\n        throw new SdkError(`Dynamic asset does not exist for ${asset.address}`);\n      }\n      const overrides = vaultMetadataOverrides.find(override => override.address === asset.address);\n      if (overrides?.hideAlways) {\n        continue;\n      }\n      const order = overrides?.order ?? Math.max();\n\n      dynamic.metadata.displayName = dynamic.metadata.displayName || asset.name;\n      dynamic.metadata.strategies = strategiesMetadata.find(metadata => metadata.vaultAddress === asset.address);\n      dynamic.metadata.historicEarnings = assetsHistoricEarnings.find(\n        earnings => earnings.assetAddress === asset.address\n      )?.dayData;\n\n      assetsWithOrder.push({ vault: { ...asset, ...dynamic }, order });\n    }\n\n    return assetsWithOrder.sort((lhs, rhs) => lhs.order - rhs.order).map(asset => asset.vault);\n  }\n\n  /**\n   * Get static part of yearn vaults.\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async getStatic(addresses?: Address[], overrides?: CallOverrides): Promise<VaultStatic[]> {\n    const adapters = Object.values(this.yearn.services.lens.adapters.vaults);\n    return await Promise.all(\n      adapters.map(async adapter => {\n        return await adapter.assetsStatic(addresses, overrides);\n      })\n    ).then(arr => arr.flat());\n  }\n\n  /**\n   * Get dynamic part of yearn vaults.\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async getDynamic(\n    addresses?: Address[],\n    vaultMetadataOverrides?: VaultMetadataOverrides[],\n    overrides?: CallOverrides\n  ): Promise<VaultDynamic[]> {\n    const cached = await this.cachedFetcherGetDynamic.fetch();\n    if (cached) {\n      return addresses ? cached.filter(vault => addresses.includes(vault.address)) : cached;\n    }\n\n    let metadataOverrides = vaultMetadataOverrides\n      ? vaultMetadataOverrides\n      : await this.yearn.services.meta.vaults().catch(error => {\n          console.error(error);\n          return Promise.resolve([]);\n        });\n\n    const adapters = Object.values(this.yearn.services.lens.adapters.vaults);\n    return await Promise.all(\n      adapters.map(async adapter => {\n        const data = await adapter.assetsDynamic(addresses, overrides);\n        const assetsApy = await this.yearn.services.vision.apy(data.map(dynamic => dynamic.address));\n        return data.map(dynamic => {\n          const overrides = metadataOverrides.find(override => override.address === dynamic.address);\n          dynamic.metadata.apy = assetsApy[dynamic.address];\n          if (dynamic.tokenId === WethAddress) {\n            const icon = this.yearn.services.asset.icon(EthAddress) ?? \"\";\n            dynamic.metadata.displayIcon = icon;\n            dynamic.metadata.displayName = \"ETH\";\n            dynamic.metadata.defaultDisplayToken = EthAddress;\n          } else {\n            const icon = this.yearn.services.asset.icon(dynamic.tokenId) ?? \"\";\n            dynamic.metadata.displayIcon = icon;\n            const alias = this.yearn.services.asset.alias(dynamic.tokenId);\n            dynamic.metadata.displayName = alias ? alias.symbol : \"\";\n            dynamic.metadata.defaultDisplayToken = dynamic.tokenId;\n          }\n          if (overrides) {\n            this.fillMetadataOverrides(dynamic, overrides);\n          }\n          return dynamic;\n        });\n      })\n    ).then(arr => arr.flat());\n  }\n\n  /**\n   * Get yearn vault positions for a particular address.\n   * @param address\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async positionsOf(address: Address, addresses?: Address[], overrides?: CallOverrides): Promise<Position[]> {\n    const adapters = Object.values(this.yearn.services.lens.adapters.vaults);\n    return await Promise.all(\n      adapters.map(async adapter => {\n        try {\n          return await adapter.positionsOf(address, addresses, overrides);\n        } catch {\n          let allAddresses: Address[];\n          if (addresses) {\n            allAddresses = addresses;\n          } else {\n            allAddresses = await this.getStatic(addresses, overrides).then(assets =>\n              assets.map(asset => asset.address)\n            );\n          }\n          const chunks = chunkArray(allAddresses, 30);\n          const promises = chunks.map(async chunk => adapter.positionsOf(address, chunk, overrides));\n          return await Promise.all(promises).then(chunks => chunks.flat());\n        }\n      })\n    ).then(arr => arr.flat());\n  }\n\n  /**\n   * Get the Vaults User Summary for a particular address.\n   * @param address\n   * @returns\n   */\n  async summaryOf(address: Address): Promise<VaultsUserSummary> {\n    const { earnings, holdings, grossApy, estimatedYearlyYield } = await this.yearn.earnings.accountAssetsData(address);\n    return { earnings, holdings, grossApy, estimatedYearlyYield };\n  }\n\n  /**\n   * Get the Vault User Metadata for a particular address.\n   * @param address\n   * @param addresses filter, if provided only those addresses' Vault User Metadata are returned\n   * @returns\n   */\n  async metadataOf(address: Address, addresses?: Address[]): Promise<VaultUserMetadata[]> {\n    const { earningsAssetData } = await this.yearn.earnings.accountAssetsData(address);\n    if (!addresses) return earningsAssetData;\n    return earningsAssetData.filter(asset => addresses.includes(asset.assetAddress));\n  }\n\n  /**\n   * Get all yearn vault's underlying token balances for a particular address.\n   * @param address\n   * @param overrides\n   * @returns\n   */\n  async balances(address: Address, overrides?: CallOverrides): Promise<Balance[]> {\n    const tokens = await this.tokens();\n    const balances = await this.yearn.services.helper.tokenBalances(\n      address,\n      tokens.map(token => token.address),\n      overrides\n    );\n    return balances.map(balance => {\n      const token = tokens.find(token => token.address === balance.address);\n      if (!token) {\n        throw new SdkError(`Token does not exist for Balance(${balance.address})`);\n      }\n      return {\n        ...balance,\n        token\n      };\n    });\n  }\n\n  /**\n   * Get all yearn vault's underlying tokens.\n   * @param overrides\n   * @returns\n   */\n  async tokens(overrides?: CallOverrides): Promise<Token[]> {\n    const cached = await this.cachedFetcherTokens.fetch();\n    if (cached) {\n      return cached;\n    }\n\n    const adapters = Object.values(this.yearn.services.lens.adapters.vaults);\n    await this.yearn.services.asset.ready;\n    return await Promise.all(\n      adapters.map(async adapter => {\n        const tokenAddresses = await adapter.tokens(overrides);\n        const icons = this.yearn.services.asset.icon(tokenAddresses.concat(EthAddress));\n        const tokensPromise = this.yearn.services.helper.tokens(tokenAddresses, overrides);\n        const tokensMetadataPromise = this.yearn.tokens.metadata(tokenAddresses);\n\n        const [tokens, tokensMetadata] = await Promise.all([tokensPromise, tokensMetadataPromise]);\n\n        return Promise.all(\n          tokens.map(async token => {\n            const tokenMetadata = tokensMetadata.find(metadata => metadata.address === token.address);\n            const result: Token = {\n              ...token,\n              icon: icons[token.address],\n              supported: {},\n              priceUsdc: await this.yearn.services.oracle.getPriceUsdc(token.address, overrides),\n              metadata: tokenMetadata\n            };\n            const symbolOverride = this.yearn.services.asset.alias(token.address)?.symbol;\n            if (symbolOverride) {\n              result.symbol = symbolOverride;\n            }\n            if (tokenMetadata) {\n              this.fillTokenMetadataOverrides(result, tokenMetadata);\n            }\n            return result;\n          })\n        );\n      })\n    ).then(arr => arr.flat());\n  }\n\n  /**\n   * Deposit into a yearn vault\n   * @param vault\n   * @param token\n   * @param amount\n   * @param account\n   * @param overrides\n   * @returns transaction\n   */\n  async deposit(\n    vault: Address,\n    token: Address,\n    amount: Integer,\n    account: Address,\n    options: DepositOptions = {},\n    overrides: CallOverrides = {}\n  ): Promise<TransactionResponse> {\n    const signer = this.ctx.provider.write.getSigner(account);\n    const isZappingIntoPickleJar = PickleJars.includes(vault);\n\n    if (isZappingIntoPickleJar) {\n      return this.zapIn(vault, token, amount, account, options, ZapProtocol.PICKLE, overrides);\n    }\n\n    const [vaultRef] = await this.getStatic([vault], overrides);\n    if (vaultRef.token === token) {\n      if (token === EthAddress) {\n        throw new SdkError(\"deposit:v2:eth not implemented\");\n      } else {\n        const vaultContract = new Contract(vault, VaultAbi, signer);\n        const makeTransaction = async (overrides: CallOverrides) => {\n          const tx = await vaultContract.populateTransaction.deposit(amount, overrides);\n          return this.yearn.services.transaction.sendTransaction(tx);\n        };\n        return this.executeVaultContractTransaction(makeTransaction, overrides);\n      }\n    } else {\n      return this.zapIn(vault, token, amount, account, options, ZapProtocol.YEARN, overrides);\n    }\n  }\n\n  /**\n   * Withdraw from a yearn vault.\n   * @param vault\n   * @param token\n   * @param amount\n   * @param account\n   * @param overrides\n   * @returns transaction\n   */\n  async withdraw(\n    vault: Address,\n    token: Address,\n    amount: Integer,\n    account: Address,\n    options: WithdrawOptions = {},\n    overrides: CallOverrides = {}\n  ): Promise<TransactionResponse> {\n    const [vaultRef] = await this.getStatic([vault], overrides);\n    const signer = this.ctx.provider.write.getSigner(account);\n    if (vaultRef.token === token) {\n      const vaultContract = new Contract(vault, VaultAbi, signer);\n      const makeTransaction = async (overrides: CallOverrides) => {\n        const tx = await vaultContract.populateTransaction.withdraw(amount, overrides);\n        return this.yearn.services.transaction.sendTransaction(tx);\n      };\n      return this.executeVaultContractTransaction(makeTransaction, overrides);\n    } else {\n      if (options.slippage === undefined) {\n        throw new SdkError(\"zap operations should have a slippage set\");\n      }\n\n      const zapOutParams = await this.yearn.services.zapper.zapOut(\n        account,\n        token,\n        amount,\n        vault,\n        \"0\",\n        options.slippage,\n        false,\n        undefined,\n        options.signature\n      );\n\n      const transactionRequest: TransactionRequest = {\n        to: zapOutParams.to,\n        from: zapOutParams.from,\n        gasPrice: BigNumber.from(zapOutParams.gasPrice),\n        gasLimit: BigNumber.from(zapOutParams.gas),\n        data: zapOutParams.data,\n        value: BigNumber.from(zapOutParams.value)\n      };\n\n      return this.executeZapperTransaction(transactionRequest, overrides, BigNumber.from(zapOutParams.gasPrice));\n    }\n  }\n\n  private async zapIn(\n    vault: Address,\n    token: Address,\n    amount: Integer,\n    account: Address,\n    options: DepositOptions = {},\n    zapProtocol: ZapProtocol = ZapProtocol.YEARN,\n    overrides: CallOverrides = {}\n  ): Promise<TransactionResponse> {\n    if (options.slippage === undefined) {\n      throw new SdkError(\"zap operations should have a slippage set\");\n    }\n\n    const zapInParams = await this.yearn.services.zapper.zapIn(\n      account,\n      token,\n      amount,\n      vault,\n      \"0\",\n      options.slippage,\n      false,\n      zapProtocol\n    );\n\n    const transactionRequest: TransactionRequest = {\n      to: zapInParams.to,\n      from: zapInParams.from,\n      data: zapInParams.data,\n      value: BigNumber.from(zapInParams.value),\n      gasLimit: BigNumber.from(zapInParams.gas)\n    };\n\n    return this.executeZapperTransaction(transactionRequest, overrides, BigNumber.from(zapInParams.gasPrice));\n  }\n\n  private async executeZapperTransaction(\n    transactionRequest: TransactionRequest,\n    overrides: CallOverrides,\n    fallbackGasPrice: BigNumber\n  ): Promise<TransactionResponse> {\n    try {\n      const combinedParams = { ...transactionRequest, ...overrides };\n      combinedParams.gasPrice = undefined;\n      return await this.yearn.services.transaction.sendTransaction(combinedParams);\n    } catch (error) {\n      if ((error as any).code === -32602) {\n        const combinedParams = { ...transactionRequest, ...overrides };\n        combinedParams.maxFeePerGas = undefined;\n        combinedParams.maxPriorityFeePerGas = undefined;\n        combinedParams.gasPrice = overrides.gasPrice || fallbackGasPrice;\n        return await this.yearn.services.transaction.sendTransaction(combinedParams);\n      }\n\n      throw error;\n    }\n  }\n\n  private async executeVaultContractTransaction(\n    makeTransaction: (overrides: CallOverrides) => Promise<TransactionResponse>,\n    overrides: CallOverrides\n  ): Promise<TransactionResponse> {\n    const originalGasPrice = overrides.gasPrice;\n    try {\n      overrides.gasPrice = undefined;\n      const tx = await makeTransaction(overrides);\n      return tx;\n    } catch (error) {\n      if ((error as any).code === -32602) {\n        overrides.maxFeePerGas = undefined;\n        overrides.maxPriorityFeePerGas = undefined;\n        overrides.gasPrice = originalGasPrice;\n        const tx = await makeTransaction(overrides);\n        return tx;\n      }\n\n      throw error;\n    }\n  }\n\n  private fillTokenMetadataOverrides(token: Token, overrides: TokenMetadata) {\n    if (overrides.tokenIconOverride) {\n      token.icon = overrides.tokenIconOverride;\n    }\n    if (overrides.tokenSymbolOverride) {\n      token.symbol = overrides.tokenSymbolOverride;\n    }\n    if (overrides.tokenNameOverride) {\n      token.name = overrides.tokenNameOverride;\n    }\n  }\n\n  private fillMetadataOverrides(dynamic: VaultDynamic, overrides: VaultMetadataOverrides) {\n    if (overrides.displayName) {\n      dynamic.metadata.displayName = overrides.displayName;\n    }\n    if (overrides.vaultSymbolOverride) {\n      dynamic.metadata.symbol = overrides.vaultSymbolOverride;\n    }\n    if (overrides.vaultIconOverride) {\n      dynamic.metadata.displayIcon = overrides.vaultIconOverride;\n    }\n    if (overrides.apyTypeOverride) {\n      if (!dynamic.metadata.apy) {\n        dynamic.metadata.apy = this.makeEmptyApy();\n      }\n      dynamic.metadata.apy.type = overrides.apyTypeOverride;\n    }\n    if (overrides.apyOverride) {\n      if (!dynamic.metadata.apy) {\n        dynamic.metadata.apy = this.makeEmptyApy();\n      }\n      dynamic.metadata.apy.net_apy = overrides.apyOverride;\n      dynamic.metadata.apy.type = \"override\";\n    }\n\n    dynamic.metadata.depositsDisabled = overrides.depositsDisabled;\n    dynamic.metadata.withdrawalsDisabled = overrides.withdrawalsDisabled;\n    dynamic.metadata.allowZapIn = overrides.allowZapIn;\n    dynamic.metadata.allowZapOut = overrides.allowZapOut;\n    dynamic.metadata.migrationContract = overrides.migrationContract;\n    dynamic.metadata.migrationTargetVault = overrides.migrationTargetVault;\n    dynamic.metadata.vaultNameOverride = overrides.vaultNameOverride;\n    dynamic.metadata.vaultDetailPageAssets = overrides.vaultDetailPageAssets;\n\n    dynamic.metadata.hideIfNoDeposits =\n      dynamic.metadata.emergencyShutdown || overrides.retired || overrides.migrationAvailable || false;\n    dynamic.metadata.migrationAvailable = dynamic.metadata.migrationAvailable || overrides.migrationAvailable || false;\n  }\n\n  private makeEmptyApy(): Apy {\n    const apy: Apy = {\n      type: \"manual_override\",\n      gross_apr: 0,\n      net_apy: 0,\n      fees: { performance: null, withdrawal: null, management: null, keep_crv: null, cvx_keep_crv: null },\n      points: null,\n      composite: null\n    };\n    return apy;\n  }\n}\n","/**\n * Storing ABIs in Human-Readable ABI format.\n * https://blog.ricmoo.com/human-readable-contract-abis-in-ethers-js-141902f4d917\n */\n\nexport const TokenAbi = \"tuple(address address, string name, string symbol, uint256 decimals)\";\nexport const TokenPriceAbi = \"tuple(address address, uint256 priceUsdc)\";\nexport const TokenBalanceAbi = `tuple(\n  address address, \n  uint256 priceUsdc, \n  uint256 balance,\n  uint256 balanceUsdc\n)`;\nexport const AllowanceAbi = \"tuple(address owner, address spender, uint256 amount, address token)\";\n\nexport const AssetStaticAbi = `tuple(\n  address address,\n  string typeId,\n  address token,\n  string name,\n  string version,\n  string symbol,\n  uint8 decimals,\n)`;\n\nexport const AssetDynamicAbi = (Metadata: string) => `tuple(\n  address address, \n  string typeId,\n  address tokenId,\n  tuple(uint256 amount, uint256 amountUsdc) underlyingTokenBalance,\n  ${Metadata} metadata\n)`;\n\nexport const PositionAbi =\n  \"tuple(address assetAddress, address tokenAddress, string typeId, uint256 balance,\" +\n  \"tuple(uint256 amount, uint256 amountUsdc) underlyingTokenBalance,\" +\n  \"tuple(address owner, address spender, uint256 amount)[] tokenAllowances,\" +\n  \"tuple(address owner, address spender, uint256 amount)[] assetAllowances)\";\n\nexport const AdapterAbi = (Metadata: string) => [\n  `function assetsStatic() public view returns (${AssetStaticAbi}[] memory)`,\n  `function assetsStatic(address[] memory) public view returns (${AssetStaticAbi}[] memory)`,\n  `function assetsDynamic() public view returns (${AssetDynamicAbi(Metadata)}[] memory)`,\n  `function assetsDynamic(address[] memory) public view returns (${AssetDynamicAbi(Metadata)}[] memory)`,\n  `function assetsPositionsOf(address) public view returns (${PositionAbi}[] memory)`,\n  `function assetsPositionsOf(address, address[] memory) public view returns (${PositionAbi}[] memory)`,\n  `function assetsTokensAddresses() public view returns (address[] memory)`\n];\n","/**\n * Utility functions to convert raw structures returned from ethers to plain\n * javascript objects.\n *\n * eg.\n *\n * ```javascript\n * [\n *   1,\n *   \"hello\"\n *   \"a\": 1,\n *   \"b\": \"hello\"\n * ]\n * ```\n *\n * to\n *\n * ```javascript\n * {\n *   \"a\": 1,\n *   \"b\": \"hello\"\n * }\n * ```\n */\n\nimport { isBigNumberish } from \"@ethersproject/bignumber/lib/bignumber\";\n\n// convert tuples\nexport function struct(tuple: any): any {\n  if (typeof tuple !== \"object\") return tuple;\n  const keys = Object.keys(tuple);\n\n  // check if tuple is actually an array\n  // [1, 2, 3] => array vs [1, 2, 3, \"a\": 1, \"b\": 2, \"c\": 3] => object\n  // NOTE: [] are not picked up as array (see *)\n  const properties = keys.filter(key => isNaN(Number(key)));\n  if (properties.length === 0) return structArray(tuple);\n\n  const copy: Record<string, unknown> = {};\n\n  properties.forEach((property: string) => {\n    const value = tuple[property];\n    if (typeof value === \"object\" && !isBigNumberish(value)) {\n      // recursive!\n      copy[property] = struct(value);\n    } else if (Array.isArray(value)) {\n      // (*) all empty arrays are picked up here\n      copy[property] = value;\n    } else if (isBigNumberish(value)) {\n      // all BigNumbers are converted to strings\n      copy[property] = value.toString();\n    } else {\n      copy[property] = value;\n    }\n  });\n\n  return copy;\n}\n\n// convert arrays\nexport function structArray(tuples: any[]): any[] {\n  return tuples.map(tuple => struct(tuple));\n}\n","import { BigNumber as EthersBigNumber } from \"@ethersproject/bignumber\";\nimport { CallOverrides } from \"@ethersproject/contracts\";\nimport { BigNumber } from \"bignumber.js\";\n\nimport { AdapterAbi } from \"../../abi\";\nimport { ChainId } from \"../../chain\";\nimport { ContractService } from \"../../common\";\nimport { Context } from \"../../context\";\nimport { struct, structArray } from \"../../struct\";\nimport {\n  Address,\n  CyTokenUserMetadata,\n  Integer,\n  IronBankMarketDynamic,\n  IronBankMarketStatic,\n  IronBankUserSummary,\n  Position\n} from \"../../types\";\n\nconst CyTokenMetadataAbi = `tuple(\n  uint256 totalSuppliedUsdc,\n  uint256 totalBorrowedUsdc,\n  uint256 lendAprBips,\n  uint256 borrowAprBips,\n  uint256 liquidity,\n  uint256 liquidityUsdc,\n  uint256 totalCollateralTokens,\n  uint256 collateralFactor,\n  uint256 collateralCap,\n  bool isActive,\n  uint256 reserveFactor,\n  uint256 exchangeRate\n)`;\n\nconst CyTokenUserMetadataAbi = `tuple(\n  address assetAddress,\n  bool enteredMarket,\n  uint256 supplyBalanceUsdc,\n  uint256 borrowBalanceUsdc,\n  uint256 collateralBalanceUsdc,\n  uint256 borrowLimitUsdc\n)`;\n\nconst IronBankUserSummaryAbi = `tuple(\n  uint256 supplyBalanceUsdc,\n  uint256 borrowBalanceUsdc,\n  uint256 borrowLimitUsdc,\n  uint256 utilizationRatioBips\n)`;\n\nconst CustomAbi = [\n  `function adapterPositionOf(address) external view returns (${IronBankUserSummaryAbi} memory)`,\n  `function assetsUserMetadata(address) public view returns (${CyTokenUserMetadataAbi}[] memory)`,\n  `function blocksPerYear() public view returns (uint256)`\n];\n\nexport class IronBankAdapter<T extends ChainId> extends ContractService<T> {\n  static abi = AdapterAbi(CyTokenMetadataAbi).concat(CustomAbi);\n\n  constructor(chainId: T, ctx: Context) {\n    super(ctx.addresses.adapters.ironBank ?? IronBankAdapter.addressByChain(chainId), chainId, ctx);\n  }\n\n  /**\n   * Get most up-to-date address of the IronBank adapter contract for a\n   * particular chain id.\n   * @param chainId\n   * @returns address\n   */\n  static addressByChain(chainId: ChainId): string {\n    switch (chainId) {\n      case 1:\n      case 1337:\n        return \"0x5D03ad44F4Fce73407C73A1779295011691D2e1F\";\n      case 250:\n        return \"0xC31E8C238287448f0d0CCF65df40424eeF429940\";\n      case 42161:\n        return \"0x7AAd416eB4e16a27b85e7076dD56742A44E9d25B\";\n    }\n  }\n\n  /**\n   * Get the static part of IronBank assets.\n   * @param addresses filter, if not provided all assets are returned\n   * @param overrides\n   * @returns static\n   */\n  async assetsStatic(addresses?: Address[], overrides: CallOverrides = {}): Promise<IronBankMarketStatic[]> {\n    if (addresses) {\n      return await this.contract.read[\"assetsStatic(address[])\"](addresses, overrides).then(structArray);\n    }\n    return await this.contract.read[\"assetsStatic()\"](overrides).then(structArray);\n  }\n\n  /**\n   * Get the dynamic part of IronBank assets.\n   * @param addresses filter, if not provided all assets are returned\n   * @param overrides\n   * @returns dynamic\n   */\n  async assetsDynamic(addresses?: Address[], overrides: CallOverrides = {}): Promise<IronBankMarketDynamic[]> {\n    const assetsPromise: Promise<IronBankMarketDynamic[]> = addresses\n      ? this.contract.read[\"assetsDynamic(address[])\"](addresses, overrides).then(structArray)\n      : this.contract.read[\"assetsDynamic()\"](overrides).then(structArray);\n\n    const [assets, blocksPerYear] = await Promise.all([assetsPromise, this.blocksPerYear()]);\n    for (const asset of assets) {\n      asset.metadata.lendApyBips = this.aprBipsToApyBips(asset.metadata.lendAprBips, blocksPerYear);\n      asset.metadata.borrowApyBips = this.aprBipsToApyBips(asset.metadata.borrowAprBips, blocksPerYear);\n    }\n    return assets;\n  }\n\n  /**\n   * Get all IronBankMarket asset positions for a particular address.\n   * @param address\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n  async positionsOf(address: Address, addresses?: Address[], overrides: CallOverrides = {}): Promise<Position[]> {\n    if (addresses) {\n      return await this.contract.read[\"assetsPositionsOf(address,address[])\"](address, addresses, overrides).then(\n        structArray\n      );\n    }\n    return await this.contract.read[\"assetsPositionsOf(address)\"](address, overrides).then(structArray);\n  }\n\n  /**\n   * Get the IronBank Position for a particular address.\n   * @param address\n   * @param overrides\n   * @returns\n   */\n  async generalPositionOf(address: Address, overrides: CallOverrides = {}): Promise<IronBankUserSummary> {\n    return await this.contract.read.adapterPositionOf(address, overrides).then(struct);\n  }\n\n  /**\n   * Get the IronBank User Metadata for a particular address.\n   * @param address\n   * @param overrides\n   * @returns\n   */\n  async assetsUserMetadata(\n    address: Address,\n    addresses?: Address[],\n    overrides: CallOverrides = {}\n  ): Promise<CyTokenUserMetadata[]> {\n    if (addresses) {\n      return await this.contract.read[\"assetsUserMetadata(address,address[])\"](address, addresses, overrides).then(\n        structArray\n      );\n    }\n    return await this.contract.read[\"assetsUserMetadata(address)\"](address, overrides).then(structArray);\n  }\n\n  /**\n   * Get all IronBank underlying token addresses.\n   * @param overrides\n   * @returns\n   */\n  async tokens(overrides: CallOverrides = {}): Promise<Address[]> {\n    return await this.contract.read.assetsTokensAddresses(overrides);\n  }\n\n  async blocksPerYear(overrides: CallOverrides = {}): Promise<Integer> {\n    const blocks: EthersBigNumber = await this.contract.read[\"blocksPerYear\"](overrides);\n    return blocks.toString();\n  }\n\n  private aprBipsToApyBips(aprBips: Integer, period: Integer): Integer {\n    const bn = BigNumber.clone({ POW_PRECISION: 6 });\n    const apy = new bn(aprBips)\n      .div(new bn(10).pow(4))\n      .div(period)\n      .plus(1)\n      .pow(period)\n      .minus(1)\n      .multipliedBy(new bn(10).pow(4))\n      .toFixed(0);\n\n    return apy;\n  }\n}\n","import { CallOverrides } from \"@ethersproject/contracts\";\n\nimport { AdapterAbi } from \"../../abi\";\nimport { ChainId } from \"../../chain\";\nimport { ContractService } from \"../../common\";\nimport { Context } from \"../../context\";\nimport { ZeroAddress } from \"../../helpers\";\nimport { structArray } from \"../../struct\";\nimport { Address, Position, VaultDynamic, VaultStatic } from \"../../types\";\n\nexport interface IRegistryAdapter {\n  assetsStatic(addresses?: Address[], overrides?: CallOverrides): Promise<VaultStatic[]>;\n  assetsDynamic(addresses?: Address[], overrides?: CallOverrides): Promise<VaultDynamic[]>;\n  positionsOf(address: Address, addresses?: Address[], overrides?: CallOverrides): Promise<Position[]>;\n  tokens(overrides?: CallOverrides): Promise<Address[]>;\n}\n\nconst VaultV2MetadataAbi = `tuple(\n  uint256 pricePerShare,\n  bool migrationAvailable,\n  address latestVaultAddress,\n  uint256 depositLimit,\n  bool emergencyShutdown\n)`;\n\nexport class RegistryV2Adapter<T extends ChainId> extends ContractService<T> implements IRegistryAdapter {\n  static abi = AdapterAbi(VaultV2MetadataAbi);\n\n  constructor(chainId: T, ctx: Context) {\n    super(ctx.addresses.adapters.registryV2 ?? RegistryV2Adapter.addressByChain(chainId), chainId, ctx);\n  }\n\n  /**\n   * Get most up-to-date address of the Vault V2 adapter contract for a\n   * particular chain id.\n   * @param chainId\n   * @returns address\n   */\n  static addressByChain(chainId: ChainId): string {\n    switch (chainId) {\n      case 1:\n      case 1337:\n        return \"0x240315db938d44bb124ae619f5fd0269a02d1271\";\n      case 250:\n        return \"0xF628Fb7436fFC382e2af8E63DD7ccbaa142E3cd1\";\n      case 42161:\n        return \"0x57AA88A0810dfe3f9b71a9b179Dd8bF5F956C46A\";\n    }\n  }\n\n  /**\n   * Get the static part of Vault assets.\n   * @param addresses filter, if not provided all assets are returned\n   * @param overrides\n   * @returns static\n   */\n  async assetsStatic(addresses?: Address[], overrides: CallOverrides = {}): Promise<VaultStatic[]> {\n    if (addresses) {\n      return await this.contract.read[\"assetsStatic(address[])\"](addresses, overrides).then(structArray);\n    }\n    return await this.contract.read[\"assetsStatic()\"]().then(structArray);\n  }\n\n  /**\n   * Get the dynamic part of Vault assets.\n   * @param addresses filter, if not provided all assets are returned\n   * @param overrides\n   * @returns dynamic\n   */\n  async assetsDynamic(addresses?: Address[], overrides: CallOverrides = {}): Promise<VaultDynamic[]> {\n    if (addresses) {\n      return await this.contract.read[\"assetsDynamic(address[])\"](addresses, overrides)\n        .then(structArray)\n        .then((assets: any) =>\n          assets.map((asset: any) => ({\n            ...asset,\n            metadata: {\n              controller: ZeroAddress,\n              totalAssets: \"0\",\n              totalSupply: \"0\",\n              ...asset.metadata\n            }\n          }))\n        );\n    }\n    return await this.contract.read[\"assetsDynamic()\"]()\n      .then(structArray)\n      .then((assets: any) =>\n        assets.map((asset: any) => {\n          return {\n            ...asset,\n            metadata: {\n              controller: ZeroAddress,\n              totalAssets: \"0\",\n              totalSupply: \"0\",\n              ...asset.metadata\n            }\n          };\n        })\n      );\n  }\n\n  /**\n   * Get all Vault asset positions for a particular address.\n   * @param address\n   * @param addresses filter, if not provided all positions are returned\n   * @param overrides\n   * @returns\n   */\n\n  async positionsOf(address: Address, addresses?: Address[], overrides: CallOverrides = {}): Promise<Position[]> {\n    if (addresses) {\n      return await this.contract.read[\"assetsPositionsOf(address,address[])\"](address, addresses, overrides).then(\n        structArray\n      );\n    }\n    return await this.contract.read[\"assetsPositionsOf(address)\"](address, overrides).then(structArray);\n  }\n\n  /**\n   * Get all Vault underlying token addresses.\n   * @param overrides\n   * @returns\n   */\n  async tokens(overrides: CallOverrides = {}): Promise<Address[]> {\n    return await this.contract.read.assetsTokensAddresses(overrides);\n  }\n}\n","import fetch from \"cross-fetch\";\n\nimport { ChainId } from \"../chain\";\nimport { Service } from \"../common\";\nimport { Context } from \"../context\";\nimport { handleHttpError, WethAddress } from \"../helpers\";\nimport { Address, Alias, AliasMap, AssetServiceState, Icon, IconMap } from \"../types\";\n\nconst YearnAliases = \"https://raw.githubusercontent.com/yearn/yearn-assets/master/icons/aliases.json\";\nconst YearnAssets = (chainId: ChainId) =>\n  `https://api.github.com/repos/yearn/yearn-assets/contents/icons/multichain-tokens/${chainId}`;\nconst TrustAssets = \"https://raw.githack.com/trustwallet/assets/master/blockchains/ethereum/tokenlist.json\";\n\nconst YearnAsset = (address: Address, chainId: ChainId) =>\n  `https://raw.githack.com/yearn/yearn-assets/master/icons/multichain-tokens/${chainId}/${address}/logo-128.png`;\nconst YearnAssetAlt = (address: Address, chainId: ChainId) =>\n  `https://raw.githack.com/yearn/yearn-assets/master/icons/multichain-tokens/${chainId}/${address}/logo-alt-128.png`;\nconst TrustAsset = (address: Address) =>\n  `https://raw.githack.com/trustwallet/assets/master/blockchains/ethereum/assets/${address}/logo.png`;\n\n/**\n * [[AssetService]] fetches correct icons & aliases related to eth addresses\n * from trusted asset sources\n */\nexport class AssetService extends Service {\n  static deserializeState(data: string): AssetServiceState {\n    const obj = JSON.parse(data);\n    const supported = new Map<Address, string>(JSON.parse(obj.supported));\n    const aliases = new Map<Address, Alias>(JSON.parse(obj.aliases));\n    return { supported, aliases };\n  }\n\n  ready: Promise<void>;\n  supported: Map<Address, string>;\n  aliases: Map<Address, Alias>;\n\n  private alts = [WethAddress];\n\n  constructor(chainId: ChainId, ctx: Context, state?: AssetServiceState) {\n    super(chainId, ctx);\n    if (state) {\n      this.supported = state.supported;\n      this.aliases = state.aliases;\n      this.ready = Promise.resolve();\n    } else {\n      this.supported = new Map();\n      this.aliases = new Map();\n      this.ready = this.initialize();\n    }\n  }\n\n  async makeSerializedState(): Promise<string> {\n    await this.ready;\n    const supportedJson = JSON.stringify(Array.from(this.supported.entries()));\n    const aliasesJson = JSON.stringify(Array.from(this.aliases.entries()));\n    return JSON.stringify({ supported: supportedJson, aliases: aliasesJson });\n  }\n\n  private async initialize(): Promise<void> {\n    if (this.chainId === 1 || this.chainId === 1337) {\n      const aliases: Alias[] = await fetch(YearnAliases)\n        .then(handleHttpError)\n        .then(res => res.json())\n        .catch(error => {\n          console.error(error);\n          return [];\n        });\n\n      for (const alias of aliases) {\n        this.aliases.set(alias.address, alias);\n      }\n\n      const trust = await fetch(TrustAssets)\n        .then(handleHttpError)\n        .then(res => res.json())\n        .then(res => res.tokens)\n        .catch(error => {\n          console.error(error);\n          return [];\n        });\n\n      for (const token of trust) {\n        this.supported.set(token.address, TrustAsset(token.address));\n      }\n    }\n\n    const yearn = await fetch(YearnAssets(this.chainId))\n      .then(handleHttpError)\n      .then(res => res.json())\n      .catch(error => {\n        console.error(error);\n        return [];\n      });\n\n    for (const token of yearn) {\n      this.supported.set(token.name, YearnAsset(token.name, this.chainId));\n      if (this.alts.includes(token.name)) {\n        this.supported.set(token.name, YearnAssetAlt(token.name, this.chainId));\n      } else {\n        this.supported.set(token.name, YearnAsset(token.name, this.chainId));\n      }\n    }\n  }\n\n  /**\n   * Get an icon url for a particular address.\n   * @param address\n   */\n  icon<T extends Address>(address: T): Icon;\n\n  /**\n   * Get a map of icons for a list of addresses.\n   * @param addresses\n   */\n  icon<T extends Address>(addresses: T[]): IconMap<T>;\n\n  icon<T extends Address>(address: T | T[]): IconMap<T> | Icon;\n  icon<T extends Address>(address: T | T[]): IconMap<T> | Icon {\n    if (!Array.isArray(address)) {\n      return this.supported.get(address);\n    }\n    return Object.fromEntries(address.map(address => [address, this.supported.get(address)])) as IconMap<T>;\n  }\n\n  /**\n   * Get an alias for a particular address.\n   * @param address\n   */\n  alias<T extends Address>(address: T): Alias | undefined;\n\n  /**\n   * Get a map of aliases for a list of addresses.\n   * @param addresses\n   */\n  alias<T extends Address>(addresses: T[]): AliasMap<T>;\n\n  alias<T extends Address>(address: T | T[]): AliasMap<T> | Alias | undefined;\n  alias<T extends Address>(address: T | T[]): AliasMap<T> | Alias | undefined {\n    if (!Array.isArray(address)) {\n      return this.aliases.get(address);\n    }\n    return Object.fromEntries(address.map(address => [address, this.aliases.get(address)])) as AliasMap<T>;\n  }\n}\n","import { CallOverrides } from \"@ethersproject/contracts\";\n\nimport { ChainId } from \"../chain\";\nimport { ContractService } from \"../common\";\nimport { Context } from \"../context\";\nimport { structArray } from \"../struct\";\nimport { Address, GenericAsset, Position } from \"../types\";\nimport { IronBankAdapter } from \"./adapters/ironbank\";\nimport { IRegistryAdapter, RegistryV2Adapter } from \"./adapters/registry\";\n\nexport const LensAbi = [\"function getRegistries() external view returns (address[] memory)\"];\n\nexport type Adapters<T extends ChainId> = {\n  vaults: {\n    v1: IRegistryAdapter;\n    v2: RegistryV2Adapter<T>;\n  };\n  ironBank: IronBankAdapter<T>;\n};\n\n/**\n * [[LensService]] provides access to all yearn's assets and user positions.\n * It's implemented in the form of a contract that lives on all networks\n * supported by yearn.\n */\nexport class LensService<T extends ChainId> extends ContractService<T> {\n  static abi = LensAbi;\n\n  constructor(chainId: T, ctx: Context) {\n    super(ctx.addresses.lens ?? LensService.addressByChain(chainId), chainId, ctx);\n  }\n\n  get adapters(): Adapters<T> {\n    return {\n      vaults: {\n        v2: new RegistryV2Adapter(this.chainId, this.ctx)\n      },\n      ironBank: new IronBankAdapter(this.chainId, this.ctx)\n    } as Adapters<T>;\n  }\n\n  /**\n   * Get most up-to-date address of the Lens contract for a particular chain id.\n   * @param chainId\n   * @returns address\n   */\n  static addressByChain(chainId: ChainId): string {\n    switch (chainId) {\n      case 1: // FIXME: doesn't actually exist\n      case 250: // ditto\n      case 1337: // ditto\n      case 42161: // ditto\n        return \"0xFa58130BE296EDFA23C42a1d15549fA91449F979\";\n    }\n  }\n\n  /**\n   * Get all the adapter addresses attached to Lens.\n   * @param overrides\n   * @returns list of registry addresses\n   */\n  async getAdapters(overrides: CallOverrides = {}): Promise<string[]> {\n    return await this.contract.read.getRegistries(overrides);\n  }\n\n  /**\n   * Get all the assets from all the adapters attached to Lens.\n   * @param overrides\n   * @returns list of assets\n   */\n  async getAssets(overrides: CallOverrides = {}): Promise<GenericAsset[]> {\n    return await this.contract.read.getAssets(overrides).then(structArray);\n  }\n\n  /**\n   * Get all positions of a particular assets for all the assets in all the\n   * adapters attached to lens.\n   * @param address\n   * @param overrides\n   * @returns list of user positions\n   */\n  async getPositions(address: string, overrides: CallOverrides = {}): Promise<Position[]> {\n    return await this.contract.read.getPositionsOf(address, overrides).then(structArray);\n  }\n\n  /**\n   * Get all the assets from a specific Lens adapter.\n   * @param adapter\n   * @param overrides\n   * @returns list of assets\n   */\n  async getAssetsFromAdapter(adapter: Address, overrides: CallOverrides = {}): Promise<GenericAsset[]> {\n    return await this.contract.read.getAssetsFromAdapter(adapter, overrides).then(structArray);\n  }\n}\n","import { CallOverrides } from \"@ethersproject/contracts\";\n\nimport { ChainId } from \"../chain\";\nimport { ContractService } from \"../common\";\nimport { Context } from \"../context\";\nimport { int } from \"../helpers\";\nimport { Address, Integer, Usdc } from \"../types\";\n\nexport const OracleAbi = [\n  // Oracle general\n  \"function calculations() external view returns (address[] memory)\",\n  \"function getPriceUsdcRecommended(address) public view returns (uint256)\",\n  \"function usdcAddress() public view returns (address)\",\n  \"function getNormalizedValueUsdc(address,uint256) view returns (uint256)\",\n  // Calculations Curve\n  \"function isCurveLpToken(address) public view returns (bool)\",\n  \"function getCurvePriceUsdc(address) public view returns (uint256)\",\n  \"function getBasePrice(address) public view returns (uint256)\",\n  \"function getVirtualPrice(address) public view returns (uint256)\",\n  \"function curveRegistryAddress() public view returns (address)\",\n  // Calculations Iron Bank\n  \"function isIronBankMarket(address) public view returns (bool)\",\n  \"function getIronBankMarketPriceUsdc(address) public view returns (uint256)\",\n  \"function getIronBankMarkets() public view returns (address[] memory)\",\n  // Calculations Sushiswap\n  \"function isLpToken(address) public view returns (bool)\",\n  \"function getPriceFromRouter(address, address) public view returns (uint256)\",\n  \"function getPriceFromRouterUsdc(address) public view returns (uint256)\",\n  \"function getLpTokenTotalLiquidityUsdc(address) public view returns (uint256)\",\n  \"function getLpTokenPriceUsdc(address) public view returns (uint256)\"\n];\n\n/**\n * [[OracleService]] is the main pricing engine, used by all price calculations.\n * It's implemented in the form of a contract that lives on all networks\n * supported by yearn.\n */\nexport class OracleService<T extends ChainId> extends ContractService<T> {\n  static abi = OracleAbi;\n\n  constructor(chainId: T, ctx: Context) {\n    super(ctx.addresses.oracle ?? OracleService.addressByChain(chainId), chainId, ctx);\n  }\n\n  /**\n   * Get most up-to-date address of the Oracle contract for a particular chain\n   * id.\n   * @param chainId\n   * @returns address\n   */\n  static addressByChain(chainId: ChainId): string {\n    switch (chainId) {\n      case 1:\n      case 1337:\n        return \"0x83d95e0D5f402511dB06817Aff3f9eA88224B030\";\n      case 250:\n        return \"0x57AA88A0810dfe3f9b71a9b179Dd8bF5F956C46A\";\n      case 42161:\n        return \"0x043518AB266485dC085a1DB095B8d9C2Fc78E9b9\";\n    }\n  }\n\n  /**\n   * Fetch all the active Oracle calculations.\n   * @param overrides\n   * @returns list of calculations contract addresses\n   */\n  async getCalculations(overrides: CallOverrides = {}): Promise<Address[]> {\n    return await this.contract.read.calculations(overrides);\n  }\n\n  /**\n   * Get the suggested Usdc exchange rate for an token.\n   * @param token\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async getPriceUsdc(token: Address, overrides: CallOverrides = {}): Promise<Usdc> {\n    return await this.contract.read.getPriceUsdcRecommended(token, overrides).then(int);\n  }\n\n  /**\n   * Get the normalized Usdc value for the token and corresponding quantity.\n   * @param token\n   * @param amount\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async getNormalizedValueUsdc(token: Address, amount: Integer, overrides: CallOverrides = {}): Promise<Usdc> {\n    return await this.contract.read.getNormalizedValueUsdc(token, amount, overrides).then(int);\n  }\n\n  /**\n   * Get the token address that lens considers Usdc.\n   * @param overrides\n   * @returns address\n   */\n  async getUsdcAddress(overrides: CallOverrides = {}): Promise<Address> {\n    return await this.contract.read.usdcAddress(overrides);\n  }\n\n  // Calculations Curve\n\n  /**\n   * Test if a token address is a curve liquidity provider token.\n   * @param lpToken\n   * @param overrides\n   * @returns test result\n   */\n  async isCurveLpToken(lpToken: Address, overrides: CallOverrides = {}): Promise<boolean> {\n    return await this.contract.read.isCurveLpToken(lpToken, overrides);\n  }\n\n  /**\n   * Get Usdc exchange rate for a curve liquidity provider token.\n   * @param lpToken\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async getCurvePriceUsdc(lpToken: Address, overrides: CallOverrides = {}): Promise<Usdc> {\n    return await this.contract.read.getCurvePriceUsdc(lpToken, overrides).then(int);\n  }\n\n  /**\n   * Get Usdc exchange rate of underlying token of the curve liquidity provider\n   * token's pool.\n   * @param lpToken\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async getBasePrice(lpToken: Address, overrides: CallOverrides = {}): Promise<Usdc> {\n    return await this.contract.read.getBasePrice(lpToken, overrides).then(int);\n  }\n\n  /**\n   * Get virtual price for a curve liquidity provider token.\n   * @param lpToken\n   * @param overrides\n   * @returns virtual price\n   */\n  async getVirtualPrice(lpToken: Address, overrides: CallOverrides = {}): Promise<Integer> {\n    return await this.contract.read.getVirtualPrice(lpToken, overrides).then(int);\n  }\n\n  /**\n   * Get the contract address that lens considers as Curve Registry.\n   * @param overrides\n   * @returns\n   */\n  async getCurveRegistryAddress(overrides: CallOverrides = {}): Promise<Integer> {\n    return await this.contract.read.usdcAddress(overrides).then(int);\n  }\n\n  // Calculations: Iron Bank\n\n  /**\n   * Test if a token address is an iron bank market.\n   * @param token\n   * @param overrides\n   * @returns test result\n   */\n  async isIronBankMarket(token: Address, overrides: CallOverrides = {}): Promise<boolean> {\n    return await this.contract.read.isIronBankMarket(token, overrides);\n  }\n\n  /**\n   * Get Usdc exchange rate for an iron bank market token.\n   * @param token\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async getIronBankMarketPriceUsdc(token: Address, overrides: CallOverrides = {}): Promise<Usdc> {\n    return await this.contract.read.getIronBankMarketPriceUsdc(token, overrides).then(int);\n  }\n\n  /**\n   * Get all the iron bank market addresses.\n   * @param overrides\n   * @returns list of iron bank market addresses\n   */\n  async getIronBankMarkets(overrides: CallOverrides = {}): Promise<Address[]> {\n    return await this.contract.read.getIronBankMarkets(overrides);\n  }\n\n  // Calculations: Sushiswap\n\n  /**\n   * Test if a token address is a sushiswap liquidity provider token.\n   * @param token\n   * @param overrides\n   * @returns test result\n   */\n  async isLpToken(token: Address, overrides: CallOverrides = {}): Promise<boolean> {\n    return await this.contract.read.isLpToken(token, overrides);\n  }\n\n  /**\n   * Get exchange rate between two tokens from the sushiswap router.\n   * @param token0\n   * @param token1\n   * @param overrides\n   * @returns exchange rate\n   */\n  async getPriceFromRouter(token0: Address, token1: Address, overrides: CallOverrides = {}): Promise<Integer> {\n    return await this.contract.read.getPriceFromRouter(token0, token1, overrides).then(int);\n  }\n\n  /**\n   * Get Usdc exchange rate for a token.\n   * @param token\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async getPriceFromRouterUsdc(token: Address, overrides: CallOverrides = {}): Promise<Usdc> {\n    return await this.contract.read.getPriceFromRouterUsdc(token, overrides).then(int);\n  }\n\n  /**\n   * Get total liquidity for a liquidity provider token in Usdc\n   * @param token\n   * @param overrides\n   * @returns Usdc liquidity (6 decimals)\n   */\n  async getLpTokenTotalLiquidityUsdc(token: Address, overrides: CallOverrides = {}): Promise<Usdc> {\n    return await this.contract.read.getLpTokenTotalLiquidityUsdc(token, overrides).then(int);\n  }\n\n  /**\n   * Get Usdc exchange rate for a sushiswap liquidity provider token.\n   * @param token\n   * @param overrides\n   * @returns Usdc exchange rate (6 decimals)\n   */\n  async getLpTokenPriceUsdc(token: Address, overrides: CallOverrides = {}): Promise<Integer> {\n    return await this.contract.read.getLpTokenPriceUsdc(token, overrides).then(int);\n  }\n}\n","import { ChainId } from \"../../chain\";\nimport { Service } from \"../../common\";\nimport { Context } from \"../../context\";\nimport { SdkError } from \"../../types\";\n\nexport class SubgraphService extends Service {\n  yearnSubgraphEndpoint: string;\n\n  constructor(chainId: ChainId, ctx: Context) {\n    super(chainId, ctx);\n\n    let subgraphName: string;\n    switch (chainId) {\n      case 1:\n      case 1337:\n        subgraphName = \"salazarguille/yearn-vaults-v2-subgraph-mainnet\";\n        break;\n      case 250:\n        subgraphName = \"yearn/yearn-vaults-v2-fantom\";\n        break;\n      case 42161:\n        subgraphName = \"yearn/yearn-vaults-v2-arbitrum\";\n        break;\n      default:\n        throw new SdkError(`No subgraph name for chain ${chainId}`);\n    }\n\n    this.yearnSubgraphEndpoint = `https://api.thegraph.com/subgraphs/name/${subgraphName}`;\n  }\n\n  async fetchQuery<T>(query: string, variables: { [key: string]: any } = {}): Promise<T> {\n    // the subgraph only works with lowercased addresses\n    Object.keys(variables).forEach(key => {\n      const variable = variables[key];\n      if (typeof variable === \"string\") {\n        variables[key] = variable.toLowerCase();\n      } else if (Array.isArray(variable)) {\n        for (const [index, value] of variable.entries()) {\n          if (typeof value === \"string\") {\n            variable[index] = value.toLowerCase();\n          }\n        }\n      }\n    });\n\n    const body = {\n      query: query,\n      variables: variables\n    };\n\n    return await fetch(this.yearnSubgraphEndpoint, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(body)\n    })\n      .then(res => res.json())\n      .then(json => {\n        if (json.errors) {\n          throw new SdkError(`Subgraph Error - ${JSON.stringify(json.errors)}`);\n        }\n        return json;\n      });\n  }\n}\n","import { Service } from \"../common\";\n\nexport class TelegramService extends Service {\n  sendMessage(text: string) {\n    if (!this.ctx.simulation.telegramChatId || !this.ctx.simulation.telegramBotId) {\n      return;\n    }\n    const params = new URLSearchParams({\n      chat_id: this.ctx.simulation.telegramChatId,\n      text: text,\n      disable_web_page_preview: \"true\"\n    });\n    const url = `https://api.telegram.org/bot${this.ctx.simulation.telegramBotId}/sendMessage?` + params;\n    fetch(url);\n  }\n}\n","import { Service } from \"../common\";\nimport { handleHttpError } from \"../helpers\";\nimport { Address, Apy, ApyMap, BackscracherApyComposite } from \"../types\";\n\n/**\n * Internal representation of a vault returned by the vaults.finance/all API.\n */\ninterface ApiVault {\n  address: string;\n  apy?: Apy;\n}\n\n/**\n * Fix for backscratcher vaults returning different casing and property names so it's all normalized.\n */\nexport function convertCompositeApyToSnakeCase(apy: Apy | undefined): Apy | undefined {\n  return apy\n    ? {\n        ...apy,\n        composite: apy.composite\n          ? {\n              ...apy.composite,\n              boost: apy.composite.boost\n                ? apy.composite.boost\n                : ((apy.composite as unknown) as BackscracherApyComposite).currentBoost,\n              pool_apy: apy.composite.pool_apy\n                ? apy.composite.pool_apy\n                : ((apy.composite as unknown) as BackscracherApyComposite).poolApy,\n              boosted_apr: apy.composite.boosted_apr\n                ? apy.composite.boosted_apr\n                : ((apy.composite as unknown) as BackscracherApyComposite).boostedApy,\n              base_apr: apy.composite.base_apr\n                ? apy.composite.base_apr\n                : ((apy.composite as unknown) as BackscracherApyComposite).baseApy\n            }\n          : null\n      }\n    : undefined;\n}\n\n/**\n * [[VisionService]] provides access to off chain apy calculations for yearn\n * products.\n */\nexport class VisionService extends Service {\n  /**\n   * Fetch APY from a list of yearn's vault addresses (or all of them is address\n   * is not provided).\n   * @param addresses\n   */\n  async apy<T extends Address>(addresses?: T[]): Promise<ApyMap<T>>;\n\n  /**\n   * Fetch API for a specific yearn's vault address.\n   * @param addresses\n   */\n  async apy(address: Address): Promise<Apy | undefined>;\n\n  async apy<T extends Address>(addresses?: T | T[]): Promise<ApyMap<T> | Apy | undefined> {\n    const url = `https://d28fcsszptni1s.cloudfront.net/v1/chains/${this.chainId}/vaults/all`;\n    let vaults: ApiVault[] = await fetch(url)\n      .then(handleHttpError)\n      .then(res => res.json());\n\n    // fix backscratcher apys\n    vaults = vaults.map(vault =>\n      vault.apy && vault.apy.type === \"backscratcher\"\n        ? { ...vault, apy: convertCompositeApyToSnakeCase(vault.apy) }\n        : vault\n    );\n\n    if (Array.isArray(addresses)) {\n      const map = new Map<T, Apy | undefined>();\n      for (const address of addresses) {\n        const vault = vaults.find(vault => vault.address === address);\n        map.set(address, vault ? vault.apy : undefined);\n      }\n      return Object.fromEntries(map) as ApyMap<T>;\n    } else if (addresses) {\n      const vault = vaults.find(vault => vault.address === addresses);\n      if (!vault) return undefined;\n      return vault.apy;\n    } else {\n      return Object.fromEntries(vaults.map(vault => [vault.address, vault.apy])) as ApyMap<T>;\n    }\n  }\n}\n","/**\n * Supported chains in the yearn ecosystem.\n */\nexport const Chains = {\n  1: \"ethereum\",\n  250: \"fantom\",\n  1337: \"ethereum\",\n  42161: \"arbitrum\"\n};\n\nexport type EthMain = 1;\nexport type FtmMain = 250;\nexport type EthLocal = 1337;\nexport type ArbitrumOne = 42161;\n\nexport type ChainId = keyof typeof Chains;\n","import { getAddress } from \"@ethersproject/address\";\n\nimport { Chains } from \"../chain\";\nimport { Service } from \"../common\";\nimport { EthAddress, handleHttpError, usdc, ZeroAddress } from \"../helpers\";\nimport { Address, Balance, BalancesMap, Integer, Token } from \"../types\";\nimport {\n  GasPrice,\n  ZapApprovalStateOutput,\n  ZapApprovalTransactionOutput,\n  ZapOutput,\n  ZapProtocol\n} from \"../types/custom/zapper\";\n\nconst ZAPPER_AFFILIATE_ADDRESS = \"0xFEB4acf3df3cDEA7399794D0869ef76A6EfAff52\";\n\n/**\n * [[ZapperService]] interacts with the zapper api to gather more insight for\n * tokens and user positions.\n */\nexport class ZapperService extends Service {\n  /**\n   * Fetch all the tokens supported by the zapper protocol along with some basic\n   * metadata.\n   * @returns list of tokens supported by the zapper protocol.\n   */\n  async supportedTokens(): Promise<Token[]> {\n    const url = \"https://api.zapper.fi/v1/prices\";\n    const params = new URLSearchParams({ api_key: this.ctx.zapper });\n    const tokens = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n    const network = Chains[this.chainId] ?? \"ethereum\";\n    return tokens.map(\n      (token: Record<string, string>): Token => {\n        const address = token.address === ZeroAddress ? EthAddress : getAddress(String(token.address));\n        const supported = token.hide ? !token.hide : true;\n        return {\n          address: address,\n          name: token.symbol,\n          symbol: token.symbol,\n          icon: `https://assets.yearn.network/tokens/${network}/${token.address}.png`,\n          decimals: token.decimals,\n          priceUsdc: usdc(token.price),\n          supported: { zapper: supported }\n        };\n      }\n    );\n  }\n\n  /**\n   * Fetch token balances from the {@link ZapperService.supportedTokens} list\n   * for a particular address.\n   * @param address\n   */\n  async balances<T extends Address>(address: T): Promise<Balance[]>;\n\n  /**\n   * Fetch token balances from the {@link ZapperService.supportedTokens} list\n   * for a list of addresses.\n   * @param addresses\n   */\n  async balances<T extends Address>(addresses: T[]): Promise<BalancesMap<T>>;\n  async balances<T extends Address>(addresses: T[] | T): Promise<BalancesMap<T> | Balance[]>;\n\n  async balances<T extends Address>(addresses: T[] | T): Promise<BalancesMap<T> | Balance[]> {\n    const url = \"https://api.zapper.fi/v1/protocols/tokens/balances\";\n    const params = new URLSearchParams({\n      \"addresses[]\": Array.isArray(addresses) ? addresses.join() : addresses,\n      api_key: this.ctx.zapper\n    });\n    const balances = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n    Object.keys(balances).forEach(address => {\n      const copy = balances[address];\n      delete balances[address];\n      if (copy.products.length === 0) {\n        balances[getAddress(address)] = [];\n      } else {\n        const assets = copy.products[0].assets;\n        balances[getAddress(address)] = assets.map(\n          (balance: Record<string, string>): Balance => {\n            const address = balance.address === ZeroAddress ? EthAddress : getAddress(String(balance.address));\n            return {\n              address,\n              token: {\n                address,\n                name: balance.symbol,\n                symbol: balance.symbol,\n                decimals: balance.decimals\n              },\n              balance: balance.balanceRaw,\n              balanceUsdc: usdc(balance.balanceUSD),\n              priceUsdc: usdc(balance.price)\n            };\n          }\n        );\n      }\n    });\n    if (!Array.isArray(addresses)) return balances[addresses];\n    return balances;\n  }\n\n  /**\n   * Fetch up to date gas prices in gwei\n   * @returns gas prices\n   */\n  async gas(): Promise<GasPrice> {\n    const url = \"https://api.zapper.fi/v1/gas-price\";\n    const params = new URLSearchParams({\n      api_key: this.ctx.zapper\n    });\n    const gas = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n    return gas;\n  }\n\n  /**\n   * Fetches the data needed to check token ZapIn contract approval state\n   * @param from - the address that is depositing\n   * @param token - the token to be sold to pay for the deposit\n   * @param zapProtocol the protocol to use with zapper e.g. Yearn, Pickle\n   */\n  async zapInApprovalState(\n    from: Address,\n    token: Address,\n    zapProtocol: ZapProtocol = ZapProtocol.YEARN\n  ): Promise<ZapApprovalStateOutput> {\n    const url = `https://api.zapper.fi/v1/zap-in/vault/${zapProtocol}/approval-state`;\n    const params = new URLSearchParams({\n      ownerAddress: from,\n      sellTokenAddress: token,\n      api_key: this.ctx.zapper\n    });\n    const response: ZapApprovalStateOutput = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n\n    return response;\n  }\n\n  /**\n   * Fetches the data needed to approve ZapIn Contract for a token\n   * @param from - the address that is depositing\n   * @param token - the token to be sold to pay for the deposit\n   * @param gasPrice\n   * @param zapProtocol the protocol to use with zapper e.g. Yearn, Pickle\n   */\n  async zapInApprovalTransaction(\n    from: Address,\n    token: Address,\n    gasPrice: Integer,\n    zapProtocol: ZapProtocol = ZapProtocol.YEARN\n  ): Promise<ZapApprovalTransactionOutput> {\n    const url = `https://api.zapper.fi/v1/zap-in/vault/${zapProtocol}/approval-transaction`;\n    const params = new URLSearchParams({\n      gasPrice,\n      ownerAddress: from,\n      sellTokenAddress: token,\n      api_key: this.ctx.zapper\n    });\n    const response: ZapApprovalTransactionOutput = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n\n    return response;\n  }\n\n  /**\n   * Fetches the data needed to check token ZapOut contract approval state\n   * @param from - the address that is withdrawing\n   * @param token - the vault token to be withdrawn\n   * @param zapProtocol the protocol to use with zapper e.g. Yearn, Pickle\n   */\n  async zapOutApprovalState(\n    from: Address,\n    token: Address,\n    zapProtocol: ZapProtocol = ZapProtocol.YEARN\n  ): Promise<ZapApprovalStateOutput> {\n    const url = `https://api.zapper.fi/v1/zap-out/vault/${zapProtocol}/approval-state`;\n    const params = new URLSearchParams({\n      ownerAddress: from,\n      sellTokenAddress: token,\n      api_key: this.ctx.zapper\n    });\n    const response: ZapApprovalStateOutput = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n\n    return response;\n  }\n\n  /**\n   * Fetches the data needed to approve ZapOut Contract for a token\n   * @param from - the address that is withdrawing\n   * @param token - the vault token to be withdrawn\n   * @param gasPrice\n   * @param zapProtocol the protocol to use with zapper e.g. Yearn, Pickle\n   */\n  async zapOutApprovalTransaction(\n    from: Address,\n    token: Address,\n    gasPrice: Integer,\n    zapProtocol: ZapProtocol = ZapProtocol.YEARN\n  ): Promise<ZapApprovalTransactionOutput> {\n    const url = `https://api.zapper.fi/v1/zap-out/vault/${zapProtocol}/approval-transaction`;\n    const params = new URLSearchParams({\n      gasPrice,\n      ownerAddress: from,\n      sellTokenAddress: token,\n      api_key: this.ctx.zapper\n    });\n    const response: ZapApprovalTransactionOutput = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n\n    return response;\n  }\n\n  /**\n   * Fetches the data needed to zap into a vault\n   * @param from - the address that is depositing\n   * @param token - the token to be sold to pay for the deposit\n   * @param amount - the amount of tokens to be sold\n   * @param vault - the vault to zap into\n   * @param gasPrice\n   * @param slippagePercentage - slippage as a decimal\n   * @param skipGasEstimate - provide the gasLimit in the response. Should be set to true when simulating a zap without approval\n   * @param zapProtocol the protocol to use with zapper e.g. Yearn, Pickle\n   */\n  async zapIn(\n    from: Address,\n    token: Address,\n    amount: Integer,\n    vault: Address,\n    gasPrice: Integer,\n    slippagePercentage: number,\n    skipGasEstimate: boolean,\n    zapProtocol: ZapProtocol = ZapProtocol.YEARN\n  ): Promise<ZapOutput> {\n    let sellToken = token;\n    if (EthAddress === token) {\n      // If Ether is being sent, the sellTokenAddress should be the zero address\n      sellToken = ZeroAddress;\n    }\n\n    const url = `https://api.zapper.fi/v1/zap-in/vault/${zapProtocol}/transaction`;\n    const params = new URLSearchParams({\n      affiliateAddress: ZAPPER_AFFILIATE_ADDRESS,\n      ownerAddress: from,\n      sellTokenAddress: sellToken,\n      sellAmount: amount,\n      poolAddress: vault,\n      gasPrice: gasPrice,\n      slippagePercentage: slippagePercentage.toString(),\n      api_key: this.ctx.zapper,\n      skipGasEstimate: skipGasEstimate ? \"true\" : \"false\"\n    });\n\n    const response: ZapOutput = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n\n    return response;\n  }\n\n  /**\n   * Fetches the data needed to zap out of a vault\n   * @param from - the address that is withdrawing\n   * @param token - the token that'll be received\n   * @param amount - the amount of tokens to sell\n   * @param vault - the vault to zap out of\n   * @param gasPrice\n   * @param slippagePercentage - slippage as a decimal\n   * @param skipGasEstimate - provide the gasLimit in the response. Should be set to true when simulating a zap without approval\n   * @param zapProtocol the protocol to use with zapper e.g. Yearn, Pickle\n   * @param signature - the account valid secp256k1 signature of Permit encoded from r, s, v. (https://eips.ethereum.org/EIPS/eip-2612)\n   */\n  async zapOut(\n    from: Address,\n    token: Address,\n    amount: Integer,\n    vault: Address,\n    gasPrice: Integer,\n    slippagePercentage: number,\n    skipGasEstimate: boolean,\n    zapProtocol: ZapProtocol = ZapProtocol.YEARN,\n    signature?: string\n  ): Promise<ZapOutput> {\n    let toToken = token;\n    if (EthAddress === token) {\n      // If Ether is being received, the toTokenAddress should be the zero address\n      toToken = ZeroAddress;\n    }\n\n    const url = `https://api.zapper.fi/v1/zap-out/vault/${zapProtocol}/transaction`;\n    const params = new URLSearchParams({\n      affiliateAddress: ZAPPER_AFFILIATE_ADDRESS,\n      ownerAddress: from,\n      toTokenAddress: toToken,\n      sellAmount: amount,\n      poolAddress: vault,\n      gasPrice: gasPrice,\n      slippagePercentage: slippagePercentage.toString(),\n      api_key: this.ctx.zapper,\n      shouldSellEntireBalance: \"true\",\n      skipGasEstimate: skipGasEstimate ? \"true\" : \"false\",\n      ...(signature && { signature })\n    });\n    const response: ZapOutput = await fetch(`${url}?${params}`)\n      .then(handleHttpError)\n      .then(res => res.json());\n\n    return response;\n  }\n}\n","import { BytesLike } from \"@ethersproject/bytes\";\n\nimport { ChainId } from \"../chain\";\nimport { ContractService } from \"../common\";\nimport { Context } from \"../context\";\nimport { Address } from \"../types/common\";\n\n/**\n * [[AllowListService]] is used to interface with yearn's deployed AllowList contract. The purpose of it is to be able to\n * validate that all interactions that are about to be written to the blockchain follow the set of rules that the AllowList defines on chain.\n * It should be used to validate any transaction before it is written. For example, it can be used to check that an approval transaction that the sdk makes\n * is approving a token that is an underlying asset of a vault, and also that the first parameter in the approval transaction is the address of a valid yearn vault.\n * Similiarly, for a deposit transaction, it can be used to check whether the vault is a valid yearn vault\n */\nexport class AllowListService<T extends ChainId> extends ContractService<T> {\n  static abi = [\n    \"function validateCalldataByOrigin(string memory originName, address targetAddress, bytes calldata data) public view returns (bool)\"\n  ];\n\n  /**\n   * This is used by the AllowListFactory to resolve which set of rules are applicable to which organization\n   */\n  private static originName = \"yearn.finance\";\n\n  /**\n   * Get most up-to-date address of the Allow List Factory contract for a particular chain id\n   * @param chainId\n   * @returns address\n   */\n  static addressByChain(chainId: ChainId): string | null {\n    switch (chainId) {\n      case 250:\n        return \"0xD2322468e5Aa331381200754f6daAD3dF923539e\";\n      case 1:\n      case 1337:\n      case 42161:\n      default:\n        return null;\n    }\n  }\n\n  constructor(chainId: T, ctx: Context, address: string) {\n    super(address, chainId, ctx);\n  }\n\n  /**\n   * Uses yearn's on chain AllowList to verify whether the calldata being sent to the target contract by the sdk is valid. This should be used prior to any\n   * write method, including token approvals. This method will raise an error if the parameters are not valid.\n   * @param targetAddress The contract that is being interacted with e.g. for approving depositing usdc into a vault this would be usdc.\n   *                      For depositing/withdrawing from a vault it'd be the vault contract itself\n   * @param callData The data from the tx that should be validated. This should be from a tx that has been populated and is about to be sent\n   */\n  async validateCalldata(targetAddress?: Address, callData?: BytesLike): Promise<{ success: boolean; error?: string }> {\n    if (!targetAddress) {\n      return { success: false, error: \"can't validate a tx that isn't targeting an address\" };\n    }\n\n    if (!callData) {\n      return { success: false, error: \"can't validate a tx that has no call data\" };\n    }\n\n    try {\n      const valid = await this.contract.read.validateCalldataByOrigin(\n        AllowListService.originName,\n        targetAddress,\n        callData\n      );\n\n      if (!valid) {\n        return { success: false, error: \"tx is not permitted by the allow list\" };\n      }\n\n      return { success: true };\n    } catch {\n      return { success: false, error: \"failed to read from the allow list whether the transaction is valid\" };\n    }\n  }\n}\n","import { CallOverrides } from \"@ethersproject/contracts\";\n\nimport { AllowanceAbi, TokenAbi, TokenBalanceAbi, TokenPriceAbi } from \"../abi\";\nimport { ChainId } from \"../chain\";\nimport { ContractService } from \"../common\";\nimport { Context } from \"../context\";\nimport { chunkArray } from \"../helpers\";\nimport { structArray } from \"../struct\";\nimport { Address, ERC20, TokenAllowance, TokenBalance, TokenPrice } from \"../types\";\n\nconst HelperAbi = [\n  `function tokensMetadata(address[] memory) public view returns (${TokenAbi}[] memory)`,\n  `function tokensPrices(address[] memory) public view returns (${TokenPriceAbi}[] memory)`,\n  `function tokensBalances(address, address[] memory) public view returns (${TokenBalanceAbi}[] memory)`,\n  `function allowances(address, address[] memory, address[] memory) external view returns (${AllowanceAbi}[] memory)`,\n  \"function assetStrategiesAddresses(address) public view returns (address[])\"\n];\n\n/**\n * [[HelperService]] is a generalized containers for all the utilities that are\n * used in the lens codebase and in the SDK.\n */\nexport class HelperService<T extends ChainId> extends ContractService<T> {\n  static abi = HelperAbi;\n\n  constructor(chainId: T, ctx: Context) {\n    super(ctx.addresses.helper ?? HelperService.addressByChain(chainId), chainId, ctx);\n  }\n\n  /**\n   * Get most up-to-date address of the Helper contract for a particular chain\n   * id.\n   * @param chainId\n   * @returns address\n   */\n  static addressByChain(chainId: ChainId): string {\n    switch (chainId) {\n      case 1:\n      case 1337:\n        return \"0x5AACD0D03096039aC4381CD814637e9FB7C34a6f\";\n      case 250:\n        return \"0xE55Dd55b3355c261A048B3f310706C7478657d74\";\n      case 42161:\n        return \"0xE55Dd55b3355c261A048B3f310706C7478657d74\";\n    }\n  }\n\n  /**\n   * Get a list of [[ERC20]] objects for a list of token addresses.\n   * @param addresses\n   * @param overrides\n   * @returns list of erc20 object\n   */\n  async tokens(addresses: Address[], overrides: CallOverrides = {}): Promise<ERC20[]> {\n    return await this.contract.read.tokensMetadata(addresses, overrides).then(structArray);\n  }\n\n  /**\n   * Get a list of token prices for a list of token addresses.\n   * @param addresses\n   * @param overrides\n   * @returns list of token prices\n   */\n  async tokenPrices(addresses: Address[], overrides: CallOverrides = {}): Promise<TokenPrice[]> {\n    return await this.contract.read.tokensPrices(addresses, overrides).then(structArray);\n  }\n\n  /**\n   * Get a list of token balances from a list of token addresses for a\n   * particular address.\n   * @param address\n   * @param tokens\n   * @param overrides\n   * @returns list of token balances\n   */\n  async tokenBalances(address: Address, tokens: Address[], overrides: CallOverrides = {}): Promise<TokenBalance[]> {\n    const chunks = chunkArray(tokens, 30);\n    const promises = chunks.map(async chunk =>\n      this.contract.read.tokensBalances(address, chunk, overrides).then(structArray)\n    );\n    return Promise.all(promises).then(chunks => chunks.flat());\n  }\n\n  /**\n   * Get a list of token allowances for a list of token addresses and spenders\n   * for a particular address.\n   * @param address\n   * @param tokens\n   * @param spenders\n   * @param overrides\n   * @returns\n   */\n  async tokenAllowances(\n    address: Address,\n    tokens: Address[],\n    spenders: Address[],\n    overrides: CallOverrides = {}\n  ): Promise<TokenAllowance[]> {\n    return await this.contract.read.allowances(address, tokens, spenders, overrides).then(structArray);\n  }\n\n  async assetStrategiesAddresses(address: Address, overrides: CallOverrides = {}): Promise<Address[]> {\n    return this.contract.read.assetStrategiesAddresses(address, overrides);\n  }\n}\n","import { Service } from \"../common\";\nimport { StrategiesMetadata, TokenMetadata, VaultMetadataOverrides } from \"../types\";\n\nconst MetaURL = \"https://meta.yearn.network\";\n\nconst CHAIN_ID_KEY = \"{chain_id}\";\n\n/**\n * [[MetaService]] fetches meta data about things such as vaults and tokens\n * from yearn-meta\n */\nexport class MetaService extends Service {\n  async tokens(): Promise<TokenMetadata[]> {\n    return fetch(this.buildUrl(`tokens/${CHAIN_ID_KEY}/all`)).then(res => res.json());\n  }\n\n  async strategies(): Promise<StrategiesMetadata[]> {\n    return fetch(this.buildUrl(`strategies/${CHAIN_ID_KEY}/all`)).then(res => res.json());\n  }\n\n  async vaults(): Promise<VaultMetadataOverrides[]> {\n    return fetch(this.buildUrl(`vaults/${CHAIN_ID_KEY}/all`)).then(res => res.json());\n  }\n\n  private buildUrl(path: string): string {\n    return `${MetaURL}/${path}`.replace(CHAIN_ID_KEY, this.chainId.toString());\n  }\n}\n","import { Deferrable } from \"@ethersproject/properties\";\nimport { TransactionRequest, TransactionResponse } from \"@ethersproject/providers\";\n\nimport { ChainId } from \"../chain\";\nimport { Service } from \"../common\";\nimport { Context } from \"../context\";\nimport { SdkError } from \"../types/common\";\nimport { AllowListService } from \"./allowlist\";\n\nexport class TransactionService<T extends ChainId> extends Service {\n  private allowListService?: AllowListService<T>;\n\n  constructor(chainId: T, ctx: Context, allowListService?: AllowListService<T>) {\n    super(chainId, ctx);\n    this.allowListService = allowListService;\n  }\n\n  async sendTransaction(transaction: Deferrable<TransactionRequest>): Promise<TransactionResponse> {\n    const { success, error } = await this.validateTx(transaction);\n    if (!success) {\n      throw new SdkError(error || \"transaction is not valid\");\n    }\n    const signer = this.ctx.provider.write.getSigner();\n    return signer.sendTransaction(transaction);\n  }\n\n  private async validateTx(transaction: Deferrable<TransactionRequest>): Promise<{ success: boolean; error?: string }> {\n    if (!this.allowListService) {\n      return Promise.resolve({ success: true, error: undefined });\n    }\n\n    const [to, data] = await Promise.all([transaction.to, transaction.data]);\n    return await this.allowListService.validateCalldata(to, data);\n  }\n}\n","import { ChainId } from \"./chain\";\nimport { Context, ContextValue } from \"./context\";\nimport { EarningsInterface } from \"./interfaces/earnings\";\nimport { FeesInterface } from \"./interfaces/fees\";\nimport { IronBankInterface } from \"./interfaces/ironbank\";\nimport { SimulationInterface } from \"./interfaces/simulation\";\nimport { StrategyInterface } from \"./interfaces/strategy\";\nimport { TokenInterface } from \"./interfaces/token\";\nimport { VaultInterface } from \"./interfaces/vault\";\nimport { AllowListService } from \"./services/allowlist\";\nimport { AssetService } from \"./services/assets\";\nimport { HelperService } from \"./services/helper\";\nimport { LensService } from \"./services/lens\";\nimport { MetaService } from \"./services/meta\";\nimport { OracleService } from \"./services/oracle\";\nimport { PickleService } from \"./services/partners/pickle\";\nimport { SubgraphService } from \"./services/subgraph\";\nimport { TelegramService } from \"./services/telegram\";\nimport { TransactionService } from \"./services/transaction\";\nimport { VisionService } from \"./services/vision\";\nimport { ZapperService } from \"./services/zapper\";\nimport { AssetServiceState } from \"./types/custom/assets\";\n\n/**\n * [[Yearn]] is a wrapper for all the services and interfaces of the SDK.\n *\n * Yearn namespace can be instantiated as a class, providing configuration\n * options that will then be used by all the services and interfaces:\n *\n * ```typescript\n * import { Yearn } from \"@yfi/sdk\";\n *\n * const provider = new JsonRpcProvider(\"http://localhost:8545\");\n * const yearn = new Yearn(1, { provider });\n * ```\n */\nexport class Yearn<T extends ChainId> {\n  services: {\n    lens: LensService<T>;\n    oracle: OracleService<T>;\n    zapper: ZapperService;\n    asset: AssetService;\n    vision: VisionService;\n    subgraph: SubgraphService;\n    telegram: TelegramService;\n    meta: MetaService;\n    allowList?: AllowListService<T>;\n    transaction: TransactionService<T>;\n\n    pickle: PickleService;\n\n    helper: HelperService<T>;\n  };\n\n  vaults: VaultInterface<T>;\n  tokens: TokenInterface<T>;\n  earnings: EarningsInterface<T>;\n  fees: FeesInterface<T>;\n  ironBank: IronBankInterface<T>;\n  simulation: SimulationInterface<T>;\n  strategies: StrategyInterface<T>;\n\n  context: Context;\n\n  /**\n   * This promise can be **optionally** awaited to assure that all services\n   * have been correctly loaded.\n   *\n   * ```typescript\n   * const yearn = new Yearn(1, { provider });\n   * await yearn.ready;\n   * ```\n   */\n  ready: Promise<void[]>;\n\n  /**\n   * Create a new SDK instance.\n   * @param chainId\n   * @param context plain object containing all the optional configuration\n   * @param assetServiceState the asset service does some expensive computation at initialization, passing the state from a previous sdk instance can prevent this\n   */\n  constructor(chainId: T, context: ContextValue, assetServiceState?: AssetServiceState) {\n    this.context = new Context(context);\n\n    const allowlistAddress = AllowListService.addressByChain(chainId);\n    const allowListService = allowlistAddress\n      ? new AllowListService(chainId, this.context, allowlistAddress)\n      : undefined;\n\n    this.services = {\n      lens: new LensService(chainId, this.context),\n      oracle: new OracleService(chainId, this.context),\n      zapper: new ZapperService(chainId, this.context),\n      asset: new AssetService(chainId, this.context, assetServiceState),\n      vision: new VisionService(chainId, this.context),\n      subgraph: new SubgraphService(chainId, this.context),\n      pickle: new PickleService(chainId, this.context),\n      helper: new HelperService(chainId, this.context),\n      telegram: new TelegramService(chainId, this.context),\n      meta: new MetaService(chainId, this.context),\n      allowList: allowListService,\n      transaction: new TransactionService(chainId, this.context, allowListService)\n    };\n\n    this.vaults = new VaultInterface(this, chainId, this.context);\n    this.tokens = new TokenInterface(this, chainId, this.context);\n    this.earnings = new EarningsInterface(this, chainId, this.context);\n    this.fees = new FeesInterface(this, chainId, this.context);\n    this.ironBank = new IronBankInterface(this, chainId, this.context);\n    this.simulation = new SimulationInterface(this, chainId, this.context);\n    this.strategies = new StrategyInterface(this, chainId, this.context);\n\n    this.ready = Promise.all([this.services.asset.ready]);\n  }\n\n  setChainId(chainId: ChainId) {\n    const allowlistAddress = AllowListService.addressByChain(chainId);\n    const allowListService = allowlistAddress\n      ? new AllowListService(chainId, this.context, allowlistAddress)\n      : undefined;\n\n    this.services = {\n      lens: new LensService(chainId, this.context),\n      oracle: new OracleService(chainId, this.context),\n      zapper: new ZapperService(chainId, this.context),\n      asset: new AssetService(chainId, this.context),\n      vision: new VisionService(chainId, this.context),\n      subgraph: new SubgraphService(chainId, this.context),\n      pickle: new PickleService(chainId, this.context),\n      helper: new HelperService(chainId, this.context),\n      telegram: new TelegramService(chainId, this.context),\n      meta: new MetaService(chainId, this.context),\n      allowList: allowListService,\n      transaction: new TransactionService(chainId, this.context, allowListService)\n    };\n\n    this.vaults = new VaultInterface(this, chainId, this.context);\n    this.tokens = new TokenInterface(this, chainId, this.context);\n    this.earnings = new EarningsInterface(this, chainId, this.context);\n    this.fees = new FeesInterface(this, chainId, this.context);\n    this.ironBank = new IronBankInterface(this, chainId, this.context);\n    this.simulation = new SimulationInterface(this, chainId, this.context);\n    this.strategies = new StrategyInterface(this, chainId, this.context);\n\n    this.ready = Promise.all([this.services.asset.ready]);\n  }\n}\n","(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(typeof self !== 'undefined' ? self : this);\n",";(function (globalObject) {\r\n  'use strict';\r\n\r\n/*\r\n *      bignumber.js v9.0.1\r\n *      A JavaScript library for arbitrary-precision arithmetic.\r\n *      https://github.com/MikeMcl/bignumber.js\r\n *      Copyright (c) 2020 Michael Mclaughlin <M8ch88l@gmail.com>\r\n *      MIT Licensed.\r\n *\r\n *      BigNumber.prototype methods     |  BigNumber methods\r\n *                                      |\r\n *      absoluteValue            abs    |  clone\r\n *      comparedTo                      |  config               set\r\n *      decimalPlaces            dp     |      DECIMAL_PLACES\r\n *      dividedBy                div    |      ROUNDING_MODE\r\n *      dividedToIntegerBy       idiv   |      EXPONENTIAL_AT\r\n *      exponentiatedBy          pow    |      RANGE\r\n *      integerValue                    |      CRYPTO\r\n *      isEqualTo                eq     |      MODULO_MODE\r\n *      isFinite                        |      POW_PRECISION\r\n *      isGreaterThan            gt     |      FORMAT\r\n *      isGreaterThanOrEqualTo   gte    |      ALPHABET\r\n *      isInteger                       |  isBigNumber\r\n *      isLessThan               lt     |  maximum              max\r\n *      isLessThanOrEqualTo      lte    |  minimum              min\r\n *      isNaN                           |  random\r\n *      isNegative                      |  sum\r\n *      isPositive                      |\r\n *      isZero                          |\r\n *      minus                           |\r\n *      modulo                   mod    |\r\n *      multipliedBy             times  |\r\n *      negated                         |\r\n *      plus                            |\r\n *      precision                sd     |\r\n *      shiftedBy                       |\r\n *      squareRoot               sqrt   |\r\n *      toExponential                   |\r\n *      toFixed                         |\r\n *      toFormat                        |\r\n *      toFraction                      |\r\n *      toJSON                          |\r\n *      toNumber                        |\r\n *      toPrecision                     |\r\n *      toString                        |\r\n *      valueOf                         |\r\n *\r\n */\r\n\r\n\r\n  var BigNumber,\r\n    isNumeric = /^-?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?$/i,\r\n    mathceil = Math.ceil,\r\n    mathfloor = Math.floor,\r\n\r\n    bignumberError = '[BigNumber Error] ',\r\n    tooManyDigits = bignumberError + 'Number primitive has more than 15 significant digits: ',\r\n\r\n    BASE = 1e14,\r\n    LOG_BASE = 14,\r\n    MAX_SAFE_INTEGER = 0x1fffffffffffff,         // 2^53 - 1\r\n    // MAX_INT32 = 0x7fffffff,                   // 2^31 - 1\r\n    POWS_TEN = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13],\r\n    SQRT_BASE = 1e7,\r\n\r\n    // EDITABLE\r\n    // The limit on the value of DECIMAL_PLACES, TO_EXP_NEG, TO_EXP_POS, MIN_EXP, MAX_EXP, and\r\n    // the arguments to toExponential, toFixed, toFormat, and toPrecision.\r\n    MAX = 1E9;                                   // 0 to MAX_INT32\r\n\r\n\r\n  /*\r\n   * Create and return a BigNumber constructor.\r\n   */\r\n  function clone(configObject) {\r\n    var div, convertBase, parseNumeric,\r\n      P = BigNumber.prototype = { constructor: BigNumber, toString: null, valueOf: null },\r\n      ONE = new BigNumber(1),\r\n\r\n\r\n      //----------------------------- EDITABLE CONFIG DEFAULTS -------------------------------\r\n\r\n\r\n      // The default values below must be integers within the inclusive ranges stated.\r\n      // The values can also be changed at run-time using BigNumber.set.\r\n\r\n      // The maximum number of decimal places for operations involving division.\r\n      DECIMAL_PLACES = 20,                     // 0 to MAX\r\n\r\n      // The rounding mode used when rounding to the above decimal places, and when using\r\n      // toExponential, toFixed, toFormat and toPrecision, and round (default value).\r\n      // UP         0 Away from zero.\r\n      // DOWN       1 Towards zero.\r\n      // CEIL       2 Towards +Infinity.\r\n      // FLOOR      3 Towards -Infinity.\r\n      // HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      ROUNDING_MODE = 4,                       // 0 to 8\r\n\r\n      // EXPONENTIAL_AT : [TO_EXP_NEG , TO_EXP_POS]\r\n\r\n      // The exponent value at and beneath which toString returns exponential notation.\r\n      // Number type: -7\r\n      TO_EXP_NEG = -7,                         // 0 to -MAX\r\n\r\n      // The exponent value at and above which toString returns exponential notation.\r\n      // Number type: 21\r\n      TO_EXP_POS = 21,                         // 0 to MAX\r\n\r\n      // RANGE : [MIN_EXP, MAX_EXP]\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // Number type: -324  (5e-324)\r\n      MIN_EXP = -1e7,                          // -1 to -MAX\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // Number type:  308  (1.7976931348623157e+308)\r\n      // For MAX_EXP > 1e7, e.g. new BigNumber('1e100000000').plus(1) may be slow.\r\n      MAX_EXP = 1e7,                           // 1 to MAX\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      CRYPTO = false,                          // true or false\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP        0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN      1 The remainder has the same sign as the dividend.\r\n      //             This modulo mode is commonly known as 'truncated division' and is\r\n      //             equivalent to (a % n) in JavaScript.\r\n      // FLOOR     3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN 6 This modulo mode implements the IEEE 754 remainder function.\r\n      // EUCLID    9 Euclidian division. q = sign(n) * floor(a / abs(n)).\r\n      //             The remainder is always positive.\r\n      //\r\n      // The truncated division, floored division, Euclidian division and IEEE 754 remainder\r\n      // modes are commonly used for the modulus operation.\r\n      // Although the other rounding modes can also be used, they may not give useful results.\r\n      MODULO_MODE = 1,                         // 0 to 9\r\n\r\n      // The maximum number of significant digits of the result of the exponentiatedBy operation.\r\n      // If POW_PRECISION is 0, there will be unlimited significant digits.\r\n      POW_PRECISION = 0,                    // 0 to MAX\r\n\r\n      // The format specification used by the BigNumber.prototype.toFormat method.\r\n      FORMAT = {\r\n        prefix: '',\r\n        groupSize: 3,\r\n        secondaryGroupSize: 0,\r\n        groupSeparator: ',',\r\n        decimalSeparator: '.',\r\n        fractionGroupSize: 0,\r\n        fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n        suffix: ''\r\n      },\r\n\r\n      // The alphabet used for base conversion. It must be at least 2 characters long, with no '+',\r\n      // '-', '.', whitespace, or repeated character.\r\n      // '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ$_'\r\n      ALPHABET = '0123456789abcdefghijklmnopqrstuvwxyz';\r\n\r\n\r\n    //------------------------------------------------------------------------------------------\r\n\r\n\r\n    // CONSTRUCTOR\r\n\r\n\r\n    /*\r\n     * The BigNumber constructor and exported function.\r\n     * Create and return a new instance of a BigNumber object.\r\n     *\r\n     * v {number|string|BigNumber} A numeric value.\r\n     * [b] {number} The base of v. Integer, 2 to ALPHABET.length inclusive.\r\n     */\r\n    function BigNumber(v, b) {\r\n      var alphabet, c, caseChanged, e, i, isNum, len, str,\r\n        x = this;\r\n\r\n      // Enable constructor call without `new`.\r\n      if (!(x instanceof BigNumber)) return new BigNumber(v, b);\r\n\r\n      if (b == null) {\r\n\r\n        if (v && v._isBigNumber === true) {\r\n          x.s = v.s;\r\n\r\n          if (!v.c || v.e > MAX_EXP) {\r\n            x.c = x.e = null;\r\n          } else if (v.e < MIN_EXP) {\r\n            x.c = [x.e = 0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.c = v.c.slice();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if ((isNum = typeof v == 'number') && v * 0 == 0) {\r\n\r\n          // Use `1 / n` to handle minus zero also.\r\n          x.s = 1 / v < 0 ? (v = -v, -1) : 1;\r\n\r\n          // Fast path for integers, where n < 2147483648 (2**31).\r\n          if (v === ~~v) {\r\n            for (e = 0, i = v; i >= 10; i /= 10, e++);\r\n\r\n            if (e > MAX_EXP) {\r\n              x.c = x.e = null;\r\n            } else {\r\n              x.e = e;\r\n              x.c = [v];\r\n            }\r\n\r\n            return;\r\n          }\r\n\r\n          str = String(v);\r\n        } else {\r\n\r\n          if (!isNumeric.test(str = String(v))) return parseNumeric(x, str, isNum);\r\n\r\n          x.s = str.charCodeAt(0) == 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n        // Exponential form?\r\n        if ((i = str.search(/e/i)) > 0) {\r\n\r\n          // Determine exponent.\r\n          if (e < 0) e = i;\r\n          e += +str.slice(i + 1);\r\n          str = str.substring(0, i);\r\n        } else if (e < 0) {\r\n\r\n          // Integer.\r\n          e = str.length;\r\n        }\r\n\r\n      } else {\r\n\r\n        // '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n        intCheck(b, 2, ALPHABET.length, 'Base');\r\n\r\n        // Allow exponential notation to be used with base 10 argument, while\r\n        // also rounding to DECIMAL_PLACES as with other bases.\r\n        if (b == 10) {\r\n          x = new BigNumber(v);\r\n          return round(x, DECIMAL_PLACES + x.e + 1, ROUNDING_MODE);\r\n        }\r\n\r\n        str = String(v);\r\n\r\n        if (isNum = typeof v == 'number') {\r\n\r\n          // Avoid potential interpretation of Infinity and NaN as base 44+ values.\r\n          if (v * 0 != 0) return parseNumeric(x, str, isNum, b);\r\n\r\n          x.s = 1 / v < 0 ? (str = str.slice(1), -1) : 1;\r\n\r\n          // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n          if (BigNumber.DEBUG && str.replace(/^0\\.0*|\\./, '').length > 15) {\r\n            throw Error\r\n             (tooManyDigits + v);\r\n          }\r\n        } else {\r\n          x.s = str.charCodeAt(0) === 45 ? (str = str.slice(1), -1) : 1;\r\n        }\r\n\r\n        alphabet = ALPHABET.slice(0, b);\r\n        e = i = 0;\r\n\r\n        // Check that str is a valid base b number.\r\n        // Don't use RegExp, so alphabet can contain special characters.\r\n        for (len = str.length; i < len; i++) {\r\n          if (alphabet.indexOf(c = str.charAt(i)) < 0) {\r\n            if (c == '.') {\r\n\r\n              // If '.' is not the first character and it has not be found before.\r\n              if (i > e) {\r\n                e = len;\r\n                continue;\r\n              }\r\n            } else if (!caseChanged) {\r\n\r\n              // Allow e.g. hexadecimal 'FF' as well as 'ff'.\r\n              if (str == str.toUpperCase() && (str = str.toLowerCase()) ||\r\n                  str == str.toLowerCase() && (str = str.toUpperCase())) {\r\n                caseChanged = true;\r\n                i = -1;\r\n                e = 0;\r\n                continue;\r\n              }\r\n            }\r\n\r\n            return parseNumeric(x, String(v), isNum, b);\r\n          }\r\n        }\r\n\r\n        // Prevent later check for length on converted number.\r\n        isNum = false;\r\n        str = convertBase(str, b, 10, x.s);\r\n\r\n        // Decimal point?\r\n        if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n        else e = str.length;\r\n      }\r\n\r\n      // Determine leading zeros.\r\n      for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n      // Determine trailing zeros.\r\n      for (len = str.length; str.charCodeAt(--len) === 48;);\r\n\r\n      if (str = str.slice(i, ++len)) {\r\n        len -= i;\r\n\r\n        // '[BigNumber Error] Number primitive has more than 15 significant digits: {n}'\r\n        if (isNum && BigNumber.DEBUG &&\r\n          len > 15 && (v > MAX_SAFE_INTEGER || v !== mathfloor(v))) {\r\n            throw Error\r\n             (tooManyDigits + (x.s * v));\r\n        }\r\n\r\n         // Overflow?\r\n        if ((e = e - i - 1) > MAX_EXP) {\r\n\r\n          // Infinity.\r\n          x.c = x.e = null;\r\n\r\n        // Underflow?\r\n        } else if (e < MIN_EXP) {\r\n\r\n          // Zero.\r\n          x.c = [x.e = 0];\r\n        } else {\r\n          x.e = e;\r\n          x.c = [];\r\n\r\n          // Transform base\r\n\r\n          // e is the base 10 exponent.\r\n          // i is where to slice str to get the first element of the coefficient array.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (e < 0) i += LOG_BASE;  // i < 1\r\n\r\n          if (i < len) {\r\n            if (i) x.c.push(+str.slice(0, i));\r\n\r\n            for (len -= LOG_BASE; i < len;) {\r\n              x.c.push(+str.slice(i, i += LOG_BASE));\r\n            }\r\n\r\n            i = LOG_BASE - (str = str.slice(i)).length;\r\n          } else {\r\n            i -= len;\r\n          }\r\n\r\n          for (; i--; str += '0');\r\n          x.c.push(+str);\r\n        }\r\n      } else {\r\n\r\n        // Zero.\r\n        x.c = [x.e = 0];\r\n      }\r\n    }\r\n\r\n\r\n    // CONSTRUCTOR PROPERTIES\r\n\r\n\r\n    BigNumber.clone = clone;\r\n\r\n    BigNumber.ROUND_UP = 0;\r\n    BigNumber.ROUND_DOWN = 1;\r\n    BigNumber.ROUND_CEIL = 2;\r\n    BigNumber.ROUND_FLOOR = 3;\r\n    BigNumber.ROUND_HALF_UP = 4;\r\n    BigNumber.ROUND_HALF_DOWN = 5;\r\n    BigNumber.ROUND_HALF_EVEN = 6;\r\n    BigNumber.ROUND_HALF_CEIL = 7;\r\n    BigNumber.ROUND_HALF_FLOOR = 8;\r\n    BigNumber.EUCLID = 9;\r\n\r\n\r\n    /*\r\n     * Configure infrequently-changing library-wide settings.\r\n     *\r\n     * Accept an object with the following optional properties (if the value of a property is\r\n     * a number, it must be an integer within the inclusive range stated):\r\n     *\r\n     *   DECIMAL_PLACES   {number}           0 to MAX\r\n     *   ROUNDING_MODE    {number}           0 to 8\r\n     *   EXPONENTIAL_AT   {number|number[]}  -MAX to MAX  or  [-MAX to 0, 0 to MAX]\r\n     *   RANGE            {number|number[]}  -MAX to MAX (not zero)  or  [-MAX to -1, 1 to MAX]\r\n     *   CRYPTO           {boolean}          true or false\r\n     *   MODULO_MODE      {number}           0 to 9\r\n     *   POW_PRECISION       {number}           0 to MAX\r\n     *   ALPHABET         {string}           A string of two or more unique characters which does\r\n     *                                       not contain '.'.\r\n     *   FORMAT           {object}           An object with some of the following properties:\r\n     *     prefix                 {string}\r\n     *     groupSize              {number}\r\n     *     secondaryGroupSize     {number}\r\n     *     groupSeparator         {string}\r\n     *     decimalSeparator       {string}\r\n     *     fractionGroupSize      {number}\r\n     *     fractionGroupSeparator {string}\r\n     *     suffix                 {string}\r\n     *\r\n     * (The values assigned to the above FORMAT object properties are not checked for validity.)\r\n     *\r\n     * E.g.\r\n     * BigNumber.config({ DECIMAL_PLACES : 20, ROUNDING_MODE : 4 })\r\n     *\r\n     * Ignore properties/parameters set to null or undefined, except for ALPHABET.\r\n     *\r\n     * Return an object with the properties current values.\r\n     */\r\n    BigNumber.config = BigNumber.set = function (obj) {\r\n      var p, v;\r\n\r\n      if (obj != null) {\r\n\r\n        if (typeof obj == 'object') {\r\n\r\n          // DECIMAL_PLACES {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] DECIMAL_PLACES {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'DECIMAL_PLACES')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            DECIMAL_PLACES = v;\r\n          }\r\n\r\n          // ROUNDING_MODE {number} Integer, 0 to 8 inclusive.\r\n          // '[BigNumber Error] ROUNDING_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'ROUNDING_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 8, p);\r\n            ROUNDING_MODE = v;\r\n          }\r\n\r\n          // EXPONENTIAL_AT {number|number[]}\r\n          // Integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to 0 inclusive, 0 to MAX inclusive].\r\n          // '[BigNumber Error] EXPONENTIAL_AT {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'EXPONENTIAL_AT')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, 0, p);\r\n              intCheck(v[1], 0, MAX, p);\r\n              TO_EXP_NEG = v[0];\r\n              TO_EXP_POS = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              TO_EXP_NEG = -(TO_EXP_POS = v < 0 ? -v : v);\r\n            }\r\n          }\r\n\r\n          // RANGE {number|number[]} Non-zero integer, -MAX to MAX inclusive or\r\n          // [integer -MAX to -1 inclusive, integer 1 to MAX inclusive].\r\n          // '[BigNumber Error] RANGE {not a primitive number|not an integer|out of range|cannot be zero}: {v}'\r\n          if (obj.hasOwnProperty(p = 'RANGE')) {\r\n            v = obj[p];\r\n            if (v && v.pop) {\r\n              intCheck(v[0], -MAX, -1, p);\r\n              intCheck(v[1], 1, MAX, p);\r\n              MIN_EXP = v[0];\r\n              MAX_EXP = v[1];\r\n            } else {\r\n              intCheck(v, -MAX, MAX, p);\r\n              if (v) {\r\n                MIN_EXP = -(MAX_EXP = v < 0 ? -v : v);\r\n              } else {\r\n                throw Error\r\n                 (bignumberError + p + ' cannot be zero: ' + v);\r\n              }\r\n            }\r\n          }\r\n\r\n          // CRYPTO {boolean} true or false.\r\n          // '[BigNumber Error] CRYPTO not true or false: {v}'\r\n          // '[BigNumber Error] crypto unavailable'\r\n          if (obj.hasOwnProperty(p = 'CRYPTO')) {\r\n            v = obj[p];\r\n            if (v === !!v) {\r\n              if (v) {\r\n                if (typeof crypto != 'undefined' && crypto &&\r\n                 (crypto.getRandomValues || crypto.randomBytes)) {\r\n                  CRYPTO = v;\r\n                } else {\r\n                  CRYPTO = !v;\r\n                  throw Error\r\n                   (bignumberError + 'crypto unavailable');\r\n                }\r\n              } else {\r\n                CRYPTO = v;\r\n              }\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' not true or false: ' + v);\r\n            }\r\n          }\r\n\r\n          // MODULO_MODE {number} Integer, 0 to 9 inclusive.\r\n          // '[BigNumber Error] MODULO_MODE {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'MODULO_MODE')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, 9, p);\r\n            MODULO_MODE = v;\r\n          }\r\n\r\n          // POW_PRECISION {number} Integer, 0 to MAX inclusive.\r\n          // '[BigNumber Error] POW_PRECISION {not a primitive number|not an integer|out of range}: {v}'\r\n          if (obj.hasOwnProperty(p = 'POW_PRECISION')) {\r\n            v = obj[p];\r\n            intCheck(v, 0, MAX, p);\r\n            POW_PRECISION = v;\r\n          }\r\n\r\n          // FORMAT {object}\r\n          // '[BigNumber Error] FORMAT not an object: {v}'\r\n          if (obj.hasOwnProperty(p = 'FORMAT')) {\r\n            v = obj[p];\r\n            if (typeof v == 'object') FORMAT = v;\r\n            else throw Error\r\n             (bignumberError + p + ' not an object: ' + v);\r\n          }\r\n\r\n          // ALPHABET {string}\r\n          // '[BigNumber Error] ALPHABET invalid: {v}'\r\n          if (obj.hasOwnProperty(p = 'ALPHABET')) {\r\n            v = obj[p];\r\n\r\n            // Disallow if less than two characters,\r\n            // or if it contains '+', '-', '.', whitespace, or a repeated character.\r\n            if (typeof v == 'string' && !/^.?$|[+\\-.\\s]|(.).*\\1/.test(v)) {\r\n              ALPHABET = v;\r\n            } else {\r\n              throw Error\r\n               (bignumberError + p + ' invalid: ' + v);\r\n            }\r\n          }\r\n\r\n        } else {\r\n\r\n          // '[BigNumber Error] Object expected: {v}'\r\n          throw Error\r\n           (bignumberError + 'Object expected: ' + obj);\r\n        }\r\n      }\r\n\r\n      return {\r\n        DECIMAL_PLACES: DECIMAL_PLACES,\r\n        ROUNDING_MODE: ROUNDING_MODE,\r\n        EXPONENTIAL_AT: [TO_EXP_NEG, TO_EXP_POS],\r\n        RANGE: [MIN_EXP, MAX_EXP],\r\n        CRYPTO: CRYPTO,\r\n        MODULO_MODE: MODULO_MODE,\r\n        POW_PRECISION: POW_PRECISION,\r\n        FORMAT: FORMAT,\r\n        ALPHABET: ALPHABET\r\n      };\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if v is a BigNumber instance, otherwise return false.\r\n     *\r\n     * If BigNumber.DEBUG is true, throw if a BigNumber instance is not well-formed.\r\n     *\r\n     * v {any}\r\n     *\r\n     * '[BigNumber Error] Invalid BigNumber: {v}'\r\n     */\r\n    BigNumber.isBigNumber = function (v) {\r\n      if (!v || v._isBigNumber !== true) return false;\r\n      if (!BigNumber.DEBUG) return true;\r\n\r\n      var i, n,\r\n        c = v.c,\r\n        e = v.e,\r\n        s = v.s;\r\n\r\n      out: if ({}.toString.call(c) == '[object Array]') {\r\n\r\n        if ((s === 1 || s === -1) && e >= -MAX && e <= MAX && e === mathfloor(e)) {\r\n\r\n          // If the first element is zero, the BigNumber value must be zero.\r\n          if (c[0] === 0) {\r\n            if (e === 0 && c.length === 1) return true;\r\n            break out;\r\n          }\r\n\r\n          // Calculate number of digits that c[0] should have, based on the exponent.\r\n          i = (e + 1) % LOG_BASE;\r\n          if (i < 1) i += LOG_BASE;\r\n\r\n          // Calculate number of digits of c[0].\r\n          //if (Math.ceil(Math.log(c[0] + 1) / Math.LN10) == i) {\r\n          if (String(c[0]).length == i) {\r\n\r\n            for (i = 0; i < c.length; i++) {\r\n              n = c[i];\r\n              if (n < 0 || n >= BASE || n !== mathfloor(n)) break out;\r\n            }\r\n\r\n            // Last element cannot be zero, unless it is the only element.\r\n            if (n !== 0) return true;\r\n          }\r\n        }\r\n\r\n      // Infinity/NaN\r\n      } else if (c === null && e === null && (s === null || s === 1 || s === -1)) {\r\n        return true;\r\n      }\r\n\r\n      throw Error\r\n        (bignumberError + 'Invalid BigNumber: ' + v);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the maximum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.maximum = BigNumber.max = function () {\r\n      return maxOrMin(arguments, P.lt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the minimum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.minimum = BigNumber.min = function () {\r\n      return maxOrMin(arguments, P.gt);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber with a random value equal to or greater than 0 and less than 1,\r\n     * and with dp, or DECIMAL_PLACES if dp is omitted, decimal places (or less if trailing\r\n     * zeros are produced).\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp}'\r\n     * '[BigNumber Error] crypto unavailable'\r\n     */\r\n    BigNumber.random = (function () {\r\n      var pow2_53 = 0x20000000000000;\r\n\r\n      // Return a 53 bit integer n, where 0 <= n < 9007199254740992.\r\n      // Check if Math.random() produces more than 32 bits of randomness.\r\n      // If it does, assume at least 53 bits are produced, otherwise assume at least 30 bits.\r\n      // 0x40000000 is 2^30, 0x800000 is 2^23, 0x1fffff is 2^21 - 1.\r\n      var random53bitInt = (Math.random() * pow2_53) & 0x1fffff\r\n       ? function () { return mathfloor(Math.random() * pow2_53); }\r\n       : function () { return ((Math.random() * 0x40000000 | 0) * 0x800000) +\r\n         (Math.random() * 0x800000 | 0); };\r\n\r\n      return function (dp) {\r\n        var a, b, e, k, v,\r\n          i = 0,\r\n          c = [],\r\n          rand = new BigNumber(ONE);\r\n\r\n        if (dp == null) dp = DECIMAL_PLACES;\r\n        else intCheck(dp, 0, MAX);\r\n\r\n        k = mathceil(dp / LOG_BASE);\r\n\r\n        if (CRYPTO) {\r\n\r\n          // Browsers supporting crypto.getRandomValues.\r\n          if (crypto.getRandomValues) {\r\n\r\n            a = crypto.getRandomValues(new Uint32Array(k *= 2));\r\n\r\n            for (; i < k;) {\r\n\r\n              // 53 bits:\r\n              // ((Math.pow(2, 32) - 1) * Math.pow(2, 21)).toString(2)\r\n              // 11111 11111111 11111111 11111111 11100000 00000000 00000000\r\n              // ((Math.pow(2, 32) - 1) >>> 11).toString(2)\r\n              //                                     11111 11111111 11111111\r\n              // 0x20000 is 2^21.\r\n              v = a[i] * 0x20000 + (a[i + 1] >>> 11);\r\n\r\n              // Rejection sampling:\r\n              // 0 <= v < 9007199254740992\r\n              // Probability that v >= 9e15, is\r\n              // 7199254740992 / 9007199254740992 ~= 0.0008, i.e. 1 in 1251\r\n              if (v >= 9e15) {\r\n                b = crypto.getRandomValues(new Uint32Array(2));\r\n                a[i] = b[0];\r\n                a[i + 1] = b[1];\r\n              } else {\r\n\r\n                // 0 <= v <= 8999999999999999\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 2;\r\n              }\r\n            }\r\n            i = k / 2;\r\n\r\n          // Node.js supporting crypto.randomBytes.\r\n          } else if (crypto.randomBytes) {\r\n\r\n            // buffer\r\n            a = crypto.randomBytes(k *= 7);\r\n\r\n            for (; i < k;) {\r\n\r\n              // 0x1000000000000 is 2^48, 0x10000000000 is 2^40\r\n              // 0x100000000 is 2^32, 0x1000000 is 2^24\r\n              // 11111 11111111 11111111 11111111 11111111 11111111 11111111\r\n              // 0 <= v < 9007199254740992\r\n              v = ((a[i] & 31) * 0x1000000000000) + (a[i + 1] * 0x10000000000) +\r\n                 (a[i + 2] * 0x100000000) + (a[i + 3] * 0x1000000) +\r\n                 (a[i + 4] << 16) + (a[i + 5] << 8) + a[i + 6];\r\n\r\n              if (v >= 9e15) {\r\n                crypto.randomBytes(7).copy(a, i);\r\n              } else {\r\n\r\n                // 0 <= (v % 1e14) <= 99999999999999\r\n                c.push(v % 1e14);\r\n                i += 7;\r\n              }\r\n            }\r\n            i = k / 7;\r\n          } else {\r\n            CRYPTO = false;\r\n            throw Error\r\n             (bignumberError + 'crypto unavailable');\r\n          }\r\n        }\r\n\r\n        // Use Math.random.\r\n        if (!CRYPTO) {\r\n\r\n          for (; i < k;) {\r\n            v = random53bitInt();\r\n            if (v < 9e15) c[i++] = v % 1e14;\r\n          }\r\n        }\r\n\r\n        k = c[--i];\r\n        dp %= LOG_BASE;\r\n\r\n        // Convert trailing digits to zeros according to dp.\r\n        if (k && dp) {\r\n          v = POWS_TEN[LOG_BASE - dp];\r\n          c[i] = mathfloor(k / v) * v;\r\n        }\r\n\r\n        // Remove trailing elements which are zero.\r\n        for (; c[i] === 0; c.pop(), i--);\r\n\r\n        // Zero?\r\n        if (i < 0) {\r\n          c = [e = 0];\r\n        } else {\r\n\r\n          // Remove leading elements which are zero and adjust exponent accordingly.\r\n          for (e = -1 ; c[0] === 0; c.splice(0, 1), e -= LOG_BASE);\r\n\r\n          // Count the digits of the first element of c to determine leading zeros, and...\r\n          for (i = 1, v = c[0]; v >= 10; v /= 10, i++);\r\n\r\n          // adjust the exponent accordingly.\r\n          if (i < LOG_BASE) e -= LOG_BASE - i;\r\n        }\r\n\r\n        rand.e = e;\r\n        rand.c = c;\r\n        return rand;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the sum of the arguments.\r\n     *\r\n     * arguments {number|string|BigNumber}\r\n     */\r\n    BigNumber.sum = function () {\r\n      var i = 1,\r\n        args = arguments,\r\n        sum = new BigNumber(args[0]);\r\n      for (; i < args.length;) sum = sum.plus(args[i++]);\r\n      return sum;\r\n    };\r\n\r\n\r\n    // PRIVATE FUNCTIONS\r\n\r\n\r\n    // Called by BigNumber and BigNumber.prototype.toString.\r\n    convertBase = (function () {\r\n      var decimal = '0123456789';\r\n\r\n      /*\r\n       * Convert string of baseIn to an array of numbers of baseOut.\r\n       * Eg. toBaseOut('255', 10, 16) returns [15, 15].\r\n       * Eg. toBaseOut('ff', 16, 10) returns [2, 5, 5].\r\n       */\r\n      function toBaseOut(str, baseIn, baseOut, alphabet) {\r\n        var j,\r\n          arr = [0],\r\n          arrL,\r\n          i = 0,\r\n          len = str.length;\r\n\r\n        for (; i < len;) {\r\n          for (arrL = arr.length; arrL--; arr[arrL] *= baseIn);\r\n\r\n          arr[0] += alphabet.indexOf(str.charAt(i++));\r\n\r\n          for (j = 0; j < arr.length; j++) {\r\n\r\n            if (arr[j] > baseOut - 1) {\r\n              if (arr[j + 1] == null) arr[j + 1] = 0;\r\n              arr[j + 1] += arr[j] / baseOut | 0;\r\n              arr[j] %= baseOut;\r\n            }\r\n          }\r\n        }\r\n\r\n        return arr.reverse();\r\n      }\r\n\r\n      // Convert a numeric string of baseIn to a numeric string of baseOut.\r\n      // If the caller is toString, we are converting from base 10 to baseOut.\r\n      // If the caller is BigNumber, we are converting from baseIn to base 10.\r\n      return function (str, baseIn, baseOut, sign, callerIsToString) {\r\n        var alphabet, d, e, k, r, x, xc, y,\r\n          i = str.indexOf('.'),\r\n          dp = DECIMAL_PLACES,\r\n          rm = ROUNDING_MODE;\r\n\r\n        // Non-integer.\r\n        if (i >= 0) {\r\n          k = POW_PRECISION;\r\n\r\n          // Unlimited precision.\r\n          POW_PRECISION = 0;\r\n          str = str.replace('.', '');\r\n          y = new BigNumber(baseIn);\r\n          x = y.pow(str.length - i);\r\n          POW_PRECISION = k;\r\n\r\n          // Convert str as if an integer, then restore the fraction part by dividing the\r\n          // result by its base raised to a power.\r\n\r\n          y.c = toBaseOut(toFixedPoint(coeffToString(x.c), x.e, '0'),\r\n           10, baseOut, decimal);\r\n          y.e = y.c.length;\r\n        }\r\n\r\n        // Convert the number as integer.\r\n\r\n        xc = toBaseOut(str, baseIn, baseOut, callerIsToString\r\n         ? (alphabet = ALPHABET, decimal)\r\n         : (alphabet = decimal, ALPHABET));\r\n\r\n        // xc now represents str as an integer and converted to baseOut. e is the exponent.\r\n        e = k = xc.length;\r\n\r\n        // Remove trailing zeros.\r\n        for (; xc[--k] == 0; xc.pop());\r\n\r\n        // Zero?\r\n        if (!xc[0]) return alphabet.charAt(0);\r\n\r\n        // Does str represent an integer? If so, no need for the division.\r\n        if (i < 0) {\r\n          --e;\r\n        } else {\r\n          x.c = xc;\r\n          x.e = e;\r\n\r\n          // The sign is needed for correct rounding.\r\n          x.s = sign;\r\n          x = div(x, y, dp, rm, baseOut);\r\n          xc = x.c;\r\n          r = x.r;\r\n          e = x.e;\r\n        }\r\n\r\n        // xc now represents str converted to baseOut.\r\n\r\n        // THe index of the rounding digit.\r\n        d = e + dp + 1;\r\n\r\n        // The rounding digit: the digit to the right of the digit that may be rounded up.\r\n        i = xc[d];\r\n\r\n        // Look at the rounding digits and mode to determine whether to round up.\r\n\r\n        k = baseOut / 2;\r\n        r = r || d < 0 || xc[d + 1] != null;\r\n\r\n        r = rm < 4 ? (i != null || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n              : i > k || i == k &&(rm == 4 || r || rm == 6 && xc[d - 1] & 1 ||\r\n               rm == (x.s < 0 ? 8 : 7));\r\n\r\n        // If the index of the rounding digit is not greater than zero, or xc represents\r\n        // zero, then the result of the base conversion is zero or, if rounding up, a value\r\n        // such as 0.00001.\r\n        if (d < 1 || !xc[0]) {\r\n\r\n          // 1^-dp or 0\r\n          str = r ? toFixedPoint(alphabet.charAt(1), -dp, alphabet.charAt(0)) : alphabet.charAt(0);\r\n        } else {\r\n\r\n          // Truncate xc to the required number of decimal places.\r\n          xc.length = d;\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            // Rounding up may mean the previous digit has to be rounded up and so on.\r\n            for (--baseOut; ++xc[--d] > baseOut;) {\r\n              xc[d] = 0;\r\n\r\n              if (!d) {\r\n                ++e;\r\n                xc = [1].concat(xc);\r\n              }\r\n            }\r\n          }\r\n\r\n          // Determine trailing zeros.\r\n          for (k = xc.length; !xc[--k];);\r\n\r\n          // E.g. [4, 11, 15] becomes 4bf.\r\n          for (i = 0, str = ''; i <= k; str += alphabet.charAt(xc[i++]));\r\n\r\n          // Add leading zeros, decimal point and trailing zeros as required.\r\n          str = toFixedPoint(str, e, alphabet.charAt(0));\r\n        }\r\n\r\n        // The caller will add the sign.\r\n        return str;\r\n      };\r\n    })();\r\n\r\n\r\n    // Perform division in the specified base. Called by div and convertBase.\r\n    div = (function () {\r\n\r\n      // Assume non-zero x and k.\r\n      function multiply(x, k, base) {\r\n        var m, temp, xlo, xhi,\r\n          carry = 0,\r\n          i = x.length,\r\n          klo = k % SQRT_BASE,\r\n          khi = k / SQRT_BASE | 0;\r\n\r\n        for (x = x.slice(); i--;) {\r\n          xlo = x[i] % SQRT_BASE;\r\n          xhi = x[i] / SQRT_BASE | 0;\r\n          m = khi * xlo + xhi * klo;\r\n          temp = klo * xlo + ((m % SQRT_BASE) * SQRT_BASE) + carry;\r\n          carry = (temp / base | 0) + (m / SQRT_BASE | 0) + khi * xhi;\r\n          x[i] = temp % base;\r\n        }\r\n\r\n        if (carry) x = [carry].concat(x);\r\n\r\n        return x;\r\n      }\r\n\r\n      function compare(a, b, aL, bL) {\r\n        var i, cmp;\r\n\r\n        if (aL != bL) {\r\n          cmp = aL > bL ? 1 : -1;\r\n        } else {\r\n\r\n          for (i = cmp = 0; i < aL; i++) {\r\n\r\n            if (a[i] != b[i]) {\r\n              cmp = a[i] > b[i] ? 1 : -1;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        return cmp;\r\n      }\r\n\r\n      function subtract(a, b, aL, base) {\r\n        var i = 0;\r\n\r\n        // Subtract b from a.\r\n        for (; aL--;) {\r\n          a[aL] -= i;\r\n          i = a[aL] < b[aL] ? 1 : 0;\r\n          a[aL] = i * base + a[aL] - b[aL];\r\n        }\r\n\r\n        // Remove leading zeros.\r\n        for (; !a[0] && a.length > 1; a.splice(0, 1));\r\n      }\r\n\r\n      // x: dividend, y: divisor.\r\n      return function (x, y, dp, rm, base) {\r\n        var cmp, e, i, more, n, prod, prodL, q, qc, rem, remL, rem0, xi, xL, yc0,\r\n          yL, yz,\r\n          s = x.s == y.s ? 1 : -1,\r\n          xc = x.c,\r\n          yc = y.c;\r\n\r\n        // Either NaN, Infinity or 0?\r\n        if (!xc || !xc[0] || !yc || !yc[0]) {\r\n\r\n          return new BigNumber(\r\n\r\n           // Return NaN if either NaN, or both Infinity or 0.\r\n           !x.s || !y.s || (xc ? yc && xc[0] == yc[0] : !yc) ? NaN :\r\n\r\n            // Return ±0 if x is ±0 or y is ±Infinity, or return ±Infinity as y is ±0.\r\n            xc && xc[0] == 0 || !yc ? s * 0 : s / 0\r\n         );\r\n        }\r\n\r\n        q = new BigNumber(s);\r\n        qc = q.c = [];\r\n        e = x.e - y.e;\r\n        s = dp + e + 1;\r\n\r\n        if (!base) {\r\n          base = BASE;\r\n          e = bitFloor(x.e / LOG_BASE) - bitFloor(y.e / LOG_BASE);\r\n          s = s / LOG_BASE | 0;\r\n        }\r\n\r\n        // Result exponent may be one less then the current value of e.\r\n        // The coefficients of the BigNumbers from convertBase may have trailing zeros.\r\n        for (i = 0; yc[i] == (xc[i] || 0); i++);\r\n\r\n        if (yc[i] > (xc[i] || 0)) e--;\r\n\r\n        if (s < 0) {\r\n          qc.push(1);\r\n          more = true;\r\n        } else {\r\n          xL = xc.length;\r\n          yL = yc.length;\r\n          i = 0;\r\n          s += 2;\r\n\r\n          // Normalise xc and yc so highest order digit of yc is >= base / 2.\r\n\r\n          n = mathfloor(base / (yc[0] + 1));\r\n\r\n          // Not necessary, but to handle odd bases where yc[0] == (base / 2) - 1.\r\n          // if (n > 1 || n++ == 1 && yc[0] < base / 2) {\r\n          if (n > 1) {\r\n            yc = multiply(yc, n, base);\r\n            xc = multiply(xc, n, base);\r\n            yL = yc.length;\r\n            xL = xc.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xc.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL; rem[remL++] = 0);\r\n          yz = yc.slice();\r\n          yz = [0].concat(yz);\r\n          yc0 = yc[0];\r\n          if (yc[1] >= base / 2) yc0++;\r\n          // Not necessary, but to prevent trial digit n > base, when using base 3.\r\n          // else if (base == 3 && yc0 == 1) yc0 = 1 + 1e-15;\r\n\r\n          do {\r\n            n = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yc, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, n.\r\n\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // n is how many times the divisor goes into the current remainder.\r\n              n = mathfloor(rem0 / yc0);\r\n\r\n              //  Algorithm:\r\n              //  product = divisor multiplied by trial digit (n).\r\n              //  Compare product and remainder.\r\n              //  If product is greater than remainder:\r\n              //    Subtract divisor from product, decrement trial digit.\r\n              //  Subtract product from remainder.\r\n              //  If product was less than remainder at the last compare:\r\n              //    Compare new remainder and divisor.\r\n              //    If remainder is greater than divisor:\r\n              //      Subtract divisor from remainder, increment trial digit.\r\n\r\n              if (n > 1) {\r\n\r\n                // n may be > base only when base is 3.\r\n                if (n >= base) n = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiply(yc, n, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                // If product > remainder then trial digit n too high.\r\n                // n is 1 too high about 5% of the time, and is not known to have\r\n                // ever been more than 1 too high.\r\n                while (compare(prod, rem, prodL, remL) == 1) {\r\n                  n--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yc, prodL, base);\r\n                  prodL = prod.length;\r\n                  cmp = 1;\r\n                }\r\n              } else {\r\n\r\n                // n is 0 or 1, cmp is -1.\r\n                // If n is 0, there is no need to compare yc and rem again below,\r\n                // so change cmp to 1 to avoid it.\r\n                // If n is 1, leave cmp as -1, so yc and rem are compared again.\r\n                if (n == 0) {\r\n\r\n                  // divisor < remainder, so n must be at least 1.\r\n                  cmp = n = 1;\r\n                }\r\n\r\n                // product = divisor\r\n                prod = yc.slice();\r\n                prodL = prod.length;\r\n              }\r\n\r\n              if (prodL < remL) prod = [0].concat(prod);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n              remL = rem.length;\r\n\r\n               // If product was < remainder.\r\n              if (cmp == -1) {\r\n\r\n                // Compare divisor and new remainder.\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                // Trial digit n too low.\r\n                // n is 1 too low about 5% of the time, and very rarely 2 too low.\r\n                while (compare(yc, rem, yL, remL) < 1) {\r\n                  n++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yc, remL, base);\r\n                  remL = rem.length;\r\n                }\r\n              }\r\n            } else if (cmp === 0) {\r\n              n++;\r\n              rem = [0];\r\n            } // else cmp === 1 and n will be 0\r\n\r\n            // Add the next digit, n, to the result array.\r\n            qc[i++] = n;\r\n\r\n            // Update the remainder.\r\n            if (rem[0]) {\r\n              rem[remL++] = xc[xi] || 0;\r\n            } else {\r\n              rem = [xc[xi]];\r\n              remL = 1;\r\n            }\r\n          } while ((xi++ < xL || rem[0] != null) && s--);\r\n\r\n          more = rem[0] != null;\r\n\r\n          // Leading zero?\r\n          if (!qc[0]) qc.splice(0, 1);\r\n        }\r\n\r\n        if (base == BASE) {\r\n\r\n          // To calculate q.e, first get the number of digits of qc[0].\r\n          for (i = 1, s = qc[0]; s >= 10; s /= 10, i++);\r\n\r\n          round(q, dp + (q.e = i + e * LOG_BASE - 1) + 1, rm, more);\r\n\r\n        // Caller is convertBase.\r\n        } else {\r\n          q.e = e;\r\n          q.r = +more;\r\n        }\r\n\r\n        return q;\r\n      };\r\n    })();\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of BigNumber n in fixed-point or exponential\r\n     * notation rounded to the specified decimal places or significant digits.\r\n     *\r\n     * n: a BigNumber.\r\n     * i: the index of the last digit required (i.e. the digit that may be rounded up).\r\n     * rm: the rounding mode.\r\n     * id: 1 (toExponential) or 2 (toPrecision).\r\n     */\r\n    function format(n, i, rm, id) {\r\n      var c0, e, ne, len, str;\r\n\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n\r\n      if (!n.c) return n.toString();\r\n\r\n      c0 = n.c[0];\r\n      ne = n.e;\r\n\r\n      if (i == null) {\r\n        str = coeffToString(n.c);\r\n        str = id == 1 || id == 2 && (ne <= TO_EXP_NEG || ne >= TO_EXP_POS)\r\n         ? toExponential(str, ne)\r\n         : toFixedPoint(str, ne, '0');\r\n      } else {\r\n        n = round(new BigNumber(n), i, rm);\r\n\r\n        // n.e may have changed if the value was rounded up.\r\n        e = n.e;\r\n\r\n        str = coeffToString(n.c);\r\n        len = str.length;\r\n\r\n        // toPrecision returns exponential notation if the number of significant digits\r\n        // specified is less than the number of digits necessary to represent the integer\r\n        // part of the value in fixed-point notation.\r\n\r\n        // Exponential notation.\r\n        if (id == 1 || id == 2 && (i <= e || e <= TO_EXP_NEG)) {\r\n\r\n          // Append zeros?\r\n          for (; len < i; str += '0', len++);\r\n          str = toExponential(str, e);\r\n\r\n        // Fixed-point notation.\r\n        } else {\r\n          i -= ne;\r\n          str = toFixedPoint(str, e, '0');\r\n\r\n          // Append zeros?\r\n          if (e + 1 > len) {\r\n            if (--i > 0) for (str += '.'; i--; str += '0');\r\n          } else {\r\n            i += e - len;\r\n            if (i > 0) {\r\n              if (e + 1 == len) str += '.';\r\n              for (; i--; str += '0');\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return n.s < 0 && c0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // Handle BigNumber.max and BigNumber.min.\r\n    function maxOrMin(args, method) {\r\n      var n,\r\n        i = 1,\r\n        m = new BigNumber(args[0]);\r\n\r\n      for (; i < args.length; i++) {\r\n        n = new BigNumber(args[i]);\r\n\r\n        // If any number is NaN, return NaN.\r\n        if (!n.s) {\r\n          m = n;\r\n          break;\r\n        } else if (method.call(m, n)) {\r\n          m = n;\r\n        }\r\n      }\r\n\r\n      return m;\r\n    }\r\n\r\n\r\n    /*\r\n     * Strip trailing zeros, calculate base 10 exponent and check against MIN_EXP and MAX_EXP.\r\n     * Called by minus, plus and times.\r\n     */\r\n    function normalise(n, c, e) {\r\n      var i = 1,\r\n        j = c.length;\r\n\r\n       // Remove trailing zeros.\r\n      for (; !c[--j]; c.pop());\r\n\r\n      // Calculate the base 10 exponent. First get the number of digits of c[0].\r\n      for (j = c[0]; j >= 10; j /= 10, i++);\r\n\r\n      // Overflow?\r\n      if ((e = i + e * LOG_BASE - 1) > MAX_EXP) {\r\n\r\n        // Infinity.\r\n        n.c = n.e = null;\r\n\r\n      // Underflow?\r\n      } else if (e < MIN_EXP) {\r\n\r\n        // Zero.\r\n        n.c = [n.e = 0];\r\n      } else {\r\n        n.e = e;\r\n        n.c = c;\r\n      }\r\n\r\n      return n;\r\n    }\r\n\r\n\r\n    // Handle values that fail the validity test in BigNumber.\r\n    parseNumeric = (function () {\r\n      var basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i,\r\n        dotAfter = /^([^.]+)\\.$/,\r\n        dotBefore = /^\\.([^.]+)$/,\r\n        isInfinityOrNaN = /^-?(Infinity|NaN)$/,\r\n        whitespaceOrPlus = /^\\s*\\+(?=[\\w.])|^\\s+|\\s+$/g;\r\n\r\n      return function (x, str, isNum, b) {\r\n        var base,\r\n          s = isNum ? str : str.replace(whitespaceOrPlus, '');\r\n\r\n        // No exception on ±Infinity or NaN.\r\n        if (isInfinityOrNaN.test(s)) {\r\n          x.s = isNaN(s) ? null : s < 0 ? -1 : 1;\r\n        } else {\r\n          if (!isNum) {\r\n\r\n            // basePrefix = /^(-?)0([xbo])(?=\\w[\\w.]*$)/i\r\n            s = s.replace(basePrefix, function (m, p1, p2) {\r\n              base = (p2 = p2.toLowerCase()) == 'x' ? 16 : p2 == 'b' ? 2 : 8;\r\n              return !b || b == base ? p1 : m;\r\n            });\r\n\r\n            if (b) {\r\n              base = b;\r\n\r\n              // E.g. '1.' to '1', '.1' to '0.1'\r\n              s = s.replace(dotAfter, '$1').replace(dotBefore, '0.$1');\r\n            }\r\n\r\n            if (str != s) return new BigNumber(s, base);\r\n          }\r\n\r\n          // '[BigNumber Error] Not a number: {n}'\r\n          // '[BigNumber Error] Not a base {b} number: {n}'\r\n          if (BigNumber.DEBUG) {\r\n            throw Error\r\n              (bignumberError + 'Not a' + (b ? ' base ' + b : '') + ' number: ' + str);\r\n          }\r\n\r\n          // NaN\r\n          x.s = null;\r\n        }\r\n\r\n        x.c = x.e = null;\r\n      }\r\n    })();\r\n\r\n\r\n    /*\r\n     * Round x to sd significant digits using rounding mode rm. Check for over/under-flow.\r\n     * If r is truthy, it is known that there are more digits after the rounding digit.\r\n     */\r\n    function round(x, sd, rm, r) {\r\n      var d, i, j, k, n, ni, rd,\r\n        xc = x.c,\r\n        pows10 = POWS_TEN;\r\n\r\n      // if x is not Infinity or NaN...\r\n      if (xc) {\r\n\r\n        // rd is the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        // n is a base 1e14 number, the value of the element of array x.c containing rd.\r\n        // ni is the index of n within x.c.\r\n        // d is the number of digits of n.\r\n        // i is the index of rd within n including leading zeros.\r\n        // j is the actual index of rd within n (if < 0, rd is a leading zero).\r\n        out: {\r\n\r\n          // Get the number of digits of the first element of xc.\r\n          for (d = 1, k = xc[0]; k >= 10; k /= 10, d++);\r\n          i = sd - d;\r\n\r\n          // If the rounding digit is in the first element of xc...\r\n          if (i < 0) {\r\n            i += LOG_BASE;\r\n            j = sd;\r\n            n = xc[ni = 0];\r\n\r\n            // Get the rounding digit at index j of n.\r\n            rd = n / pows10[d - j - 1] % 10 | 0;\r\n          } else {\r\n            ni = mathceil((i + 1) / LOG_BASE);\r\n\r\n            if (ni >= xc.length) {\r\n\r\n              if (r) {\r\n\r\n                // Needed by sqrt.\r\n                for (; xc.length <= ni; xc.push(0));\r\n                n = rd = 0;\r\n                d = 1;\r\n                i %= LOG_BASE;\r\n                j = i - LOG_BASE + 1;\r\n              } else {\r\n                break out;\r\n              }\r\n            } else {\r\n              n = k = xc[ni];\r\n\r\n              // Get the number of digits of n.\r\n              for (d = 1; k >= 10; k /= 10, d++);\r\n\r\n              // Get the index of rd within n.\r\n              i %= LOG_BASE;\r\n\r\n              // Get the index of rd within n, adjusted for leading zeros.\r\n              // The number of leading zeros of n is given by LOG_BASE - d.\r\n              j = i - LOG_BASE + d;\r\n\r\n              // Get the rounding digit at index j of n.\r\n              rd = j < 0 ? 0 : n / pows10[d - j - 1] % 10 | 0;\r\n            }\r\n          }\r\n\r\n          r = r || sd < 0 ||\r\n\r\n          // Are there any non-zero digits after the rounding digit?\r\n          // The expression  n % pows10[d - j - 1]  returns all digits of n to the right\r\n          // of the digit at j, e.g. if n is 908714 and j is 2, the expression gives 714.\r\n           xc[ni + 1] != null || (j < 0 ? n : n % pows10[d - j - 1]);\r\n\r\n          r = rm < 4\r\n           ? (rd || r) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n           : rd > 5 || rd == 5 && (rm == 4 || r || rm == 6 &&\r\n\r\n            // Check whether the digit to the left of the rounding digit is odd.\r\n            ((i > 0 ? j > 0 ? n / pows10[d - j] : 0 : xc[ni - 1]) % 10) & 1 ||\r\n             rm == (x.s < 0 ? 8 : 7));\r\n\r\n          if (sd < 1 || !xc[0]) {\r\n            xc.length = 0;\r\n\r\n            if (r) {\r\n\r\n              // Convert sd to decimal places.\r\n              sd -= x.e + 1;\r\n\r\n              // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n              xc[0] = pows10[(LOG_BASE - sd % LOG_BASE) % LOG_BASE];\r\n              x.e = -sd || 0;\r\n            } else {\r\n\r\n              // Zero.\r\n              xc[0] = x.e = 0;\r\n            }\r\n\r\n            return x;\r\n          }\r\n\r\n          // Remove excess digits.\r\n          if (i == 0) {\r\n            xc.length = ni;\r\n            k = 1;\r\n            ni--;\r\n          } else {\r\n            xc.length = ni + 1;\r\n            k = pows10[LOG_BASE - i];\r\n\r\n            // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n            // j > 0 means i > number of leading zeros of n.\r\n            xc[ni] = j > 0 ? mathfloor(n / pows10[d - j] % pows10[j]) * k : 0;\r\n          }\r\n\r\n          // Round up?\r\n          if (r) {\r\n\r\n            for (; ;) {\r\n\r\n              // If the digit to be rounded up is in the first element of xc...\r\n              if (ni == 0) {\r\n\r\n                // i will be the length of xc[0] before k is added.\r\n                for (i = 1, j = xc[0]; j >= 10; j /= 10, i++);\r\n                j = xc[0] += k;\r\n                for (k = 1; j >= 10; j /= 10, k++);\r\n\r\n                // if i != k the length has increased.\r\n                if (i != k) {\r\n                  x.e++;\r\n                  if (xc[0] == BASE) xc[0] = 1;\r\n                }\r\n\r\n                break;\r\n              } else {\r\n                xc[ni] += k;\r\n                if (xc[ni] != BASE) break;\r\n                xc[ni--] = 0;\r\n                k = 1;\r\n              }\r\n            }\r\n          }\r\n\r\n          // Remove trailing zeros.\r\n          for (i = xc.length; xc[--i] === 0; xc.pop());\r\n        }\r\n\r\n        // Overflow? Infinity.\r\n        if (x.e > MAX_EXP) {\r\n          x.c = x.e = null;\r\n\r\n        // Underflow? Zero.\r\n        } else if (x.e < MIN_EXP) {\r\n          x.c = [x.e = 0];\r\n        }\r\n      }\r\n\r\n      return x;\r\n    }\r\n\r\n\r\n    function valueOf(n) {\r\n      var str,\r\n        e = n.e;\r\n\r\n      if (e === null) return n.toString();\r\n\r\n      str = coeffToString(n.c);\r\n\r\n      str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n        ? toExponential(str, e)\r\n        : toFixedPoint(str, e, '0');\r\n\r\n      return n.s < 0 ? '-' + str : str;\r\n    }\r\n\r\n\r\n    // PROTOTYPE/INSTANCE METHODS\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the absolute value of this BigNumber.\r\n     */\r\n    P.absoluteValue = P.abs = function () {\r\n      var x = new BigNumber(this);\r\n      if (x.s < 0) x.s = 1;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return\r\n     *   1 if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     *   -1 if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     *   0 if they have the same value,\r\n     *   or null if the value of either is NaN.\r\n     */\r\n    P.comparedTo = function (y, b) {\r\n      return compare(this, new BigNumber(y, b));\r\n    };\r\n\r\n\r\n    /*\r\n     * If dp is undefined or null or true or false, return the number of decimal places of the\r\n     * value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     *\r\n     * Otherwise, if dp is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of dp decimal places using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [dp] {number} Decimal places: integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.decimalPlaces = P.dp = function (dp, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), dp + x.e + 1, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      n = ((v = c.length - 1) - bitFloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last number.\r\n      if (v = c[v]) for (; v % 10 == 0; v /= 10, n--);\r\n      if (n < 0) n = 0;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n / 0 = I\r\n     *  n / N = N\r\n     *  n / I = 0\r\n     *  0 / n = 0\r\n     *  0 / 0 = N\r\n     *  0 / N = N\r\n     *  0 / I = 0\r\n     *  N / n = N\r\n     *  N / 0 = N\r\n     *  N / N = N\r\n     *  N / I = N\r\n     *  I / n = I\r\n     *  I / 0 = I\r\n     *  I / N = N\r\n     *  I / I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber divided by the value of\r\n     * BigNumber(y, b), rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.dividedBy = P.div = function (y, b) {\r\n      return div(this, new BigNumber(y, b), DECIMAL_PLACES, ROUNDING_MODE);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the integer part of dividing the value of this\r\n     * BigNumber by the value of BigNumber(y, b).\r\n     */\r\n    P.dividedToIntegerBy = P.idiv = function (y, b) {\r\n      return div(this, new BigNumber(y, b), 0, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a BigNumber whose value is the value of this BigNumber exponentiated by n.\r\n     *\r\n     * If m is present, return the result modulo m.\r\n     * If n is negative round according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     * If POW_PRECISION is non-zero and m is not present, round to POW_PRECISION using ROUNDING_MODE.\r\n     *\r\n     * The modular power operation works efficiently when x, n, and m are integers, otherwise it\r\n     * is equivalent to calculating x.exponentiatedBy(n).modulo(m) with a POW_PRECISION of 0.\r\n     *\r\n     * n {number|string|BigNumber} The exponent. An integer.\r\n     * [m] {number|string|BigNumber} The modulus.\r\n     *\r\n     * '[BigNumber Error] Exponent not an integer: {n}'\r\n     */\r\n    P.exponentiatedBy = P.pow = function (n, m) {\r\n      var half, isModExp, i, k, more, nIsBig, nIsNeg, nIsOdd, y,\r\n        x = this;\r\n\r\n      n = new BigNumber(n);\r\n\r\n      // Allow NaN and ±Infinity, but not other non-integers.\r\n      if (n.c && !n.isInteger()) {\r\n        throw Error\r\n          (bignumberError + 'Exponent not an integer: ' + valueOf(n));\r\n      }\r\n\r\n      if (m != null) m = new BigNumber(m);\r\n\r\n      // Exponent of MAX_SAFE_INTEGER is 15.\r\n      nIsBig = n.e > 14;\r\n\r\n      // If x is NaN, ±Infinity, ±0 or ±1, or n is ±Infinity, NaN or ±0.\r\n      if (!x.c || !x.c[0] || x.c[0] == 1 && !x.e && x.c.length == 1 || !n.c || !n.c[0]) {\r\n\r\n        // The sign of the result of pow when x is negative depends on the evenness of n.\r\n        // If +n overflows to ±Infinity, the evenness of n would be not be known.\r\n        y = new BigNumber(Math.pow(+valueOf(x), nIsBig ? 2 - isOdd(n) : +valueOf(n)));\r\n        return m ? y.mod(m) : y;\r\n      }\r\n\r\n      nIsNeg = n.s < 0;\r\n\r\n      if (m) {\r\n\r\n        // x % m returns NaN if abs(m) is zero, or m is NaN.\r\n        if (m.c ? !m.c[0] : !m.s) return new BigNumber(NaN);\r\n\r\n        isModExp = !nIsNeg && x.isInteger() && m.isInteger();\r\n\r\n        if (isModExp) x = x.mod(m);\r\n\r\n      // Overflow to ±Infinity: >=2**1e10 or >=1.0000024**1e15.\r\n      // Underflow to ±0: <=0.79**1e10 or <=0.9999975**1e15.\r\n      } else if (n.e > 9 && (x.e > 0 || x.e < -1 || (x.e == 0\r\n        // [1, 240000000]\r\n        ? x.c[0] > 1 || nIsBig && x.c[1] >= 24e7\r\n        // [80000000000000]  [99999750000000]\r\n        : x.c[0] < 8e13 || nIsBig && x.c[0] <= 9999975e7))) {\r\n\r\n        // If x is negative and n is odd, k = -0, else k = 0.\r\n        k = x.s < 0 && isOdd(n) ? -0 : 0;\r\n\r\n        // If x >= 1, k = ±Infinity.\r\n        if (x.e > -1) k = 1 / k;\r\n\r\n        // If n is negative return ±0, else return ±Infinity.\r\n        return new BigNumber(nIsNeg ? 1 / k : k);\r\n\r\n      } else if (POW_PRECISION) {\r\n\r\n        // Truncating each coefficient array to a length of k after each multiplication\r\n        // equates to truncating significant digits to POW_PRECISION + [28, 41],\r\n        // i.e. there will be a minimum of 28 guard digits retained.\r\n        k = mathceil(POW_PRECISION / LOG_BASE + 2);\r\n      }\r\n\r\n      if (nIsBig) {\r\n        half = new BigNumber(0.5);\r\n        if (nIsNeg) n.s = 1;\r\n        nIsOdd = isOdd(n);\r\n      } else {\r\n        i = Math.abs(+valueOf(n));\r\n        nIsOdd = i % 2;\r\n      }\r\n\r\n      y = new BigNumber(ONE);\r\n\r\n      // Performs 54 loop iterations for n of 9007199254740991.\r\n      for (; ;) {\r\n\r\n        if (nIsOdd) {\r\n          y = y.times(x);\r\n          if (!y.c) break;\r\n\r\n          if (k) {\r\n            if (y.c.length > k) y.c.length = k;\r\n          } else if (isModExp) {\r\n            y = y.mod(m);    //y = y.minus(div(y, m, 0, MODULO_MODE).times(m));\r\n          }\r\n        }\r\n\r\n        if (i) {\r\n          i = mathfloor(i / 2);\r\n          if (i === 0) break;\r\n          nIsOdd = i % 2;\r\n        } else {\r\n          n = n.times(half);\r\n          round(n, n.e + 1, 1);\r\n\r\n          if (n.e > 14) {\r\n            nIsOdd = isOdd(n);\r\n          } else {\r\n            i = +valueOf(n);\r\n            if (i === 0) break;\r\n            nIsOdd = i % 2;\r\n          }\r\n        }\r\n\r\n        x = x.times(x);\r\n\r\n        if (k) {\r\n          if (x.c && x.c.length > k) x.c.length = k;\r\n        } else if (isModExp) {\r\n          x = x.mod(m);    //x = x.minus(div(x, m, 0, MODULO_MODE).times(m));\r\n        }\r\n      }\r\n\r\n      if (isModExp) return y;\r\n      if (nIsNeg) y = ONE.div(y);\r\n\r\n      return m ? y.mod(m) : k ? round(y, POW_PRECISION, ROUNDING_MODE, more) : y;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber rounded to an integer\r\n     * using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {rm}'\r\n     */\r\n    P.integerValue = function (rm) {\r\n      var n = new BigNumber(this);\r\n      if (rm == null) rm = ROUNDING_MODE;\r\n      else intCheck(rm, 0, 8);\r\n      return round(n, n.e + 1, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is equal to the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isEqualTo = P.eq = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is a finite number, otherwise return false.\r\n     */\r\n    P.isFinite = function () {\r\n      return !!this.c;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isGreaterThan = P.gt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is greater than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isGreaterThanOrEqualTo = P.gte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === 1 || b === 0;\r\n\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is an integer, otherwise return false.\r\n     */\r\n    P.isInteger = function () {\r\n      return !!this.c && bitFloor(this.e / LOG_BASE) > this.c.length - 2;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than the value of BigNumber(y, b),\r\n     * otherwise return false.\r\n     */\r\n    P.isLessThan = P.lt = function (y, b) {\r\n      return compare(this, new BigNumber(y, b)) < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is less than or equal to the value of\r\n     * BigNumber(y, b), otherwise return false.\r\n     */\r\n    P.isLessThanOrEqualTo = P.lte = function (y, b) {\r\n      return (b = compare(this, new BigNumber(y, b))) === -1 || b === 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is NaN, otherwise return false.\r\n     */\r\n    P.isNaN = function () {\r\n      return !this.s;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is negative, otherwise return false.\r\n     */\r\n    P.isNegative = function () {\r\n      return this.s < 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is positive, otherwise return false.\r\n     */\r\n    P.isPositive = function () {\r\n      return this.s > 0;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return true if the value of this BigNumber is 0 or -0, otherwise return false.\r\n     */\r\n    P.isZero = function () {\r\n      return !!this.c && this.c[0] == 0;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n - 0 = n\r\n     *  n - N = N\r\n     *  n - I = -I\r\n     *  0 - n = -n\r\n     *  0 - 0 = 0\r\n     *  0 - N = N\r\n     *  0 - I = -I\r\n     *  N - n = N\r\n     *  N - 0 = N\r\n     *  N - N = N\r\n     *  N - I = N\r\n     *  I - n = I\r\n     *  I - 0 = I\r\n     *  I - N = N\r\n     *  I - I = N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber minus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.minus = function (y, b) {\r\n      var i, j, t, xLTy,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n      if (a != b) {\r\n        y.s = -b;\r\n        return x.plus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Either Infinity?\r\n        if (!xc || !yc) return xc ? (y.s = -b, y) : new BigNumber(yc ? x : NaN);\r\n\r\n        // Either zero?\r\n        if (!xc[0] || !yc[0]) {\r\n\r\n          // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n          return yc[0] ? (y.s = -b, y) : new BigNumber(xc[0] ? x :\r\n\r\n           // IEEE 754 (2008) 6.3: n - n = -0 when rounding to -Infinity\r\n           ROUNDING_MODE == 3 ? -0 : 0);\r\n        }\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Determine which is the bigger number.\r\n      if (a = xe - ye) {\r\n\r\n        if (xLTy = a < 0) {\r\n          a = -a;\r\n          t = xc;\r\n        } else {\r\n          ye = xe;\r\n          t = yc;\r\n        }\r\n\r\n        t.reverse();\r\n\r\n        // Prepend zeros to equalise exponents.\r\n        for (b = a; b--; t.push(0));\r\n        t.reverse();\r\n      } else {\r\n\r\n        // Exponents equal. Check digit by digit.\r\n        j = (xLTy = (a = xc.length) < (b = yc.length)) ? a : b;\r\n\r\n        for (a = b = 0; b < j; b++) {\r\n\r\n          if (xc[b] != yc[b]) {\r\n            xLTy = xc[b] < yc[b];\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      // x < y? Point xc to the array of the bigger number.\r\n      if (xLTy) t = xc, xc = yc, yc = t, y.s = -y.s;\r\n\r\n      b = (j = yc.length) - (i = xc.length);\r\n\r\n      // Append zeros to xc if shorter.\r\n      // No need to add zeros to yc if shorter as subtract only needs to start at yc.length.\r\n      if (b > 0) for (; b--; xc[i++] = 0);\r\n      b = BASE - 1;\r\n\r\n      // Subtract yc from xc.\r\n      for (; j > a;) {\r\n\r\n        if (xc[--j] < yc[j]) {\r\n          for (i = j; i && !xc[--i]; xc[i] = b);\r\n          --xc[i];\r\n          xc[j] += BASE;\r\n        }\r\n\r\n        xc[j] -= yc[j];\r\n      }\r\n\r\n      // Remove leading zeros and adjust exponent accordingly.\r\n      for (; xc[0] == 0; xc.splice(0, 1), --ye);\r\n\r\n      // Zero?\r\n      if (!xc[0]) {\r\n\r\n        // Following IEEE 754 (2008) 6.3,\r\n        // n - n = +0  but  n - n = -0  when rounding towards -Infinity.\r\n        y.s = ROUNDING_MODE == 3 ? -1 : 1;\r\n        y.c = [y.e = 0];\r\n        return y;\r\n      }\r\n\r\n      // No need to check for Infinity as +x - +y != Infinity && -x - -y != Infinity\r\n      // for finite x and y.\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     *   n % 0 =  N\r\n     *   n % N =  N\r\n     *   n % I =  n\r\n     *   0 % n =  0\r\n     *  -0 % n = -0\r\n     *   0 % 0 =  N\r\n     *   0 % N =  N\r\n     *   0 % I =  0\r\n     *   N % n =  N\r\n     *   N % 0 =  N\r\n     *   N % N =  N\r\n     *   N % I =  N\r\n     *   I % n =  N\r\n     *   I % 0 =  N\r\n     *   I % N =  N\r\n     *   I % I =  N\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber modulo the value of\r\n     * BigNumber(y, b). The result depends on the value of MODULO_MODE.\r\n     */\r\n    P.modulo = P.mod = function (y, b) {\r\n      var q, s,\r\n        x = this;\r\n\r\n      y = new BigNumber(y, b);\r\n\r\n      // Return NaN if x is Infinity or NaN, or y is NaN or zero.\r\n      if (!x.c || !y.s || y.c && !y.c[0]) {\r\n        return new BigNumber(NaN);\r\n\r\n      // Return x if y is Infinity or x is zero.\r\n      } else if (!y.c || x.c && !x.c[0]) {\r\n        return new BigNumber(x);\r\n      }\r\n\r\n      if (MODULO_MODE == 9) {\r\n\r\n        // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n        // r = x - qy    where  0 <= r < abs(y)\r\n        s = y.s;\r\n        y.s = 1;\r\n        q = div(x, y, 0, 3);\r\n        y.s = s;\r\n        q.s *= s;\r\n      } else {\r\n        q = div(x, y, 0, MODULO_MODE);\r\n      }\r\n\r\n      y = x.minus(q.times(y));\r\n\r\n      // To match JavaScript %, ensure sign of zero is sign of dividend.\r\n      if (!y.c[0] && MODULO_MODE == 1) y.s = x.s;\r\n\r\n      return y;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n * 0 = 0\r\n     *  n * N = N\r\n     *  n * I = I\r\n     *  0 * n = 0\r\n     *  0 * 0 = 0\r\n     *  0 * N = N\r\n     *  0 * I = N\r\n     *  N * n = N\r\n     *  N * 0 = N\r\n     *  N * N = N\r\n     *  N * I = N\r\n     *  I * n = I\r\n     *  I * 0 = N\r\n     *  I * N = N\r\n     *  I * I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber multiplied by the value\r\n     * of BigNumber(y, b).\r\n     */\r\n    P.multipliedBy = P.times = function (y, b) {\r\n      var c, e, i, j, k, m, xcL, xlo, xhi, ycL, ylo, yhi, zc,\r\n        base, sqrtBase,\r\n        x = this,\r\n        xc = x.c,\r\n        yc = (y = new BigNumber(y, b)).c;\r\n\r\n      // Either NaN, ±Infinity or ±0?\r\n      if (!xc || !yc || !xc[0] || !yc[0]) {\r\n\r\n        // Return NaN if either is NaN, or one is 0 and the other is Infinity.\r\n        if (!x.s || !y.s || xc && !xc[0] && !yc || yc && !yc[0] && !xc) {\r\n          y.c = y.e = y.s = null;\r\n        } else {\r\n          y.s *= x.s;\r\n\r\n          // Return ±Infinity if either is ±Infinity.\r\n          if (!xc || !yc) {\r\n            y.c = y.e = null;\r\n\r\n          // Return ±0 if either is ±0.\r\n          } else {\r\n            y.c = [0];\r\n            y.e = 0;\r\n          }\r\n        }\r\n\r\n        return y;\r\n      }\r\n\r\n      e = bitFloor(x.e / LOG_BASE) + bitFloor(y.e / LOG_BASE);\r\n      y.s *= x.s;\r\n      xcL = xc.length;\r\n      ycL = yc.length;\r\n\r\n      // Ensure xc points to longer array and xcL to its length.\r\n      if (xcL < ycL) zc = xc, xc = yc, yc = zc, i = xcL, xcL = ycL, ycL = i;\r\n\r\n      // Initialise the result array with zeros.\r\n      for (i = xcL + ycL, zc = []; i--; zc.push(0));\r\n\r\n      base = BASE;\r\n      sqrtBase = SQRT_BASE;\r\n\r\n      for (i = ycL; --i >= 0;) {\r\n        c = 0;\r\n        ylo = yc[i] % sqrtBase;\r\n        yhi = yc[i] / sqrtBase | 0;\r\n\r\n        for (k = xcL, j = i + k; j > i;) {\r\n          xlo = xc[--k] % sqrtBase;\r\n          xhi = xc[k] / sqrtBase | 0;\r\n          m = yhi * xlo + xhi * ylo;\r\n          xlo = ylo * xlo + ((m % sqrtBase) * sqrtBase) + zc[j] + c;\r\n          c = (xlo / base | 0) + (m / sqrtBase | 0) + yhi * xhi;\r\n          zc[j--] = xlo % base;\r\n        }\r\n\r\n        zc[j] = c;\r\n      }\r\n\r\n      if (c) {\r\n        ++e;\r\n      } else {\r\n        zc.splice(0, 1);\r\n      }\r\n\r\n      return normalise(y, zc, e);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber negated,\r\n     * i.e. multiplied by -1.\r\n     */\r\n    P.negated = function () {\r\n      var x = new BigNumber(this);\r\n      x.s = -x.s || null;\r\n      return x;\r\n    };\r\n\r\n\r\n    /*\r\n     *  n + 0 = n\r\n     *  n + N = N\r\n     *  n + I = I\r\n     *  0 + n = n\r\n     *  0 + 0 = 0\r\n     *  0 + N = N\r\n     *  0 + I = I\r\n     *  N + n = N\r\n     *  N + 0 = N\r\n     *  N + N = N\r\n     *  N + I = N\r\n     *  I + n = I\r\n     *  I + 0 = I\r\n     *  I + N = N\r\n     *  I + I = I\r\n     *\r\n     * Return a new BigNumber whose value is the value of this BigNumber plus the value of\r\n     * BigNumber(y, b).\r\n     */\r\n    P.plus = function (y, b) {\r\n      var t,\r\n        x = this,\r\n        a = x.s;\r\n\r\n      y = new BigNumber(y, b);\r\n      b = y.s;\r\n\r\n      // Either NaN?\r\n      if (!a || !b) return new BigNumber(NaN);\r\n\r\n      // Signs differ?\r\n       if (a != b) {\r\n        y.s = -b;\r\n        return x.minus(y);\r\n      }\r\n\r\n      var xe = x.e / LOG_BASE,\r\n        ye = y.e / LOG_BASE,\r\n        xc = x.c,\r\n        yc = y.c;\r\n\r\n      if (!xe || !ye) {\r\n\r\n        // Return ±Infinity if either ±Infinity.\r\n        if (!xc || !yc) return new BigNumber(a / 0);\r\n\r\n        // Either zero?\r\n        // Return y if y is non-zero, x if x is non-zero, or zero if both are zero.\r\n        if (!xc[0] || !yc[0]) return yc[0] ? y : new BigNumber(xc[0] ? x : a * 0);\r\n      }\r\n\r\n      xe = bitFloor(xe);\r\n      ye = bitFloor(ye);\r\n      xc = xc.slice();\r\n\r\n      // Prepend zeros to equalise exponents. Faster to use reverse then do unshifts.\r\n      if (a = xe - ye) {\r\n        if (a > 0) {\r\n          ye = xe;\r\n          t = yc;\r\n        } else {\r\n          a = -a;\r\n          t = xc;\r\n        }\r\n\r\n        t.reverse();\r\n        for (; a--; t.push(0));\r\n        t.reverse();\r\n      }\r\n\r\n      a = xc.length;\r\n      b = yc.length;\r\n\r\n      // Point xc to the longer array, and b to the shorter length.\r\n      if (a - b < 0) t = yc, yc = xc, xc = t, b = a;\r\n\r\n      // Only start adding at yc.length - 1 as the further digits of xc can be ignored.\r\n      for (a = 0; b;) {\r\n        a = (xc[--b] = xc[b] + yc[b] + a) / BASE | 0;\r\n        xc[b] = BASE === xc[b] ? 0 : xc[b] % BASE;\r\n      }\r\n\r\n      if (a) {\r\n        xc = [a].concat(xc);\r\n        ++ye;\r\n      }\r\n\r\n      // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n      // ye = MAX_EXP + 1 possible\r\n      return normalise(y, xc, ye);\r\n    };\r\n\r\n\r\n    /*\r\n     * If sd is undefined or null or true or false, return the number of significant digits of\r\n     * the value of this BigNumber, or null if the value of this BigNumber is ±Infinity or NaN.\r\n     * If sd is true include integer-part trailing zeros in the count.\r\n     *\r\n     * Otherwise, if sd is a number, return a new BigNumber whose value is the value of this\r\n     * BigNumber rounded to a maximum of sd significant digits using rounding mode rm, or\r\n     * ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * sd {number|boolean} number: significant digits: integer, 1 to MAX inclusive.\r\n     *                     boolean: whether to count integer-part trailing zeros: true or false.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.precision = P.sd = function (sd, rm) {\r\n      var c, n, v,\r\n        x = this;\r\n\r\n      if (sd != null && sd !== !!sd) {\r\n        intCheck(sd, 1, MAX);\r\n        if (rm == null) rm = ROUNDING_MODE;\r\n        else intCheck(rm, 0, 8);\r\n\r\n        return round(new BigNumber(x), sd, rm);\r\n      }\r\n\r\n      if (!(c = x.c)) return null;\r\n      v = c.length - 1;\r\n      n = v * LOG_BASE + 1;\r\n\r\n      if (v = c[v]) {\r\n\r\n        // Subtract the number of trailing zeros of the last element.\r\n        for (; v % 10 == 0; v /= 10, n--);\r\n\r\n        // Add the number of digits of the first element.\r\n        for (v = c[0]; v >= 10; v /= 10, n++);\r\n      }\r\n\r\n      if (sd && x.e + 1 > n) n = x.e + 1;\r\n\r\n      return n;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a new BigNumber whose value is the value of this BigNumber shifted by k places\r\n     * (powers of 10). Shift to the right if n > 0, and to the left if n < 0.\r\n     *\r\n     * k {number} Integer, -MAX_SAFE_INTEGER to MAX_SAFE_INTEGER inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {k}'\r\n     */\r\n    P.shiftedBy = function (k) {\r\n      intCheck(k, -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER);\r\n      return this.times('1e' + k);\r\n    };\r\n\r\n\r\n    /*\r\n     *  sqrt(-n) =  N\r\n     *  sqrt(N) =  N\r\n     *  sqrt(-I) =  N\r\n     *  sqrt(I) =  I\r\n     *  sqrt(0) =  0\r\n     *  sqrt(-0) = -0\r\n     *\r\n     * Return a new BigNumber whose value is the square root of the value of this BigNumber,\r\n     * rounded according to DECIMAL_PLACES and ROUNDING_MODE.\r\n     */\r\n    P.squareRoot = P.sqrt = function () {\r\n      var m, n, r, rep, t,\r\n        x = this,\r\n        c = x.c,\r\n        s = x.s,\r\n        e = x.e,\r\n        dp = DECIMAL_PLACES + 4,\r\n        half = new BigNumber('0.5');\r\n\r\n      // Negative/NaN/Infinity/zero?\r\n      if (s !== 1 || !c || !c[0]) {\r\n        return new BigNumber(!s || s < 0 && (!c || c[0]) ? NaN : c ? x : 1 / 0);\r\n      }\r\n\r\n      // Initial estimate.\r\n      s = Math.sqrt(+valueOf(x));\r\n\r\n      // Math.sqrt underflow/overflow?\r\n      // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n      if (s == 0 || s == 1 / 0) {\r\n        n = coeffToString(c);\r\n        if ((n.length + e) % 2 == 0) n += '0';\r\n        s = Math.sqrt(+n);\r\n        e = bitFloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n        if (s == 1 / 0) {\r\n          n = '5e' + e;\r\n        } else {\r\n          n = s.toExponential();\r\n          n = n.slice(0, n.indexOf('e') + 1) + e;\r\n        }\r\n\r\n        r = new BigNumber(n);\r\n      } else {\r\n        r = new BigNumber(s + '');\r\n      }\r\n\r\n      // Check for zero.\r\n      // r could be zero if MIN_EXP is changed after the this value was created.\r\n      // This would cause a division by zero (x/t) and hence Infinity below, which would cause\r\n      // coeffToString to throw.\r\n      if (r.c[0]) {\r\n        e = r.e;\r\n        s = e + dp;\r\n        if (s < 3) s = 0;\r\n\r\n        // Newton-Raphson iteration.\r\n        for (; ;) {\r\n          t = r;\r\n          r = half.times(t.plus(div(x, t, dp, 1)));\r\n\r\n          if (coeffToString(t.c).slice(0, s) === (n = coeffToString(r.c)).slice(0, s)) {\r\n\r\n            // The exponent of r may here be one less than the final result exponent,\r\n            // e.g 0.0009999 (e-4) --> 0.001 (e-3), so adjust s so the rounding digits\r\n            // are indexed correctly.\r\n            if (r.e < e) --s;\r\n            n = n.slice(s - 3, s + 1);\r\n\r\n            // The 4th rounding digit may be in error by -1 so if the 4 rounding digits\r\n            // are 9999 or 4999 (i.e. approaching a rounding boundary) continue the\r\n            // iteration.\r\n            if (n == '9999' || !rep && n == '4999') {\r\n\r\n              // On the first iteration only, check to see if rounding up gives the\r\n              // exact result as the nines may infinitely repeat.\r\n              if (!rep) {\r\n                round(t, t.e + DECIMAL_PLACES + 2, 0);\r\n\r\n                if (t.times(t).eq(x)) {\r\n                  r = t;\r\n                  break;\r\n                }\r\n              }\r\n\r\n              dp += 4;\r\n              s += 4;\r\n              rep = 1;\r\n            } else {\r\n\r\n              // If rounding digits are null, 0{0,4} or 50{0,3}, check for exact\r\n              // result. If not, then there are further digits and m will be truthy.\r\n              if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n                // Truncate to the first rounding digit.\r\n                round(r, r.e + DECIMAL_PLACES + 2, 1);\r\n                m = !r.times(r).eq(x);\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      return round(r, r.e + DECIMAL_PLACES + 1, ROUNDING_MODE, m);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in exponential notation and\r\n     * rounded using ROUNDING_MODE to dp fixed decimal places.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toExponential = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp++;\r\n      }\r\n      return format(this, dp, rm, 1);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounding\r\n     * to dp fixed decimal places using rounding mode rm, or ROUNDING_MODE if rm is omitted.\r\n     *\r\n     * Note: as with JavaScript's number type, (-0).toFixed(0) is '0',\r\n     * but e.g. (-0.00001).toFixed(0) is '-0'.\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     */\r\n    P.toFixed = function (dp, rm) {\r\n      if (dp != null) {\r\n        intCheck(dp, 0, MAX);\r\n        dp = dp + this.e + 1;\r\n      }\r\n      return format(this, dp, rm);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in fixed-point notation rounded\r\n     * using rm or ROUNDING_MODE to dp decimal places, and formatted according to the properties\r\n     * of the format or FORMAT object (see BigNumber.set).\r\n     *\r\n     * The formatting object may contain some or all of the properties shown below.\r\n     *\r\n     * FORMAT = {\r\n     *   prefix: '',\r\n     *   groupSize: 3,\r\n     *   secondaryGroupSize: 0,\r\n     *   groupSeparator: ',',\r\n     *   decimalSeparator: '.',\r\n     *   fractionGroupSize: 0,\r\n     *   fractionGroupSeparator: '\\xA0',      // non-breaking space\r\n     *   suffix: ''\r\n     * };\r\n     *\r\n     * [dp] {number} Decimal places. Integer, 0 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     * [format] {object} Formatting options. See FORMAT pbject above.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {dp|rm}'\r\n     * '[BigNumber Error] Argument not an object: {format}'\r\n     */\r\n    P.toFormat = function (dp, rm, format) {\r\n      var str,\r\n        x = this;\r\n\r\n      if (format == null) {\r\n        if (dp != null && rm && typeof rm == 'object') {\r\n          format = rm;\r\n          rm = null;\r\n        } else if (dp && typeof dp == 'object') {\r\n          format = dp;\r\n          dp = rm = null;\r\n        } else {\r\n          format = FORMAT;\r\n        }\r\n      } else if (typeof format != 'object') {\r\n        throw Error\r\n          (bignumberError + 'Argument not an object: ' + format);\r\n      }\r\n\r\n      str = x.toFixed(dp, rm);\r\n\r\n      if (x.c) {\r\n        var i,\r\n          arr = str.split('.'),\r\n          g1 = +format.groupSize,\r\n          g2 = +format.secondaryGroupSize,\r\n          groupSeparator = format.groupSeparator || '',\r\n          intPart = arr[0],\r\n          fractionPart = arr[1],\r\n          isNeg = x.s < 0,\r\n          intDigits = isNeg ? intPart.slice(1) : intPart,\r\n          len = intDigits.length;\r\n\r\n        if (g2) i = g1, g1 = g2, g2 = i, len -= i;\r\n\r\n        if (g1 > 0 && len > 0) {\r\n          i = len % g1 || g1;\r\n          intPart = intDigits.substr(0, i);\r\n          for (; i < len; i += g1) intPart += groupSeparator + intDigits.substr(i, g1);\r\n          if (g2 > 0) intPart += groupSeparator + intDigits.slice(i);\r\n          if (isNeg) intPart = '-' + intPart;\r\n        }\r\n\r\n        str = fractionPart\r\n         ? intPart + (format.decimalSeparator || '') + ((g2 = +format.fractionGroupSize)\r\n          ? fractionPart.replace(new RegExp('\\\\d{' + g2 + '}\\\\B', 'g'),\r\n           '$&' + (format.fractionGroupSeparator || ''))\r\n          : fractionPart)\r\n         : intPart;\r\n      }\r\n\r\n      return (format.prefix || '') + str + (format.suffix || '');\r\n    };\r\n\r\n\r\n    /*\r\n     * Return an array of two BigNumbers representing the value of this BigNumber as a simple\r\n     * fraction with an integer numerator and an integer denominator.\r\n     * The denominator will be a positive non-zero value less than or equal to the specified\r\n     * maximum denominator. If a maximum denominator is not specified, the denominator will be\r\n     * the lowest value necessary to represent the number exactly.\r\n     *\r\n     * [md] {number|string|BigNumber} Integer >= 1, or Infinity. The maximum denominator.\r\n     *\r\n     * '[BigNumber Error] Argument {not an integer|out of range} : {md}'\r\n     */\r\n    P.toFraction = function (md) {\r\n      var d, d0, d1, d2, e, exp, n, n0, n1, q, r, s,\r\n        x = this,\r\n        xc = x.c;\r\n\r\n      if (md != null) {\r\n        n = new BigNumber(md);\r\n\r\n        // Throw if md is less than one or is not an integer, unless it is Infinity.\r\n        if (!n.isInteger() && (n.c || n.s !== 1) || n.lt(ONE)) {\r\n          throw Error\r\n            (bignumberError + 'Argument ' +\r\n              (n.isInteger() ? 'out of range: ' : 'not an integer: ') + valueOf(n));\r\n        }\r\n      }\r\n\r\n      if (!xc) return new BigNumber(x);\r\n\r\n      d = new BigNumber(ONE);\r\n      n1 = d0 = new BigNumber(ONE);\r\n      d1 = n0 = new BigNumber(ONE);\r\n      s = coeffToString(xc);\r\n\r\n      // Determine initial denominator.\r\n      // d is a power of 10 and the minimum max denominator that specifies the value exactly.\r\n      e = d.e = s.length - x.e - 1;\r\n      d.c[0] = POWS_TEN[(exp = e % LOG_BASE) < 0 ? LOG_BASE + exp : exp];\r\n      md = !md || n.comparedTo(d) > 0 ? (e > 0 ? d : n1) : n;\r\n\r\n      exp = MAX_EXP;\r\n      MAX_EXP = 1 / 0;\r\n      n = new BigNumber(s);\r\n\r\n      // n0 = d1 = 0\r\n      n0.c[0] = 0;\r\n\r\n      for (; ;)  {\r\n        q = div(n, d, 0, 1);\r\n        d2 = d0.plus(q.times(d1));\r\n        if (d2.comparedTo(md) == 1) break;\r\n        d0 = d1;\r\n        d1 = d2;\r\n        n1 = n0.plus(q.times(d2 = n1));\r\n        n0 = d2;\r\n        d = n.minus(q.times(d2 = d));\r\n        n = d2;\r\n      }\r\n\r\n      d2 = div(md.minus(d0), d1, 0, 1);\r\n      n0 = n0.plus(d2.times(n1));\r\n      d0 = d0.plus(d2.times(d1));\r\n      n0.s = n1.s = x.s;\r\n      e = e * 2;\r\n\r\n      // Determine which fraction is closer to x, n0/d0 or n1/d1\r\n      r = div(n1, d1, e, ROUNDING_MODE).minus(x).abs().comparedTo(\r\n          div(n0, d0, e, ROUNDING_MODE).minus(x).abs()) < 1 ? [n1, d1] : [n0, d0];\r\n\r\n      MAX_EXP = exp;\r\n\r\n      return r;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return the value of this BigNumber converted to a number primitive.\r\n     */\r\n    P.toNumber = function () {\r\n      return +valueOf(this);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber rounded to sd significant digits\r\n     * using rounding mode rm or ROUNDING_MODE. If sd is less than the number of digits\r\n     * necessary to represent the integer part of the value in fixed-point notation, then use\r\n     * exponential notation.\r\n     *\r\n     * [sd] {number} Significant digits. Integer, 1 to MAX inclusive.\r\n     * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n     *\r\n     * '[BigNumber Error] Argument {not a primitive number|not an integer|out of range}: {sd|rm}'\r\n     */\r\n    P.toPrecision = function (sd, rm) {\r\n      if (sd != null) intCheck(sd, 1, MAX);\r\n      return format(this, sd, rm, 2);\r\n    };\r\n\r\n\r\n    /*\r\n     * Return a string representing the value of this BigNumber in base b, or base 10 if b is\r\n     * omitted. If a base is specified, including base 10, round according to DECIMAL_PLACES and\r\n     * ROUNDING_MODE. If a base is not specified, and this BigNumber has a positive exponent\r\n     * that is equal to or greater than TO_EXP_POS, or a negative exponent equal to or less than\r\n     * TO_EXP_NEG, return exponential notation.\r\n     *\r\n     * [b] {number} Integer, 2 to ALPHABET.length inclusive.\r\n     *\r\n     * '[BigNumber Error] Base {not a primitive number|not an integer|out of range}: {b}'\r\n     */\r\n    P.toString = function (b) {\r\n      var str,\r\n        n = this,\r\n        s = n.s,\r\n        e = n.e;\r\n\r\n      // Infinity or NaN?\r\n      if (e === null) {\r\n        if (s) {\r\n          str = 'Infinity';\r\n          if (s < 0) str = '-' + str;\r\n        } else {\r\n          str = 'NaN';\r\n        }\r\n      } else {\r\n        if (b == null) {\r\n          str = e <= TO_EXP_NEG || e >= TO_EXP_POS\r\n           ? toExponential(coeffToString(n.c), e)\r\n           : toFixedPoint(coeffToString(n.c), e, '0');\r\n        } else if (b === 10) {\r\n          n = round(new BigNumber(n), DECIMAL_PLACES + e + 1, ROUNDING_MODE);\r\n          str = toFixedPoint(coeffToString(n.c), n.e, '0');\r\n        } else {\r\n          intCheck(b, 2, ALPHABET.length, 'Base');\r\n          str = convertBase(toFixedPoint(coeffToString(n.c), e, '0'), 10, b, s, true);\r\n        }\r\n\r\n        if (s < 0 && n.c[0]) str = '-' + str;\r\n      }\r\n\r\n      return str;\r\n    };\r\n\r\n\r\n    /*\r\n     * Return as toString, but do not accept a base argument, and include the minus sign for\r\n     * negative zero.\r\n     */\r\n    P.valueOf = P.toJSON = function () {\r\n      return valueOf(this);\r\n    };\r\n\r\n\r\n    P._isBigNumber = true;\r\n\r\n    if (configObject != null) BigNumber.set(configObject);\r\n\r\n    return BigNumber;\r\n  }\r\n\r\n\r\n  // PRIVATE HELPER FUNCTIONS\r\n\r\n  // These functions don't need access to variables,\r\n  // e.g. DECIMAL_PLACES, in the scope of the `clone` function above.\r\n\r\n\r\n  function bitFloor(n) {\r\n    var i = n | 0;\r\n    return n > 0 || n === i ? i : i - 1;\r\n  }\r\n\r\n\r\n  // Return a coefficient array as a string of base 10 digits.\r\n  function coeffToString(a) {\r\n    var s, z,\r\n      i = 1,\r\n      j = a.length,\r\n      r = a[0] + '';\r\n\r\n    for (; i < j;) {\r\n      s = a[i++] + '';\r\n      z = LOG_BASE - s.length;\r\n      for (; z--; s = '0' + s);\r\n      r += s;\r\n    }\r\n\r\n    // Determine trailing zeros.\r\n    for (j = r.length; r.charCodeAt(--j) === 48;);\r\n\r\n    return r.slice(0, j + 1 || 1);\r\n  }\r\n\r\n\r\n  // Compare the value of BigNumbers x and y.\r\n  function compare(x, y) {\r\n    var a, b,\r\n      xc = x.c,\r\n      yc = y.c,\r\n      i = x.s,\r\n      j = y.s,\r\n      k = x.e,\r\n      l = y.e;\r\n\r\n    // Either NaN?\r\n    if (!i || !j) return null;\r\n\r\n    a = xc && !xc[0];\r\n    b = yc && !yc[0];\r\n\r\n    // Either zero?\r\n    if (a || b) return a ? b ? 0 : -j : i;\r\n\r\n    // Signs differ?\r\n    if (i != j) return i;\r\n\r\n    a = i < 0;\r\n    b = k == l;\r\n\r\n    // Either Infinity?\r\n    if (!xc || !yc) return b ? 0 : !xc ^ a ? 1 : -1;\r\n\r\n    // Compare exponents.\r\n    if (!b) return k > l ^ a ? 1 : -1;\r\n\r\n    j = (k = xc.length) < (l = yc.length) ? k : l;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0; i < j; i++) if (xc[i] != yc[i]) return xc[i] > yc[i] ^ a ? 1 : -1;\r\n\r\n    // Compare lengths.\r\n    return k == l ? 0 : k > l ^ a ? 1 : -1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Check that n is a primitive number, an integer, and in range, otherwise throw.\r\n   */\r\n  function intCheck(n, min, max, name) {\r\n    if (n < min || n > max || n !== mathfloor(n)) {\r\n      throw Error\r\n       (bignumberError + (name || 'Argument') + (typeof n == 'number'\r\n         ? n < min || n > max ? ' out of range: ' : ' not an integer: '\r\n         : ' not a primitive number: ') + String(n));\r\n    }\r\n  }\r\n\r\n\r\n  // Assumes finite n.\r\n  function isOdd(n) {\r\n    var k = n.c.length - 1;\r\n    return bitFloor(n.e / LOG_BASE) == k && n.c[k] % 2 != 0;\r\n  }\r\n\r\n\r\n  function toExponential(str, e) {\r\n    return (str.length > 1 ? str.charAt(0) + '.' + str.slice(1) : str) +\r\n     (e < 0 ? 'e' : 'e+') + e;\r\n  }\r\n\r\n\r\n  function toFixedPoint(str, e, z) {\r\n    var len, zs;\r\n\r\n    // Negative exponent?\r\n    if (e < 0) {\r\n\r\n      // Prepend zeros.\r\n      for (zs = z + '.'; ++e; zs += z);\r\n      str = zs + str;\r\n\r\n    // Positive exponent\r\n    } else {\r\n      len = str.length;\r\n\r\n      // Append zeros.\r\n      if (++e > len) {\r\n        for (zs = z, e -= len; --e; zs += z);\r\n        str += zs;\r\n      } else if (e < len) {\r\n        str = str.slice(0, e) + '.' + str.slice(e);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // EXPORT\r\n\r\n\r\n  BigNumber = clone();\r\n  BigNumber['default'] = BigNumber.BigNumber = BigNumber;\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () { return BigNumber; });\r\n\r\n  // Node.js and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    module.exports = BigNumber;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalObject) {\r\n      globalObject = typeof self != 'undefined' && self ? self : window;\r\n    }\r\n\r\n    globalObject.BigNumber = BigNumber;\r\n  }\r\n})(this);\r\n","'use strict';\n\nconst anyMap = new WeakMap();\nconst eventsMap = new WeakMap();\nconst producersMap = new WeakMap();\nconst anyProducer = Symbol('anyProducer');\nconst resolvedPromise = Promise.resolve();\n\nconst listenerAdded = Symbol('listenerAdded');\nconst listenerRemoved = Symbol('listenerRemoved');\n\nfunction assertEventName(eventName) {\n\tif (typeof eventName !== 'string' && typeof eventName !== 'symbol') {\n\t\tthrow new TypeError('eventName must be a string or a symbol');\n\t}\n}\n\nfunction assertListener(listener) {\n\tif (typeof listener !== 'function') {\n\t\tthrow new TypeError('listener must be a function');\n\t}\n}\n\nfunction getListeners(instance, eventName) {\n\tconst events = eventsMap.get(instance);\n\tif (!events.has(eventName)) {\n\t\tevents.set(eventName, new Set());\n\t}\n\n\treturn events.get(eventName);\n}\n\nfunction getEventProducers(instance, eventName) {\n\tconst key = typeof eventName === 'string' || typeof eventName === 'symbol' ? eventName : anyProducer;\n\tconst producers = producersMap.get(instance);\n\tif (!producers.has(key)) {\n\t\tproducers.set(key, new Set());\n\t}\n\n\treturn producers.get(key);\n}\n\nfunction enqueueProducers(instance, eventName, eventData) {\n\tconst producers = producersMap.get(instance);\n\tif (producers.has(eventName)) {\n\t\tfor (const producer of producers.get(eventName)) {\n\t\t\tproducer.enqueue(eventData);\n\t\t}\n\t}\n\n\tif (producers.has(anyProducer)) {\n\t\tconst item = Promise.all([eventName, eventData]);\n\t\tfor (const producer of producers.get(anyProducer)) {\n\t\t\tproducer.enqueue(item);\n\t\t}\n\t}\n}\n\nfunction iterator(instance, eventNames) {\n\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\tlet isFinished = false;\n\tlet flush = () => {};\n\tlet queue = [];\n\n\tconst producer = {\n\t\tenqueue(item) {\n\t\t\tqueue.push(item);\n\t\t\tflush();\n\t\t},\n\t\tfinish() {\n\t\t\tisFinished = true;\n\t\t\tflush();\n\t\t}\n\t};\n\n\tfor (const eventName of eventNames) {\n\t\tgetEventProducers(instance, eventName).add(producer);\n\t}\n\n\treturn {\n\t\tasync next() {\n\t\t\tif (!queue) {\n\t\t\t\treturn {done: true};\n\t\t\t}\n\n\t\t\tif (queue.length === 0) {\n\t\t\t\tif (isFinished) {\n\t\t\t\t\tqueue = undefined;\n\t\t\t\t\treturn this.next();\n\t\t\t\t}\n\n\t\t\t\tawait new Promise(resolve => {\n\t\t\t\t\tflush = resolve;\n\t\t\t\t});\n\n\t\t\t\treturn this.next();\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdone: false,\n\t\t\t\tvalue: await queue.shift()\n\t\t\t};\n\t\t},\n\n\t\tasync return(value) {\n\t\t\tqueue = undefined;\n\n\t\t\tfor (const eventName of eventNames) {\n\t\t\t\tgetEventProducers(instance, eventName).delete(producer);\n\t\t\t}\n\n\t\t\tflush();\n\n\t\t\treturn arguments.length > 0 ?\n\t\t\t\t{done: true, value: await value} :\n\t\t\t\t{done: true};\n\t\t},\n\n\t\t[Symbol.asyncIterator]() {\n\t\t\treturn this;\n\t\t}\n\t};\n}\n\nfunction defaultMethodNamesOrAssert(methodNames) {\n\tif (methodNames === undefined) {\n\t\treturn allEmitteryMethods;\n\t}\n\n\tif (!Array.isArray(methodNames)) {\n\t\tthrow new TypeError('`methodNames` must be an array of strings');\n\t}\n\n\tfor (const methodName of methodNames) {\n\t\tif (!allEmitteryMethods.includes(methodName)) {\n\t\t\tif (typeof methodName !== 'string') {\n\t\t\t\tthrow new TypeError('`methodNames` element must be a string');\n\t\t\t}\n\n\t\t\tthrow new Error(`${methodName} is not Emittery method`);\n\t\t}\n\t}\n\n\treturn methodNames;\n}\n\nconst isListenerSymbol = symbol => symbol === listenerAdded || symbol === listenerRemoved;\n\nclass Emittery {\n\tstatic mixin(emitteryPropertyName, methodNames) {\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\t\treturn target => {\n\t\t\tif (typeof target !== 'function') {\n\t\t\t\tthrow new TypeError('`target` must be function');\n\t\t\t}\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tif (target.prototype[methodName] !== undefined) {\n\t\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction getEmitteryProperty() {\n\t\t\t\tObject.defineProperty(this, emitteryPropertyName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: new Emittery()\n\t\t\t\t});\n\t\t\t\treturn this[emitteryPropertyName];\n\t\t\t}\n\n\t\t\tObject.defineProperty(target.prototype, emitteryPropertyName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tget: getEmitteryProperty\n\t\t\t});\n\n\t\t\tconst emitteryMethodCaller = methodName => function (...args) {\n\t\t\t\treturn this[emitteryPropertyName][methodName](...args);\n\t\t\t};\n\n\t\t\tfor (const methodName of methodNames) {\n\t\t\t\tObject.defineProperty(target.prototype, methodName, {\n\t\t\t\t\tenumerable: false,\n\t\t\t\t\tvalue: emitteryMethodCaller(methodName)\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn target;\n\t\t};\n\t}\n\n\tconstructor() {\n\t\tanyMap.set(this, new Set());\n\t\teventsMap.set(this, new Map());\n\t\tproducersMap.set(this, new Map());\n\t}\n\n\ton(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).add(listener);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerAdded, {eventName, listener});\n\t\t\t}\n\t\t}\n\n\t\treturn this.off.bind(this, eventNames, listener);\n\t}\n\n\toff(eventNames, listener) {\n\t\tassertListener(listener);\n\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t\tgetListeners(this, eventName).delete(listener);\n\n\t\t\tif (!isListenerSymbol(eventName)) {\n\t\t\t\tthis.emit(listenerRemoved, {eventName, listener});\n\t\t\t}\n\t\t}\n\t}\n\n\tonce(eventNames) {\n\t\treturn new Promise(resolve => {\n\t\t\tconst off = this.on(eventNames, data => {\n\t\t\t\toff();\n\t\t\t\tresolve(data);\n\t\t\t});\n\t\t});\n\t}\n\n\tevents(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tfor (const eventName of eventNames) {\n\t\t\tassertEventName(eventName);\n\t\t}\n\n\t\treturn iterator(this, eventNames);\n\t}\n\n\tasync emit(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tenqueueProducers(this, eventName, eventData);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = isListenerSymbol(eventName) ? [] : [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\tawait Promise.all([\n\t\t\t...staticListeners.map(async listener => {\n\t\t\t\tif (listeners.has(listener)) {\n\t\t\t\t\treturn listener(eventData);\n\t\t\t\t}\n\t\t\t}),\n\t\t\t...staticAnyListeners.map(async listener => {\n\t\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\t\treturn listener(eventName, eventData);\n\t\t\t\t}\n\t\t\t})\n\t\t]);\n\t}\n\n\tasync emitSerial(eventName, eventData) {\n\t\tassertEventName(eventName);\n\n\t\tconst listeners = getListeners(this, eventName);\n\t\tconst anyListeners = anyMap.get(this);\n\t\tconst staticListeners = [...listeners];\n\t\tconst staticAnyListeners = [...anyListeners];\n\n\t\tawait resolvedPromise;\n\t\t/* eslint-disable no-await-in-loop */\n\t\tfor (const listener of staticListeners) {\n\t\t\tif (listeners.has(listener)) {\n\t\t\t\tawait listener(eventData);\n\t\t\t}\n\t\t}\n\n\t\tfor (const listener of staticAnyListeners) {\n\t\t\tif (anyListeners.has(listener)) {\n\t\t\t\tawait listener(eventName, eventData);\n\t\t\t}\n\t\t}\n\t\t/* eslint-enable no-await-in-loop */\n\t}\n\n\tonAny(listener) {\n\t\tassertListener(listener);\n\t\tanyMap.get(this).add(listener);\n\t\tthis.emit(listenerAdded, {listener});\n\t\treturn this.offAny.bind(this, listener);\n\t}\n\n\tanyEvent() {\n\t\treturn iterator(this);\n\t}\n\n\toffAny(listener) {\n\t\tassertListener(listener);\n\t\tthis.emit(listenerRemoved, {listener});\n\t\tanyMap.get(this).delete(listener);\n\t}\n\n\tclearListeners(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (typeof eventName === 'string' || typeof eventName === 'symbol') {\n\t\t\t\tgetListeners(this, eventName).clear();\n\n\t\t\t\tconst producers = getEventProducers(this, eventName);\n\n\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\tproducer.finish();\n\t\t\t\t}\n\n\t\t\t\tproducers.clear();\n\t\t\t} else {\n\t\t\t\tanyMap.get(this).clear();\n\n\t\t\t\tfor (const listeners of eventsMap.get(this).values()) {\n\t\t\t\t\tlisteners.clear();\n\t\t\t\t}\n\n\t\t\t\tfor (const producers of producersMap.get(this).values()) {\n\t\t\t\t\tfor (const producer of producers) {\n\t\t\t\t\t\tproducer.finish();\n\t\t\t\t\t}\n\n\t\t\t\t\tproducers.clear();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tlistenerCount(eventNames) {\n\t\teventNames = Array.isArray(eventNames) ? eventNames : [eventNames];\n\t\tlet count = 0;\n\n\t\tfor (const eventName of eventNames) {\n\t\t\tif (typeof eventName === 'string') {\n\t\t\t\tcount += anyMap.get(this).size + getListeners(this, eventName).size +\n\t\t\t\t\tgetEventProducers(this, eventName).size + getEventProducers(this).size;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif (typeof eventName !== 'undefined') {\n\t\t\t\tassertEventName(eventName);\n\t\t\t}\n\n\t\t\tcount += anyMap.get(this).size;\n\n\t\t\tfor (const value of eventsMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\n\t\t\tfor (const value of producersMap.get(this).values()) {\n\t\t\t\tcount += value.size;\n\t\t\t}\n\t\t}\n\n\t\treturn count;\n\t}\n\n\tbindMethods(target, methodNames) {\n\t\tif (typeof target !== 'object' || target === null) {\n\t\t\tthrow new TypeError('`target` must be an object');\n\t\t}\n\n\t\tmethodNames = defaultMethodNamesOrAssert(methodNames);\n\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (target[methodName] !== undefined) {\n\t\t\t\tthrow new Error(`The property \\`${methodName}\\` already exists on \\`target\\``);\n\t\t\t}\n\n\t\t\tObject.defineProperty(target, methodName, {\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: this[methodName].bind(this)\n\t\t\t});\n\t\t}\n\t}\n}\n\nconst allEmitteryMethods = Object.getOwnPropertyNames(Emittery.prototype).filter(v => v !== 'constructor');\n\nObject.defineProperty(Emittery, 'listenerAdded', {\n\tvalue: listenerAdded,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\nObject.defineProperty(Emittery, 'listenerRemoved', {\n\tvalue: listenerRemoved,\n\twritable: false,\n\tenumerable: true,\n\tconfigurable: false\n});\n\nmodule.exports = Emittery;\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n}({}));\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports._base16To36 = exports._base36To16 = exports.BigNumber = exports.isBigNumberish = void 0;\n/**\n *  BigNumber\n *\n *  A wrapper around the BN.js object. We use the BN.js library\n *  because it is used by elliptic, so it is required regardless.\n *\n */\nvar bn_js_1 = __importDefault(require(\"bn.js\"));\nvar BN = bn_js_1.default.BN;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar _constructorGuard = {};\nvar MAX_SAFE = 0x1fffffffffffff;\nfunction isBigNumberish(value) {\n    return (value != null) && (BigNumber.isBigNumber(value) ||\n        (typeof (value) === \"number\" && (value % 1) === 0) ||\n        (typeof (value) === \"string\" && !!value.match(/^-?[0-9]+$/)) ||\n        (0, bytes_1.isHexString)(value) ||\n        (typeof (value) === \"bigint\") ||\n        (0, bytes_1.isBytes)(value));\n}\nexports.isBigNumberish = isBigNumberish;\n// Only warn about passing 10 into radix once\nvar _warnedToStringRadix = false;\nvar BigNumber = /** @class */ (function () {\n    function BigNumber(constructorGuard, hex) {\n        var _newTarget = this.constructor;\n        logger.checkNew(_newTarget, BigNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot call constructor directly; use BigNumber.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new (BigNumber)\"\n            });\n        }\n        this._hex = hex;\n        this._isBigNumber = true;\n        Object.freeze(this);\n    }\n    BigNumber.prototype.fromTwos = function (value) {\n        return toBigNumber(toBN(this).fromTwos(value));\n    };\n    BigNumber.prototype.toTwos = function (value) {\n        return toBigNumber(toBN(this).toTwos(value));\n    };\n    BigNumber.prototype.abs = function () {\n        if (this._hex[0] === \"-\") {\n            return BigNumber.from(this._hex.substring(1));\n        }\n        return this;\n    };\n    BigNumber.prototype.add = function (other) {\n        return toBigNumber(toBN(this).add(toBN(other)));\n    };\n    BigNumber.prototype.sub = function (other) {\n        return toBigNumber(toBN(this).sub(toBN(other)));\n    };\n    BigNumber.prototype.div = function (other) {\n        var o = BigNumber.from(other);\n        if (o.isZero()) {\n            throwFault(\"division-by-zero\", \"div\");\n        }\n        return toBigNumber(toBN(this).div(toBN(other)));\n    };\n    BigNumber.prototype.mul = function (other) {\n        return toBigNumber(toBN(this).mul(toBN(other)));\n    };\n    BigNumber.prototype.mod = function (other) {\n        var value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"division-by-zero\", \"mod\");\n        }\n        return toBigNumber(toBN(this).umod(value));\n    };\n    BigNumber.prototype.pow = function (other) {\n        var value = toBN(other);\n        if (value.isNeg()) {\n            throwFault(\"negative-power\", \"pow\");\n        }\n        return toBigNumber(toBN(this).pow(value));\n    };\n    BigNumber.prototype.and = function (other) {\n        var value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"and\");\n        }\n        return toBigNumber(toBN(this).and(value));\n    };\n    BigNumber.prototype.or = function (other) {\n        var value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"or\");\n        }\n        return toBigNumber(toBN(this).or(value));\n    };\n    BigNumber.prototype.xor = function (other) {\n        var value = toBN(other);\n        if (this.isNegative() || value.isNeg()) {\n            throwFault(\"unbound-bitwise-result\", \"xor\");\n        }\n        return toBigNumber(toBN(this).xor(value));\n    };\n    BigNumber.prototype.mask = function (value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"mask\");\n        }\n        return toBigNumber(toBN(this).maskn(value));\n    };\n    BigNumber.prototype.shl = function (value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shl\");\n        }\n        return toBigNumber(toBN(this).shln(value));\n    };\n    BigNumber.prototype.shr = function (value) {\n        if (this.isNegative() || value < 0) {\n            throwFault(\"negative-width\", \"shr\");\n        }\n        return toBigNumber(toBN(this).shrn(value));\n    };\n    BigNumber.prototype.eq = function (other) {\n        return toBN(this).eq(toBN(other));\n    };\n    BigNumber.prototype.lt = function (other) {\n        return toBN(this).lt(toBN(other));\n    };\n    BigNumber.prototype.lte = function (other) {\n        return toBN(this).lte(toBN(other));\n    };\n    BigNumber.prototype.gt = function (other) {\n        return toBN(this).gt(toBN(other));\n    };\n    BigNumber.prototype.gte = function (other) {\n        return toBN(this).gte(toBN(other));\n    };\n    BigNumber.prototype.isNegative = function () {\n        return (this._hex[0] === \"-\");\n    };\n    BigNumber.prototype.isZero = function () {\n        return toBN(this).isZero();\n    };\n    BigNumber.prototype.toNumber = function () {\n        try {\n            return toBN(this).toNumber();\n        }\n        catch (error) {\n            throwFault(\"overflow\", \"toNumber\", this.toString());\n        }\n        return null;\n    };\n    BigNumber.prototype.toBigInt = function () {\n        try {\n            return BigInt(this.toString());\n        }\n        catch (e) { }\n        return logger.throwError(\"this platform does not support BigInt\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n            value: this.toString()\n        });\n    };\n    BigNumber.prototype.toString = function () {\n        // Lots of people expect this, which we do not support, so check (See: #889)\n        if (arguments.length > 0) {\n            if (arguments[0] === 10) {\n                if (!_warnedToStringRadix) {\n                    _warnedToStringRadix = true;\n                    logger.warn(\"BigNumber.toString does not accept any parameters; base-10 is assumed\");\n                }\n            }\n            else if (arguments[0] === 16) {\n                logger.throwError(\"BigNumber.toString does not accept any parameters; use bigNumber.toHexString()\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n            else {\n                logger.throwError(\"BigNumber.toString does not accept parameters\", logger_1.Logger.errors.UNEXPECTED_ARGUMENT, {});\n            }\n        }\n        return toBN(this).toString(10);\n    };\n    BigNumber.prototype.toHexString = function () {\n        return this._hex;\n    };\n    BigNumber.prototype.toJSON = function (key) {\n        return { type: \"BigNumber\", hex: this.toHexString() };\n    };\n    BigNumber.from = function (value) {\n        if (value instanceof BigNumber) {\n            return value;\n        }\n        if (typeof (value) === \"string\") {\n            if (value.match(/^-?0x[0-9a-f]+$/i)) {\n                return new BigNumber(_constructorGuard, toHex(value));\n            }\n            if (value.match(/^-?[0-9]+$/)) {\n                return new BigNumber(_constructorGuard, toHex(new BN(value)));\n            }\n            return logger.throwArgumentError(\"invalid BigNumber string\", \"value\", value);\n        }\n        if (typeof (value) === \"number\") {\n            if (value % 1) {\n                throwFault(\"underflow\", \"BigNumber.from\", value);\n            }\n            if (value >= MAX_SAFE || value <= -MAX_SAFE) {\n                throwFault(\"overflow\", \"BigNumber.from\", value);\n            }\n            return BigNumber.from(String(value));\n        }\n        var anyValue = value;\n        if (typeof (anyValue) === \"bigint\") {\n            return BigNumber.from(anyValue.toString());\n        }\n        if ((0, bytes_1.isBytes)(anyValue)) {\n            return BigNumber.from((0, bytes_1.hexlify)(anyValue));\n        }\n        if (anyValue) {\n            // Hexable interface (takes priority)\n            if (anyValue.toHexString) {\n                var hex = anyValue.toHexString();\n                if (typeof (hex) === \"string\") {\n                    return BigNumber.from(hex);\n                }\n            }\n            else {\n                // For now, handle legacy JSON-ified values (goes away in v6)\n                var hex = anyValue._hex;\n                // New-form JSON\n                if (hex == null && anyValue.type === \"BigNumber\") {\n                    hex = anyValue.hex;\n                }\n                if (typeof (hex) === \"string\") {\n                    if ((0, bytes_1.isHexString)(hex) || (hex[0] === \"-\" && (0, bytes_1.isHexString)(hex.substring(1)))) {\n                        return BigNumber.from(hex);\n                    }\n                }\n            }\n        }\n        return logger.throwArgumentError(\"invalid BigNumber value\", \"value\", value);\n    };\n    BigNumber.isBigNumber = function (value) {\n        return !!(value && value._isBigNumber);\n    };\n    return BigNumber;\n}());\nexports.BigNumber = BigNumber;\n// Normalize the hex string\nfunction toHex(value) {\n    // For BN, call on the hex string\n    if (typeof (value) !== \"string\") {\n        return toHex(value.toString(16));\n    }\n    // If negative, prepend the negative sign to the normalized positive value\n    if (value[0] === \"-\") {\n        // Strip off the negative sign\n        value = value.substring(1);\n        // Cannot have multiple negative signs (e.g. \"--0x04\")\n        if (value[0] === \"-\") {\n            logger.throwArgumentError(\"invalid hex\", \"value\", value);\n        }\n        // Call toHex on the positive component\n        value = toHex(value);\n        // Do not allow \"-0x00\"\n        if (value === \"0x00\") {\n            return value;\n        }\n        // Negate the value\n        return \"-\" + value;\n    }\n    // Add a \"0x\" prefix if missing\n    if (value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    // Normalize zero\n    if (value === \"0x\") {\n        return \"0x00\";\n    }\n    // Make the string even length\n    if (value.length % 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    // Trim to smallest even-length string\n    while (value.length > 4 && value.substring(0, 4) === \"0x00\") {\n        value = \"0x\" + value.substring(4);\n    }\n    return value;\n}\nfunction toBigNumber(value) {\n    return BigNumber.from(toHex(value));\n}\nfunction toBN(value) {\n    var hex = BigNumber.from(value).toHexString();\n    if (hex[0] === \"-\") {\n        return (new BN(\"-\" + hex.substring(3), 16));\n    }\n    return new BN(hex.substring(2), 16);\n}\nfunction throwFault(fault, operation, value) {\n    var params = { fault: fault, operation: operation };\n    if (value != null) {\n        params.value = value;\n    }\n    return logger.throwError(fault, logger_1.Logger.errors.NUMERIC_FAULT, params);\n}\n// value should have no prefix\nfunction _base36To16(value) {\n    return (new BN(value, 36)).toString(16);\n}\nexports._base36To16 = _base36To16;\n// value should have no prefix\nfunction _base16To36(value) {\n    return (new BN(value, 16)).toString(36);\n}\nexports._base16To36 = _base16To36;\n//# sourceMappingURL=bignumber.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.version = void 0;\nexports.version = \"bignumber/5.6.0\";\n//# sourceMappingURL=_version.js.map","import ERC20ABI from 'adex-protocol-eth/abi/ERC20.json'\nimport { BigNumber, constants, Contract } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\n\nimport { NetworkId } from '../../constants/networks'\nimport { Account } from '../../hooks/useAccounts'\nimport { Token } from '../../hooks/usePortfolio'\nimport { UseToastsReturnType } from '../../hooks/useToasts'\nimport { getProvider } from '../provider'\n\nconst ERC20Interface = new Interface(ERC20ABI)\n\nconst approveToken = async (\n  scope: string,\n  networkId: NetworkId,\n  accountId: Account['id'],\n  address: string,\n  tokenAddress: Token['address'],\n  addRequestTxn: (id: string, txn: { to: string; value: string; data: string }) => any,\n  addToast: UseToastsReturnType['addToast'],\n  bigNumberHexAmount: BigNumber = constants.MaxUint256\n) => {\n  try {\n    const prefixId = scope.toLowerCase().replace(/' '/g, '_')\n    const provider = getProvider(networkId)\n    const tokenContract = new Contract(tokenAddress, ERC20Interface, provider)\n    const allowance = await tokenContract.allowance(accountId, address)\n\n    if (allowance.lt(bigNumberHexAmount)) {\n      addRequestTxn(`${prefixId}_approve_${Date.now()}`, {\n        to: tokenAddress,\n        value: '0x0',\n        data: ERC20Interface.encodeFunctionData('approve', [address, bigNumberHexAmount])\n      })\n    }\n  } catch (e: any) {\n    addToast(`${scope} Approve Error: ${e.message || e}`, { error: true })\n  }\n}\n\nexport default approveToken\n","import approveToken from './approveToken'\n\nexport default approveToken\n","export { BigNumber } from \"./bignumber\";\nexport { formatFixed, FixedFormat, FixedNumber, parseFixed } from \"./fixednumber\";\n// Internal methods used by address\nexport { _base16To36, _base36To16 } from \"./bignumber\";\n//# sourceMappingURL=index.js.map","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","const YearnVaultABI: string[] = [\n  'function token() view returns (address)',\n  'function deposit(uint256 _amount, address recipient)',\n  'function withdraw(uint256 maxShares, address recipient)',\n  'function pricePerShare() view returns (uint256)'\n]\n\nexport default YearnVaultABI\n"],"sourceRoot":""}