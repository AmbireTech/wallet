{"version":3,"sources":["components/SendTransaction/FeeSelector.js","components/SendTransaction/Actions.js","components/SendTransaction/noRelayer.js","components/SendTransaction/SendTransaction.js","../node_modules/adex-protocol-eth/js/ensureTypes.js","lib/icons.js","lib/formatters.js","lib/lattice.js","lib/getWallet.js","lib/ledgerWebHID.js","../node_modules/adex-protocol-eth/js/Bundle.js","../node_modules/adex-protocol-eth/js/index.js","../node_modules/adex-protocol-eth/js/Channel.js","../node_modules/adex-protocol-eth/js/Withdraw.js","../node_modules/adex-protocol-eth/js/MerkleTree.js","../node_modules/adex-protocol-eth/js/splitSig.js","../node_modules/adex-protocol-eth/js/UnbondCommitment.js","../node_modules/adex-protocol-eth/js/Permit.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","components/SendTransaction/helpers.js","components/common/TxnPreview/TxnPreview.js","../node_modules/ambire-common/src/services/requestToBundleTxn/requestToBundleTxn.ts"],"names":["SPEEDS","walletDiscountBlogpost","DISCOUNT_TOKENS_SYMBOLS","getBalance","token","balance","decimals","priceInUSD","WalletDiscountBanner","currenciesItems","tokens","estimation","onFeeCurrencyChange","onDismiss","feeSpeed","isGasTankEnabled","network","selectedFeeToken","symbol","includes","discount","walletDiscountTokens","filter","x","isTokenEligible","sort","a","b","parseInt","indexOf","length","discountToken","eligibleWalletToken","find","value","address","action","actionTxt","showSwap","className","href","target","rel","onClick","mini","to","FeeSelector","disabled","signer","setEstimation","setFeeSpeed","useState","editCustomFee","setEditCustomFee","insufficientFee","feeInUSD","success","checkIfDAppIncompatible","message","title","msg","getErrHint","FailingTxn","mapTxnErrMsg","tooltip","feeInNative","gasLimit","nativeAssetSymbol","remainingFeeTokenBalances","nativePrice","gasTankTokens","gasTank","map","nativeAssetPriceInUSD","item","nativeRate","price","toUpperCase","ethers","utils","parseUnits","toFixed","toString","label","localeCompare","tokenNetwork","icon","rest","getTokenIcon","id","extra","feeCurrencySelect","defaultValue","items","onChange","setCustomFee","prevEstimation","customFee","sufficientSpeeds","speed","i","highestSufficientSpeed","checkIsSelectorDisabled","feeAmountSelectors","isETH","getFeesData","feeInFeeToken","discountInFeeToken","getDiscountApplied","discountInFeeInUSD","baseFeeInFeeToken","baseFeeInFeeUSD","showInUSD","selectFeeSpeed","formatFloatTokenAmount","savedGas","minFee","minFeeUSD","maxFee","maxFeeUSD","discountMin","discountMax","discountInUSD","discountBaseMinInUSD","discountBaseMaxInUSD","baseFeeInUSD","baseMinFee","baseMaxFee","baseMinFeeUSD","baseMaxFeeUSD","isUnderpriced","isNaN","parseFloat","isOverpriced","join","isGasTankAvailable","small","placeholder","textOnly","balanceInUSD","Actions","approveTxn","rejectTxn","cancelSigning","signingStatus","code","passphrase","quickAccCredentials","setQuickAccCredentials","useEffect","prev","form","useRef","rejectButton","danger","type","signButtonLabel","inProgress","isRecoveryMode","finalBundle","recoveryMode","quickAcc","confCodeRequired","ref","onSubmit","e","preventDefault","password","required","minLength","style","visibility","pattern","autoComplete","maxLength","clear","current","checkValidity","IdentityInterface","Interface","require","FactoryInterface","sendNoRelayer","account","wallet","provider","quickAccManager","Error","getCode","identity","then","data","encodeFunctionData","txns","getNonce","sign","identityFactoryAddr","bytecode","salt","signature","estimateGas","from","toNumber","hexlify","Math","floor","getTransactionCount","txn","gas","gasPrice","nonce","sendTransaction","signTransaction","signed","txId","hash","getNetwork","chainId","name","ERC20","REJECT_MSG","WALLET_TOKEN_SYMBOLS","isInt","getDefaultFeeToken","currentAccGasTankState","getErrorMessage","SendTransaction","relayerURL","accounts","selectedAcc","requests","resolveMany","replacementBundle","replaceByDefault","mustReplaceNonce","onBroadcastedTxn","gasTankState","eligibleRequests","useMemo","toLowerCase","bundle","networkId","Bundle","toBundleTxn","Array","isArray","extraGas","reduce","requestIds","some","meta","addressLabel","xWalletReq","xWallet","makeBundle","SendTransactionWithBundle","isEnabled","replaceTx","setReplaceTx","setSigningStatus","addToast","useToasts","console","error","isMounted","currentBundle","unmounted","reestimate","estimate","fetch","replacing","minFeeInUSDPerGas","getNextNonce","estimateNoRelayer","getProvider","relayerless","catch","log","intvl","setInterval","clearInterval","getFinalBundle","useCallback","feeToken","addedGas","feeTxn","accountPresets","feeCollector","toHexAmount","nextFreeNonce","nextNonce","nextNonMinedNonce","fToken","gasTankFee","assetId","approveTxnImpl","getWallet","signerExtra","submit","approveTxnImplQuickAcc","canSkip2FA","fetchPost","primaryKeyBackup","undefined","Promise","resolve","setTimeout","pwd","alert","Wallet","fromEncryptedJson","JSON","parse","signatureTwo","accountAvatar","blockies","seed","toDataURL","canProceed","size","isFirstFailing","firstFailing","min","Date","now","TxnPreview","minute","disableDismiss","disableDismissLabel","backgroundImage","networkIconsById","pendingBundle","checked","isDeployed","timeout","bundleResult","match","result","BN","Address","startsWith","Bytes32","Buffer","slice","isBuffer","module","exports","Uint256","bn","isNeg","Bytes","Bytes32Array","bytes32Array","Channel","channel","leader","follower","guardian","tokenAddr","customIcons","zapperStorageTokenIcons","addr","net","amount","useGrouping","maximumFractionDigits","minimumFractionDigits","toLocaleString","max","err","crypto","HARDENED_OFFSET","getAddressesReqOpts","startPath","n","latticeInit","commKey","clientConfig","privKey","Client","latticeConnect","client","deviceId","reject","connect","isPaired","errConnect","latticePair","secret","pair","hasActiveWallet","errPair","latticeGetAddresses","getAddresses","res","errGetAddresses","latticeSignMessage","dataMsg","protocol","payload","signerPath","signOptsMsg","currency","signedTx","signedMsg","sig","r","s","v","errSignMessage","latticeSignMessage712","reqData","latticeSignTransaction","unsignedTxObj","txData","useEIP155","signOpts","serializedSigned","serialize","errSignTxn","wallets","opts","one","getWalletNew","TrezorConnect","manifest","email","appUrl","providerTrezor","TrezorSubprovider","trezorConnectClientApi","_initialDerivedKeyInfo","hdKey","HDNode","fromExtendedKey","info","xpub","derivationPath","baseDerivationPath","getInitialDerivedKeyInfo","signMessage","signPersonalMessageAsync","params","signTransactionAsync","transaction","networks","broadcastProvider","isConnected","matchAddress","getAccountsAsync","addresses","_signTypedData","domain","types","domainSeparator","_TypedDataEncoder","hashDomain","hashStructMessage","hashStruct","getPrimaryType","getPayload","_initialDerivedKeyInfoAsync","initialDerivedKeyInfo","derivedKeyInfo","_findDerivedKeyInfoForAddress","path","_trezorConnectClientApi","ethereumSignTypedData","metamask_v4_compat","domain_separator_hash","message_hash","response","transportProtocol","ledgerSignMessage","ledgerSignTransaction","ledgerGetAddresses","ledgerSignMessage712","LedgerSubprovider","ledgerEthereumClientFactoryAsync","ledgerEthereumBrowserClientFactoryAsync","wrapLatticeError","window","ethereum","providers","Web3Provider","signerObject","getSigner","matchChain","listAccounts","fn","arg","apply","this","ethUtil","connectedDevices","PARENT_HD_PATH","getTransport","TransportWebHID","list","opened","open","request","transport","getAccounts","close","parentKeyDerivationPath","getAddressInternal","o","statusCode","ledgerResponse","publicKey","chainCode","mainAddress","addressOfHDKey","calculateDerivedHDKeyInfos","appEth","AppEth","ledgerTimeout","timeoutHandle","race","getAddress","clearTimeout","fromAddr","serializedUnsigned","accountsData","substr","rsvResponse","intV","signerAddress","signPersonalMessage","rsvReply","signEIP712HashedMessage","count","derivedKeys","fullDerivationPath","derive","derivedKey","push","derivedPublicKey","ethereumAddressUnprefixed","publicToAddress","addHexPrefix","AbiCoder","arrayify","keccak256","Contract","BigNumber","ensure","IdentityABI","QuickAccManagerABI","args","prototype","queryParams","Object","fromEntries","entries","URLSearchParams","isSingleSigMode","encoded","getSignable","signMsg","cancel","UNPREDICTABLE_GAS_REGEX","signatureOne","abiCoder","sigInner","encode","timelock","signMsg712","userTxnBundle","getChainID","accHash","two","mapSignatureV","sigRaw","useFinalDigestSigMode","typedDataSign","nonces","url","body","headers","method","stringify","json","txParams","blockTag","estimateGasWithCatch","getErrMsg","getFeeData","feeData","baseFee","slow","medium","fast","ape","ERROR_SIG","call","returnData","decode","tx","send","signMessage712","channelLib","withdrawalLib","MerkleTree","splitSig","unbondCommitmentlLib","Permit","bundleLib","abi","freeze","arrayBuffer","rawEncode","hashHex","toSolidityTuple","hashToSign","contractAddr","balanceRoot","getSignableStateRoot","hashToSignHex","stateRoot","getResumeSignableMessage","challengeExpires","solidityPack","getResumeSignableMessageHex","channelId","getBalanceLeaf","acc","amnt","getSpenderBalanceLeaf","ChannelState","Challenged","Active","Withdraw","balanceTreeAmount","sigLeader","sigFollower","proof","combinedHash","first","second","sorted","concat","compare","getLayers","elements","layers","getNextLayer","layer","element","index","arr","_elements","every","buffers","buffer","findIndex","equals","assign","l","root","getRoot","pairIndex","getPair","inputSig","substring","UnbondCommitment","owner","shares","unlocksAt","buf","defaultAbiCoder","toUtf8Bytes","PERMIT_TYPEHASH","getDomainSeparator","tokenAddress","getApprovalDigest","approve","deadline","DOMAIN_SEPARATOR","spender","_objectWithoutProperties","source","excluded","key","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","pow","getAddedGas","contractErrors","contractMsg","round","multiplier","getFeePaymentConsequences","discountMultiplier","totalMultiplier","isCrossChainNativeSelected","getNetworkSymbol","mined","disableExpand","useConstants","constants","tokenList","humanizerInfo","isExpanded","setExpanded","contractName","getName","networkDetails","summary","getTransactionSummary","extended","entry","explorerUrl","stopPropagation","canShowLink","parseExtendedSummaryItem","setKnownAddressNames","isKnown","formatUnits","IdentityFactory","IdentityFactoryABI","deploySalt"],"mappings":"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","file":"static/js/11.bc272eb3.chunk.js","sourcesContent":["import './FeeSelector.scss'\n\nimport { AiOutlineWarning } from 'react-icons/ai'\nimport { Loading, Select, ToolTip, Button, TextInput, DAppIncompatibilityWarningMsg } from 'components/common'\nimport {\n  isTokenEligible,\n  mapTxnErrMsg,\n  getErrHint,\n  getFeesData,\n  getDiscountApplied,\n  checkIfDAppIncompatible\n} from './helpers'\nimport { FaPercentage } from 'react-icons/fa'\nimport { MdInfoOutline } from 'react-icons/md'\nimport { NavLink } from 'react-router-dom'\nimport { MdEdit } from 'react-icons/md'\nimport { useState } from 'react'\nimport { getTokenIcon } from 'lib/icons'\nimport { formatFloatTokenAmount } from 'lib/formatters'\nimport { ethers } from 'ethers'\n\nconst SPEEDS = ['slow', 'medium', 'fast', 'ape']\nconst walletDiscountBlogpost = 'https://blog.ambire.com/move-crypto-with-ambire-pay-gas-with-wallet-and-save-30-on-fees-35dca1002697'\nconst OVERPRICED_MULTIPLIER = 1.2\n// NOTE: Order matters for for secondary fort after the one by discount\nconst DISCOUNT_TOKENS_SYMBOLS = ['xWALLET', 'WALLET-STAKING', 'WALLET']\n\nfunction getBalance(token) {\n  const { balance, decimals, priceInUSD } = token\n  return balance / decimals * priceInUSD\n}\n\nconst WalletDiscountBanner = ({ currenciesItems, tokens, estimation, onFeeCurrencyChange, onDismiss, feeSpeed, isGasTankEnabled, network }) => {\n  if (estimation.selectedFeeToken?.symbol\n    && (DISCOUNT_TOKENS_SYMBOLS.includes(estimation.selectedFeeToken?.symbol)\n      || estimation.selectedFeeToken.discount)\n  ) {\n    return null\n  }\n  const walletDiscountTokens = [...tokens]\n    .filter(x => DISCOUNT_TOKENS_SYMBOLS.includes(x.symbol) && x.discount && isTokenEligible(x, feeSpeed, estimation, isGasTankEnabled, network))\n    .sort((a, b) =>\n      b.discount - a.discount\n      || ((!parseInt(a.balance) || !parseInt(b.balance)) ? getBalance(b) - getBalance(a) : 0)\n      || DISCOUNT_TOKENS_SYMBOLS.indexOf(a.symbol) - DISCOUNT_TOKENS_SYMBOLS.indexOf(b.symbol)\n    )\n\n  if (!walletDiscountTokens.length) return null\n\n  const discountToken = walletDiscountTokens[0]\n\n  const { discount } = discountToken\n  const eligibleWalletToken = currenciesItems.find(x => x.value && (x.value === 'WALLET' || x.value === discountToken.address))\n  const action = !!eligibleWalletToken\n    ? () => onFeeCurrencyChange(eligibleWalletToken)\n    : null\n  //TODO: go to swap \n  const actionTxt = !!eligibleWalletToken ? `USE ${discountToken.symbol}` : `BUY ${discountToken.symbol}`\n  const showSwap = !action\n\n  return (\n    <div className='wallet-discount-banner row'>\n      <div className='row'>\n        Get {discount * 100} <FaPercentage /> fees discount with &nbsp;<strong>$WALLET</strong> &nbsp;\n        <a\n          className=\"address row\"\n          href={walletDiscountBlogpost}\n          target=\"_blank\"\n          rel=\"noreferrer noopener\">\n          <MdInfoOutline />\n        </a>\n      </div>\n      {!!action && <Button onClick={action} mini>\n        {actionTxt}\n      </Button>}\n      {showSwap && <div className='swap-info'>\n        You can get $WALLET, just use the &nbsp;\n        <NavLink className='link' to={'/wallet/swap'} onClick={onDismiss}>\n          Swap\n        </NavLink> menu on the left!\n      </div>}\n    </div>\n  )\n}\n\nconst mapGasTankTokens = nativePrice => item => {\n  const nativeRate = item.address === '0x0000000000000000000000000000000000000000' ? null : nativePrice / item.price\n  return {\n    ...item,\n    symbol: item.symbol.toUpperCase(),\n    balance: ethers.utils.parseUnits(\n      item.balance.toFixed(item.decimals).toString(),\n      item.decimals\n    ).toString(),\n    nativeRate\n  }\n}\n\nexport function FeeSelector({ disabled, signer, estimation, network, setEstimation, feeSpeed, setFeeSpeed, onDismiss, isGasTankEnabled }) {\n  const [editCustomFee, setEditCustomFee] = useState(false)\n  if (!estimation) return (<Loading />)\n  // Only check for insufficient fee in relayer mode (.feeInUSD is available)\n  // Otherwise we don't care whether the user has enough for fees, their signer wallet will take care of it\n  const insufficientFee = estimation && estimation.feeInUSD\n    && !isTokenEligible(estimation.selectedFeeToken, feeSpeed, estimation, isGasTankEnabled, network)\n  if (estimation && !estimation.success) return (!checkIfDAppIncompatible(estimation.message) ?\n    <FailingTxn\n      message={<>The current transaction batch cannot be sent because it will fail: {mapTxnErrMsg(estimation.message)}</>}\n      tooltip={getErrHint(estimation.message)}\n    /> : <DAppIncompatibilityWarningMsg \n            title={'Unable to send transaction'}\n            msg={getErrHint(estimation.message)}\n          />)\n\n  if (!estimation.feeInNative) return (<></>)\n  if (estimation && !estimation.feeInUSD && estimation.gasLimit < 40000) {\n    return (<div>\n      <b>WARNING:</b> Fee estimation unavailable when you're doing your first account transaction and you are not connected to a relayer. You will pay the fee from <b>{signer.address}</b>, make sure you have {network.nativeAssetSymbol} there.\n    </div>)\n  }\n  if (estimation && estimation.feeInUSD && !estimation.remainingFeeTokenBalances) {\n    return (<div className='balance-error'>Internal error: fee balances not available. This should never happen, please report this on help.ambire.com</div>)\n  }\n\n  const { nativeAssetSymbol } = network\n  const gasTankTokens = estimation.gasTank?.map(mapGasTankTokens(estimation.nativeAssetPriceInUSD))\n  const tokens = (isGasTankEnabled && gasTankTokens?.length)\n    ? gasTankTokens\n    // fallback to the native asset if fee tokens cannot be retrieved for wh  atever reason\n    : estimation.remainingFeeTokenBalances || [{ symbol: nativeAssetSymbol, decimals: 18, address: '0x0000000000000000000000000000000000000000' }]\n\n  const onFeeCurrencyChange = ({ value, label}) => {\n    const token = tokens.find(({ address, symbol }) => (address === value) && (symbol === label))\n    setEstimation({ ...estimation, selectedFeeToken: token })\n  }\n\n  const currenciesItems = tokens\n    // NOTE: filter by slowest and then will disable the higher fees speeds otherwise \n    // it will just hide the token from the select\n    .sort((a, b) =>\n    (isTokenEligible(b, SPEEDS[0], estimation, isGasTankEnabled, network) - isTokenEligible(a, SPEEDS[0], estimation, isGasTankEnabled, network))\n    || (DISCOUNT_TOKENS_SYMBOLS.indexOf(b.symbol) - DISCOUNT_TOKENS_SYMBOLS.indexOf(a.symbol))\n    || ((b.discount || 0) - (a.discount || 0))\n    || a?.symbol.toUpperCase().localeCompare(b?.symbol.toUpperCase())\n  )\n    .map(({ address, symbol, discount, network: tokenNetwork, icon, ...rest }) => ({\n      disabled: !isTokenEligible({address, symbol, discount, ...rest }, SPEEDS[0], estimation, isGasTankEnabled, network),\n      icon: icon || (address ? getTokenIcon(isGasTankEnabled ? tokenNetwork : network.id, address) : null),\n      label: symbol,\n      value: address || symbol,\n      ...(discount ? {\n        extra: <div className='discount'> - {discount * 100} <FaPercentage /> </div>\n      } : {})\n    }))\n\n  const feeCurrencySelect = estimation.feeInUSD ? (<>\n    <div className='section'>\n      <div className='section-title'>Fee Currency</div>\n      <Select\n        className=\"fee-select\"\n        disabled={disabled}\n        defaultValue={estimation.selectedFeeToken?.address || estimation.selectedFeeToken?.symbol}\n        items={currenciesItems}\n        onChange={onFeeCurrencyChange}\n      />\n    </div>\n  </>) : (<></>)\n\n  const { discount = 0, symbol, nativeRate = null, decimals } = estimation.selectedFeeToken || {}\n\n  const setCustomFee = value => setEstimation(prevEstimation => ({\n    ...prevEstimation,\n    customFee: value\n  }))\n\n  const selectFeeSpeed = speed => {\n    setFeeSpeed(speed)\n    setCustomFee(null)\n    setEditCustomFee(false)\n  }\n\n  if (insufficientFee) {\n    const sufficientSpeeds = SPEEDS.filter((speed, i) => isTokenEligible(estimation.selectedFeeToken, speed, estimation, isGasTankEnabled, network))\n    const highestSufficientSpeed = sufficientSpeeds[sufficientSpeeds.length - 1]\n    setFeeSpeed(highestSufficientSpeed)\n  }\n\n  const checkIsSelectorDisabled = speed => {\n    const insufficientFee = !isTokenEligible(estimation.selectedFeeToken, speed, estimation, isGasTankEnabled, network)\n    return disabled || insufficientFee\n  }\n\n  const feeAmountSelectors = SPEEDS.map(speed => {\n    const isETH = symbol === 'ETH' && nativeAssetSymbol === 'ETH'\n    const {\n      feeInFeeToken,\n      feeInUSD,\n      // NOTE: get the estimation res data w/o custom fee for the speeds\n    } = getFeesData({ ...estimation.selectedFeeToken }, { ...estimation, customFee: null }, speed, isGasTankEnabled, network)\n    const discountInFeeToken = getDiscountApplied(feeInFeeToken, discount)\n    const discountInFeeInUSD = getDiscountApplied(feeInUSD, discount)\n\n    const baseFeeInFeeToken = feeInFeeToken + discountInFeeToken\n    const baseFeeInFeeUSD = feeInUSD ? feeInUSD + discountInFeeInUSD : null\n\n    const showInUSD = (nativeRate !== null) && baseFeeInFeeUSD\n\n    return (\n      <div\n        key={speed}\n        className={`feeSquare${!estimation.customFee && feeSpeed === speed ? ' selected' : ''}${checkIsSelectorDisabled(speed) ? ' disabled' : ''}`}\n        onClick={() => !checkIsSelectorDisabled(speed) && selectFeeSpeed(speed)}\n      >\n        {!!discount && <FaPercentage className='discount-badge' />}\n        <div className='speed'>{speed}</div>\n        <div className='feeEstimation'>\n          {(isETH ? 'Ξ ' : '')\n            + (showInUSD ? `$${formatFloatTokenAmount(baseFeeInFeeUSD, true, 4)}` : formatFloatTokenAmount(baseFeeInFeeToken, true, decimals))\n            + (!isETH && !showInUSD ? ` ${estimation.selectedFeeToken.symbol}` : '')\n          }\n        </div>\n        {!isETH && !showInUSD && <div className='feeEstimation symbol'>\n          {estimation.selectedFeeToken.symbol}\n        </div>}\n      </div>\n    )\n  })\n\n  const {\n    feeInFeeToken,\n    feeInUSD,\n    savedGas,\n  } = getFeesData(estimation.selectedFeeToken, estimation, feeSpeed, isGasTankEnabled, network)\n\n  const {\n    feeInFeeToken: minFee,\n    feeInUSD: minFeeUSD,\n  } = getFeesData({ ...estimation.selectedFeeToken }, { ...estimation, customFee: null }, 'slow', isGasTankEnabled, network)\n\n  const {\n    feeInFeeToken: maxFee,\n    feeInUSD: maxFeeUSD,\n  } = getFeesData({ ...estimation.selectedFeeToken }, { ...estimation, customFee: null }, 'ape', isGasTankEnabled, network)\n\n  const discountMin = getDiscountApplied(minFee, discount)\n  const discountMax = getDiscountApplied(maxFee, discount)\n\n  const discountInFeeToken = getDiscountApplied(feeInFeeToken, discount)\n  const discountInUSD = getDiscountApplied(feeInUSD, discount)\n  const discountBaseMinInUSD = getDiscountApplied(minFeeUSD, discount)\n  const discountBaseMaxInUSD = getDiscountApplied(maxFeeUSD, discount)\n\n  // Fees with no discounts applied\n  const baseFeeInFeeToken = feeInFeeToken + discountInFeeToken\n  const baseFeeInUSD = feeInUSD + discountInUSD\n  const baseMinFee = minFee + discountMin\n  const baseMaxFee = (maxFee + discountMax) * OVERPRICED_MULTIPLIER\n  const baseMinFeeUSD = minFeeUSD + discountBaseMinInUSD\n  const baseMaxFeeUSD = (maxFeeUSD + discountBaseMaxInUSD) * OVERPRICED_MULTIPLIER\n\n  const isUnderpriced = !!estimation.customFee\n    && !isNaN(parseFloat(estimation.customFee))\n    && (baseFeeInFeeToken < baseMinFee)\n\n  const isOverpriced = !!estimation.customFee\n    && !isNaN(parseFloat(estimation.customFee))\n    && (baseFeeInFeeToken > baseMaxFee)\n\n  return (<>\n    {insufficientFee ?\n      (<div className='balance-error'>\n        Insufficient balance for the fee.<br />Accepted tokens: {(estimation.remainingFeeTokenBalances || []).map(x => x.symbol).join(', ')}\n        { isGasTankEnabled && <div>Disable your Gas Tank to use the default fee tokens.</div> }\n      </div>)\n      : feeCurrencySelect\n    }\n\n    {WalletDiscountBanner({\n      selectedFeeToken: estimation.selectedFeeToken,\n      currenciesItems,\n      tokens,\n      estimation,\n      onFeeCurrencyChange,\n      onDismiss,\n      feeSpeed,\n      isGasTankEnabled,\n      network\n    })}\n\n    <div className='section-title'>\n      <span>Transaction Speed</span>\n      { network.isGasTankAvailable && \n        <span>Gas Tank: { isGasTankEnabled ? \n          (<span className='gas-tank-enabled'>Enabled</span>) : \n          (<span className='gas-tank-disabled'>Disabled</span>)}\n        </span> \n      }\n    </div>\n    <div className='fee-selector'>\n      <div className='section'>\n        <div id='fee-selector'>{feeAmountSelectors}</div>\n        {\n          !editCustomFee ?\n            <div id='edit-custom-fee' onClick={() => setEditCustomFee(true)}>\n              <MdEdit />Edit fee\n            </div>\n            :\n            <div id='custom-fee-selector'>\n              <div className='title'>Custom Fee ({symbol})</div>\n              <TextInput\n                small\n                placeholder='Enter amount'\n                className={`${estimation.customFee ? 'selected' : ''}`}\n                onChange={value => setCustomFee(value)}\n                value={estimation.customFee}\n              />\n              {isUnderpriced &&\n                <div className='price-warning'>\n                  <div>Custom Fee too low. You can try to \"sign and send\" the transaction but most probably it will fail.</div>\n                  <div>Min estimated fee: &nbsp;\n                    {<Button textOnly\n                      onClick={() => setCustomFee(baseMinFee)}\n                    >\n                      {baseMinFee} {symbol}\n                    </Button>}\n                    {!isNaN(baseMinFeeUSD) &&\n                      <span>&nbsp; (~${formatFloatTokenAmount(baseMinFeeUSD, true, 4)}) </span>\n                    }\n                  </div>\n                </div>\n              }\n              {isOverpriced &&\n                <div className='price-warning'>\n                  <div>Custom Fee is higher than the APE speed. You will pay more than probably needed. Make sure you know what are you doing!</div>\n                  <div>Recommended max fee: &nbsp;\n                    {<Button textOnly\n                      onClick={() => setCustomFee(baseMaxFee)}\n                    >\n                      {baseMaxFee} {symbol}\n                    </Button>}\n                    {!isNaN(baseMaxFeeUSD) &&\n                      <span>&nbsp; (~${formatFloatTokenAmount(baseMaxFeeUSD, true, 4)}) </span>\n                    }\n                  </div>\n                </div>\n              }\n            </div>\n        }\n      </div>\n\n      <div className='fees-breakdown'>\n        {(<div className='fee-row native-fee-estimation'>\n          <div>\n            Fee {!!discount && <span className='discount-label'>*</span>}\n            {!!(discount && DISCOUNT_TOKENS_SYMBOLS.includes(estimation.selectedFeeToken?.symbol)) &&\n              <a\n                className=\"address row discount-label\"\n                href={walletDiscountBlogpost}\n                target=\"_blank\"\n                rel=\"noreferrer\">\n                &nbsp;<MdInfoOutline />\n              </a>}:\n          </div>\n          <div className='fee-amounts'>\n            {!isNaN(baseFeeInUSD) &&\n              <div>\n                ~${formatFloatTokenAmount(baseFeeInUSD, true, 4)}\n              </div>\n            }\n            {!isNaN(baseFeeInFeeToken) && <div>\n              {formatFloatTokenAmount(baseFeeInFeeToken, true, decimals) + ' ' + estimation?.selectedFeeToken?.symbol}\n            </div>\n            }\n          </div>\n        </div>)}\n\n        {!!discount && (<div className='fee-row native-fee-estimation discount-label'>\n          <div>\n            You save ({discount * 100}%):\n          </div>\n          <div className='fee-amounts'>\n            <div>\n              ~${formatFloatTokenAmount(discountInUSD, true, 4)}\n            </div>\n            {/* <div>\n              {discountInFeeToken + ' ' + estimation.selectedFeeToken.symbol}\n            </div> */}\n          </div>\n        </div>)}\n\n        {!!discount && (<div className='fee-row native-fee-estimation discount-label'>\n          <div>\n            You pay:\n          </div>\n          <div className='fee-amounts'>\n            <div>\n              ~${formatFloatTokenAmount(feeInUSD, true, 4)}\n            </div>\n          </div>\n        </div>)}\n        {!isGasTankEnabled && !isNaN((feeInUSD / estimation.gasLimit) * savedGas) && \n            <div className='fee-row native-fee-estimation warning-label'>\n              <div>\n              Enable Gas Tank to save:\n              </div>\n              <div className='fee-amounts'>\n                <div>\n                  ${formatFloatTokenAmount(((feeInUSD / estimation.gasLimit) * savedGas), true, 4)}\n                </div>\n              </div>\n            </div>}\n        {!!isGasTankEnabled && (<>\n          <div className='fee-row native-fee-estimation discount-label'>\n            <div>\n              Gas Tank fee token balance:\n            </div>\n            <div className='fee-amounts'>\n              <div>\n                ${formatFloatTokenAmount(estimation.selectedFeeToken.balanceInUSD, true, 4)}\n              </div>\n            </div>\n          </div>\n         {!isNaN((feeInUSD / estimation.gasLimit) * savedGas) && \n            <div className='fee-row native-fee-estimation discount-label'>\n              <div>\n                Gas Tank saves you:\n              </div>\n              <div className='fee-amounts'>\n                <div>\n                  ${formatFloatTokenAmount(((feeInUSD / estimation.gasLimit) * savedGas), true, 4)}\n                </div>\n              </div>\n            </div>}\n        </>)}\n      </div>\n    </div>\n\n    {!estimation.feeInUSD ?\n      (<span className='no-relayer-msg'><b>WARNING:</b> Paying fees in tokens other than {nativeAssetSymbol} is unavailable because you are not connected to a relayer. You will pay the fee from <b>{signer.address}</b>.</span>)\n      : (<></>)}\n  </>)\n}\n\nexport function FailingTxn({ message, tooltip = '' }) {\n  return (<div className='failingTxn'>\n    <ToolTip label={tooltip}>\n      <div className='error-title'><AiOutlineWarning></AiOutlineWarning> Warning</div>\n      <div className='error-message'>{message}</div>\n    </ToolTip>\n  </div>)\n}","import { useState, useRef, useEffect } from 'react'\nimport { Button, Loading, TextInput } from 'components/common'\nimport { isTokenEligible } from './helpers'\nimport { MdCheck, MdCheckCircle, MdOutlineCheck, MdOutlineClose } from 'react-icons/md'\n\nexport default function Actions({ \n    estimation, \n    feeSpeed, \n    approveTxn, \n    rejectTxn, \n    cancelSigning, \n    signingStatus, \n    isGasTankEnabled, \n    network\n  }) {\n  const [quickAccCredentials, setQuickAccCredentials] = useState({ code: '', passphrase: '' })\n  // reset this every time the signing status changes\n  useEffect(() => !signingStatus && setQuickAccCredentials(prev => ({ ...prev, code: '' })), [signingStatus])\n\n  const form = useRef(null)\n\n  const rejectButton = rejectTxn && (\n    // WARNING: DO NOT remove type='button' here, it indicates that this button is not a submit button in the <form>\n    // if it is, pressing Enter will reject the transaction rather than submit it\n    <Button danger icon={<MdOutlineClose/>} type='button' className='rejectTxn' onClick={rejectTxn}>Reject</Button>\n  )\n  const insufficientFee = estimation && estimation.feeInUSD\n    && !isTokenEligible(estimation.selectedFeeToken, feeSpeed, estimation, isGasTankEnabled, network)\n  const willFail = (estimation && !estimation.success) || insufficientFee\n  if (willFail) {\n    return (<div className='buttons'>\n      {rejectButton}\n    </div>)\n  }\n\n  const signButtonLabel = signingStatus && signingStatus.inProgress ?\n    <><Loading/>Signing...</>\n    : <><MdOutlineCheck/>Sign and send</>\n\n  const isRecoveryMode = signingStatus && signingStatus.finalBundle && signingStatus.finalBundle.recoveryMode\n  if (signingStatus && signingStatus.quickAcc) {\n    return (<>\n      {\n        signingStatus.confCodeRequired ?\n          <div className='confirmation-code-info'>\n            <div className='confirmation-code-info-title'><MdCheckCircle/>Confirmation</div>\n            <div className='confirmation-code-info-message'>\n              {signingStatus.confCodeRequired === 'otp' ? <>Please enter your OTP code and your password.</> : null}\n              {signingStatus.confCodeRequired === 'email' ?\n                (isRecoveryMode\n                  ? <>A confirmation code was sent to your email, please enter it to initiate the recovery.</>\n                  : <>A confirmation code was sent to your email, please enter it along with your password.</>)\n                      : null\n\t      }\n            </div>\n          </div>\n          :\n          null\n      }\n  \n      <form ref={form} className='quickAccSigningForm' onSubmit={e => { e.preventDefault() }}>\n        {signingStatus.confCodeRequired === 'notRequired' &&\n          <p className='code-2fa-not-required-msg'>You already sent 3 or more transactions to this address, confirmation code is not needed.</p>\n        }\n        <div className='inputs-container'>\n          <TextInput\n            small\n            password\n            required\n            minLength={3}\n            placeholder='Password'\n            value={quickAccCredentials.passphrase}\n            style={isRecoveryMode ? { visibility: 'hidden' } : {} }\n            disabled={isRecoveryMode}\n            onChange={value => setQuickAccCredentials({ ...quickAccCredentials, passphrase: value })}\n          ></TextInput>\n          {/* Changing the autoComplete prop to a random string seems to disable it in more cases */}\n          {signingStatus.confCodeRequired !== 'notRequired' &&\n            <TextInput\n              small\n              pattern='[0-9]+'\n              title='Confirmation code should be 6 digits'\n              autoComplete='nope'\n              required minLength={6} maxLength={6}\n              placeholder={signingStatus.confCodeRequired === 'otp' ? 'Authenticator OTP code' : 'Confirmation code'}\n              value={quickAccCredentials.code}\n              onChange={value => setQuickAccCredentials({ ...quickAccCredentials, code: value })}\n            ></TextInput>\n          }\n        </div>\n        <div className='buttons'>\n          <Button\n            clear\n            disabled={signingStatus && signingStatus.inProgress}\n            icon={<MdOutlineClose/>}\n            type='button'\n            className='cancelSigning'\n            onClick={cancelSigning}\n          >\n            Cancel\n          </Button>\n          <Button \n            className='confirmSigning'\n            onClick={() => {\n              if (!form.current.checkValidity()) return\n              approveTxn({ quickAccCredentials })\n            }}\n          >\n            { signingStatus && signingStatus.inProgress ? <Loading/> : <><MdCheck/> Confirm</>}\n          </Button>\n        </div>\n      </form>\n    </>)\n  }\n\n  return (<div className='buttons'>\n      {rejectButton}\n      <Button className='approveTxn' disabled={!estimation || signingStatus} onClick={approveTxn}>\n        {signButtonLabel}\n      </Button>\n  </div>)\n}\n","import { Interface, hexlify } from 'ethers/lib/utils'\nconst IdentityInterface = new Interface(require('adex-protocol-eth/abi/Identity5.2'))\nconst FactoryInterface = new Interface(require('adex-protocol-eth/abi/IdentityFactory5.2'))\n\nexport async function sendNoRelayer ({ finalBundle, account, network, wallet, estimation, feeSpeed, provider }) {\n    const { signer } = finalBundle\n    // @TODO: in case we need deploying, run using deployAndCall pipeline with signed msgs\n    // @TODO: quickAccManager\n    if (signer.quickAccManager) throw new Error('quickAccManager not supported in relayerless mode yet')\n    // currently disabled quickAccManager cause 1) we don't have a means of getting the second sig 2) we still have to sign txes so it's inconvenient\n    // if (signer.quickAccManager) await finalBundle.sign(wallet)\n    //const [to, data] = signer.quickAccManager ? [signer.quickAccManager, QuickAccManagerInterface.encodeFunctionData('send', [finalBundle.identity, [signer.timelock, signer.one, signer.two], [false, finalBundle.signature, '0x']])] :\n\n    // NOTE: just adding values to gasLimit is bad because 1) they're hardcoded estimates\n    // and 2) the fee displayed in the UI does not reflect that\n    const isDeployed = await provider.getCode(finalBundle.identity).then(code => code !== '0x')\n    let gasLimit\n    let to, data\n    if (isDeployed) {\n      gasLimit = estimation.gasLimit + 20000\n      to = finalBundle.identity\n      data = IdentityInterface.encodeFunctionData('executeBySender', [finalBundle.txns])\n    } else {\n      await finalBundle.getNonce(provider)\n      // just some hardcoded value to make the signing pass\n      finalBundle.gasLimit = 400000\n      await finalBundle.sign(wallet)\n      to = account.identityFactoryAddr\n      data = FactoryInterface.encodeFunctionData('deployAndExecute', [account.bytecode, account.salt, finalBundle.txns, finalBundle.signature])\n      gasLimit = (await provider.estimateGas({ to, data, from: signer.address })).toNumber() + 20000\n    }\n\n    const txn = {\n      from: signer.address,\n      to, data,\n      gas: hexlify(gasLimit),\n      gasPrice: hexlify(Math.floor(estimation.feeInNative[feeSpeed] / estimation.gasLimit * 1e18)),\n      nonce: hexlify(await provider.getTransactionCount(signer.address))\n    }\n    try {\n      let txId\n      if (!wallet.sendTransaction) {\n        // HW wallets which only sign\n        const signed = await wallet.signTransaction(txn)\n        txId = (await provider.sendTransaction(signed)).hash\n      } else {\n        // web3 injectors which can't sign, but can sign+send\n        // they also don't like the gas arg they fully control the chain ID\n        if (wallet.provider) {\n          const { chainId } = await wallet.provider.getNetwork()\n          if (network.chainId !== chainId) throw new Error(`Connected to the wrong network: please switch to ${network.name}`)\n          txId = (await wallet.sendTransaction({ from: txn.from, to: txn.to, data: txn.data, gasPrice: txn.gasPrice, nonce: txn.nonce })).hash\n        } else { // implementation of sendTransaction in getWallet\n          txId = (await wallet.sendTransaction({ from: txn.from, to: txn.to, data: txn.data, gasPrice: txn.gasPrice, gas: txn.gas, nonce: txn.nonce, chainId: network.chainId })).hash\n        }\n\n      }\n      return { success: true, txId }\n    } catch(e) {\n      if (e.code === 'INSUFFICIENT_FUNDS') throw new Error(`Insufficient gas fees: you need to have ${network.nativeAssetSymbol} on ${signer.address}`)\n      throw e\n    }\n  }\n","//import { GrInspect } from 'react-icons/gr'\n// GiObservatory is also interesting\nimport { GiGorilla } from 'react-icons/gi'\nimport { FaChevronLeft } from 'react-icons/fa'\nimport { MdOutlineClose, MdOutlineInfo, MdWarning } from 'react-icons/md'\nimport './SendTransaction.scss'\nimport { useEffect, useState, useMemo, useRef } from 'react'\nimport { Bundle } from 'adex-protocol-eth/js'\nimport { Wallet } from 'ethers'\nimport { Interface } from 'ethers/lib/utils'\nimport * as blockies from 'blockies-ts'\nimport { useToasts } from 'hooks/toasts'\nimport { getWallet } from 'lib/getWallet'\nimport accountPresets from 'ambire-common/src/constants/accountPresets'\nimport { networkIconsById } from 'consts/networks'\nimport { FeeSelector, FailingTxn } from './FeeSelector'\nimport Actions from './Actions'\nimport TxnPreview from 'components/common/TxnPreview/TxnPreview'\nimport { sendNoRelayer } from './noRelayer'\nimport {\n  isTokenEligible,\n  // getFeePaymentConsequences,\n  getFeesData,\n  toHexAmount\n } from './helpers'\nimport { fetchPost } from 'lib/fetch'\nimport { toBundleTxn } from 'ambire-common/src/services/requestToBundleTxn'\nimport { getProvider } from 'lib/provider'\nimport { MdInfo } from 'react-icons/md'\nimport { useCallback } from 'react'\nimport { ToolTip, Button, Loading } from 'components/common'\nimport { ethers } from 'ethers'\nimport { Checkbox } from 'components/common'\n\nconst ERC20 = new Interface(require('adex-protocol-eth/abi/ERC20'))\n\nconst DEFAULT_SPEED = 'fast'\nconst REESTIMATE_INTERVAL = 15000\n\nconst REJECT_MSG = 'Ambire user rejected the request'\n\nconst WALLET_TOKEN_SYMBOLS = ['xWALLET', 'WALLET']\n\nconst isInt = x => !isNaN(x) && x !== null\n\nconst getDefaultFeeToken = (remainingFeeTokenBalances, network, feeSpeed, estimation, currentAccGasTankState) => {\n  if(!remainingFeeTokenBalances?.length) {\n    return { symbol: network.nativeAssetSymbol, decimals: 18, address: '0x0000000000000000000000000000000000000000' }\n  }\n\n  return remainingFeeTokenBalances\n  .sort((a, b) =>\n    (WALLET_TOKEN_SYMBOLS.indexOf(b?.symbol) - WALLET_TOKEN_SYMBOLS.indexOf(a?.symbol))\n    || ((b?.discount || 0) - (a?.discount || 0))\n    || a?.symbol.toUpperCase().localeCompare(b?.symbol.toUpperCase())\n  )\n  .find(token => isTokenEligible(token, feeSpeed, estimation, currentAccGasTankState, network))\n  || remainingFeeTokenBalances[0]\n}\n\nfunction makeBundle(account, networkId, requests) {\n  const bundle = new Bundle({\n    network: networkId,\n    identity: account.id,\n    // checking txn isArray because sometimes we receive txn in array from walletconnect. Also we use Array.isArray because txn object can have prop 0\n    txns: requests.map(({ txn }) => toBundleTxn(Array.isArray(txn) ? txn[0] : txn, account.id)),\n    signer: account.signer\n  })\n  bundle.extraGas = requests.map(x => x.extraGas || 0).reduce((a, b) => a + b, 0)\n  bundle.requestIds = requests.map(x => x.id)\n\n  // Attach bundle's meta\n  if (requests.some(item => item.meta)) {\n    bundle.meta = {}\n\n    if (requests.some(item => item.meta?.addressLabel)) {\n      bundle.meta.addressLabel = requests.map(x => !!x.meta?.addressLabel ? x.meta.addressLabel : { addressLabel: '', address: ''})\n    }\n\n    const xWalletReq = requests.find(x => x.meta?.xWallet)\n    if (xWalletReq) {\n      bundle.meta.xWallet = xWalletReq.meta.xWallet\n    }\n  }\n\n  return bundle\n}\n\nfunction getErrorMessage(e) {\n  if (e && e.message === 'NOT_TIME') {\n    return 'Your 72 hour recovery waiting period still hasn\\'t ended. You will be able to use your account after this lock period.'\n  } else if (e && e.message === 'WRONG_ACC_OR_NO_PRIV') {\n    return 'Unable to sign with this email/password account. Please contact support.'\n  // NOTE: is INVALID_SIGNATURE even a real error?\n  } else if (e && e.message === 'INVALID_SIGNATURE') {\n    return 'Invalid signature. This may happen if you used password/derivation path on your hardware wallet.'\n  } else if (e && e.message === 'INSUFFICIENT_PRIVILEGE') {\n    return 'Wrong signature. This may happen if you used password/derivation path on your hardware wallet.'\n  } else {\n    return e.message || e\n  }\n}\n\nexport default function SendTransaction({ relayerURL, accounts, network, selectedAcc, requests, resolveMany, replacementBundle, replaceByDefault, mustReplaceNonce, onBroadcastedTxn, onDismiss, gasTankState }) {\n  // NOTE: this can be refactored at a top level to only pass the selected account (full object)\n  // keeping it that way right now (selectedAcc, accounts) cause maybe we'll need the others at some point?\n  const account = accounts.find(x => x.id === selectedAcc)\n\n  // Also filtered in App.js, but better safe than sorry here\n  const eligibleRequests = useMemo(() => requests\n    .filter(({ type, chainId, account, txn }) =>\n      type === 'eth_sendTransaction'\n      && chainId === network.chainId\n      && account === selectedAcc\n      && txn && (!txn.from || txn.from.toLowerCase() === selectedAcc.toLowerCase())\n    // we only need to update on change of IDs\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    ), [requests.map(x => x.id).join(','), network.chainId, selectedAcc])\n  const bundle = useMemo(\n    () => replacementBundle || makeBundle(account, network.id, eligibleRequests),\n    [replacementBundle, network.id, account, eligibleRequests]\n  )\n\n  if (!account || !bundle.txns.length) return (<div id='sendTransaction'>\n    <h3 className='error'>SendTransactions: No account or no requests: should never happen.</h3>\n  </div>)\n  return (<SendTransactionWithBundle\n    relayerURL={relayerURL}\n    bundle={bundle}\n    replaceByDefault={replaceByDefault}\n    mustReplaceNonce={mustReplaceNonce}\n    network={network}\n    account={account}\n    resolveMany={resolveMany}\n    onBroadcastedTxn={onBroadcastedTxn}\n    onDismiss={onDismiss}\n    gasTankState={gasTankState}\n  />)\n}\n\nfunction SendTransactionWithBundle({ bundle, replaceByDefault, mustReplaceNonce, network, account, resolveMany, relayerURL, onBroadcastedTxn, onDismiss, gasTankState }) {\n  const currentAccGasTankState = network.isGasTankAvailable ? \n    gasTankState.find(i => i.account === account.id) : \n    { account: account.id, isEnabled: false }\n  const [estimation, setEstimation] = useState(null)\n  const [replaceTx, setReplaceTx] = useState(!!replaceByDefault)\n  const [signingStatus, setSigningStatus] = useState(false)\n  const [feeSpeed, setFeeSpeed] = useState(DEFAULT_SPEED)\n  const { addToast } = useToasts()\n\n  // Safety check: make sure our input parameters make sense\n  if (isInt(mustReplaceNonce) && !(replaceByDefault || isInt(bundle.nonce))) {\n    console.error('ERROR: SendTransactionWithBundle: mustReplaceNonce is set but we are not using replacementBundle or replaceByDefault')\n    console.error('ERROR: SendTransactionWithBundle: This is a huge logical error as mustReplaceNonce is intended to be used only when we want to replace a txn')\n  }\n\n  // Keep track of unmounted: we need this to not try to modify state after async actions if the component is unmounted\n  const isMounted = useRef(false)\n  useEffect(() => {\n    isMounted.current = true\n    return () => { isMounted.current = false }\n  })\n\n  // Reset the estimation when there are no txns in the bundle\n  useEffect(() => {\n    if (!bundle.txns.length) return\n    setEstimation(null)\n  }, [bundle, setEstimation])\n\n  // Estimate the bundle & reestimate periodically\n  const currentBundle = useRef(null)\n  currentBundle.current = bundle\n  useEffect(() => {    // eslint-disable-next-line react-hooks/exhaustive-deps\n    // We don't need to reestimate the fee when a signing process is in progress\n    if (signingStatus) return\n    // nor when there are no txns in the bundle, if this is even possible\n    if (!bundle.txns.length) return\n\n    // track whether the effect has been unmounted\n    let unmounted = false\n\n    // Note: currently, there's no point of getting the nonce if the bundle already has a nonce\n    // We may want to change this if we make a check if the currently replaced txn was already mined\n    const reestimate = () => (relayerURL\n        ? bundle.estimate({ relayerURL, fetch, replacing: !!bundle.minFeeInUSDPerGas, getNextNonce: true, gasTank: currentAccGasTankState.isEnabled })\n        : bundle.estimateNoRelayer({ provider: getProvider(network.id) })\n    )\n      .then((estimation) => {\n        if (unmounted || bundle !== currentBundle.current) return\n        estimation.relayerless = !relayerURL\n        const gasTankTokens = estimation.gasTank?.map(item => { \n          return { \n            ...item,\n            symbol: item.symbol.toUpperCase(), \n            balance: ethers.utils.parseUnits(item.balance.toFixed(item.decimals).toString(), item.decimals).toString(),\n            nativeRate: item.address === '0x0000000000000000000000000000000000000000' ? null : estimation.nativeAssetPriceInUSD / item.price\n          }\n        })\n        if (currentAccGasTankState.isEnabled) estimation.remainingFeeTokenBalances = gasTankTokens\n        estimation.selectedFeeToken = getDefaultFeeToken(estimation.remainingFeeTokenBalances, network, feeSpeed, estimation, currentAccGasTankState.isEnabled, network)\n        setEstimation(prevEstimation => {\n          if (prevEstimation && prevEstimation.customFee) return prevEstimation\n          if (estimation.remainingFeeTokenBalances) {\n            // If there's no eligible token, set it to the first one cause it looks more user friendly (it's the preferred one, usually a stablecoin)\n            estimation.selectedFeeToken = (\n                prevEstimation\n                && isTokenEligible(prevEstimation.selectedFeeToken, feeSpeed, estimation, currentAccGasTankState.isEnabled, network)\n                && prevEstimation.selectedFeeToken\n              )\n              || getDefaultFeeToken(estimation.remainingFeeTokenBalances, network, feeSpeed, estimation, currentAccGasTankState.isEnabled, network)\n          }\n          return estimation\n        })\n      })\n      .catch(e => {\n        if (unmounted) return\n        console.log('estimation error', e)\n        addToast(`Estimation error: ${e.message || e}`, { error: true })\n      })\n\n    reestimate()\n    const intvl = setInterval(reestimate, REESTIMATE_INTERVAL)\n\n    return () => {\n      unmounted = true\n      clearInterval(intvl)\n    }\n  }, [bundle, setEstimation, feeSpeed, addToast, network, relayerURL, signingStatus, currentAccGasTankState.isEnabled ])\n\n  // The final bundle is used when signing + sending it\n  // the bundle before that is used for estimating\n  const getFinalBundle = useCallback(() => {\n    if (!relayerURL) {\n      return new Bundle({\n        ...bundle,\n        gasLimit: estimation.gasLimit,\n      })\n    }\n\n    const feeToken = estimation.selectedFeeToken\n\n    const {\n      feeInNative,\n      // feeInUSD, // don't need fee in USD for stables as it will work with feeInFeeToken\n      // Also it can be stable but not in USD\n      feeInFeeToken,\n      addedGas\n    } = getFeesData(feeToken, estimation, feeSpeed, currentAccGasTankState.isEnabled, network)\n    const feeTxn = feeToken.symbol === network.nativeAssetSymbol\n      // TODO: check native decimals\n      ? [accountPresets.feeCollector, toHexAmount(feeInNative, 18), '0x']\n      : [feeToken.address, '0x0', ERC20.encodeFunctionData('transfer', [\n        accountPresets.feeCollector,\n        toHexAmount(feeInFeeToken, feeToken.decimals)\n    ])]\n\n    const nextFreeNonce = estimation.nextNonce?.nonce\n    const nextNonMinedNonce = estimation.nextNonce?.nextNonMinedNonce\n    // If we've passed in a bundle, use it's nonce (when using a replacementBundle); else, depending on whether we want to replace the current pending bundle,\n    // either use the next non-mined nonce or the next free nonce\n    const nonce = isInt(bundle.nonce) ? bundle.nonce : (replaceTx ? nextNonMinedNonce : nextFreeNonce)\n\n    if (!!currentAccGasTankState.isEnabled) {\n      let gasLimit\n      if (bundle.txns.length > 1) gasLimit = estimation.gasLimit + (bundle.extraGas || 0)\n      else gasLimit = estimation.gasLimit\n\n      let value\n      if (feeToken.address === \"0x0000000000000000000000000000000000000000\") value = feeInNative\n      else {\n        const fToken = estimation.remainingFeeTokenBalances.find(i => i.id === feeToken.id)\n        value = fToken && estimation.feeInNative[feeSpeed] * fToken.nativeRate\n      }\n      \n      return new Bundle({\n        ...bundle,\n        gasTankFee: {\n          assetId: feeToken.id,\n          value: ethers.utils.parseUnits(value.toFixed(feeToken.decimals), feeToken.decimals).toString()\n        },\n        txns: [...bundle.txns],\n        gasLimit,\n        nonce\n      })\n    }\n\n    return new Bundle({\n      ...bundle,\n      txns: [...bundle.txns, feeTxn],\n      gasTankFee: null,\n      gasLimit: estimation.gasLimit + addedGas + (bundle.extraGas || 0),\n      nonce\n    })\n  }, [relayerURL, estimation, feeSpeed, currentAccGasTankState.isEnabled, network, bundle, replaceTx])\n\n  const approveTxnImpl = async () => {\n    if (!estimation) throw new Error('no estimation: should never happen')\n\n    const finalBundle = getFinalBundle()\n    const provider = getProvider(network.id)\n    const signer = finalBundle.signer\n\n    // a bit redundant cause we already called it at the beginning of approveTxn, but\n    // we need to freeze finalBundle in the UI in case signing takes a long time (currently only to freeze the fee selector)\n    setSigningStatus({ inProgress: true, finalBundle })\n\n    const wallet = getWallet({\n      signer,\n      signerExtra: account.signerExtra,\n      chainId: network.chainId\n    })\n\n    if (relayerURL) {\n      // Temporary way of debugging the fee cost\n      // const initialLimit = finalBundle.gasLimit - getFeePaymentConsequences(estimation.selectedFeeToken, estimation).addedGas\n      // finalBundle.estimate({ relayerURL, fetch }).then(estimation => console.log('fee costs: ', estimation.gasLimit - initialLimit), estimation.selectedFeeToken).catch(console.error)\n      await finalBundle.sign(wallet)\n      return await finalBundle.submit({ relayerURL, fetch })\n    } else {\n      return await sendNoRelayer({\n        finalBundle, account, network, wallet, estimation, feeSpeed, provider\n      })\n    }\n  }\n\n  const approveTxnImplQuickAcc = async ({ quickAccCredentials }) => {\n    if (!estimation) throw new Error('no estimation: should never happen')\n    if (!relayerURL) throw new Error('Email/Password account signing without the relayer is not supported yet')\n\n    const finalBundle = (signingStatus && signingStatus.finalBundle) || getFinalBundle()\n    const signer = finalBundle.signer\n\n    const canSkip2FA = signingStatus && signingStatus.confCodeRequired === 'notRequired'\n    const { signature, success, message, confCodeRequired } = await fetchPost(\n      `${relayerURL}/second-key/${bundle.identity}/${network.id}/sign`, {\n        signer, txns: finalBundle.txns, nonce: finalBundle.nonce, gasLimit: finalBundle.gasLimit,\n        ...(!canSkip2FA) && {code: quickAccCredentials && quickAccCredentials.code},\n        // This can be a boolean but it can also contain the new signer/primaryKeyBackup, which instructs /second-key to update acc upon successful signature\n        recoveryMode: finalBundle.recoveryMode,\n        canSkip2FA: canSkip2FA\n      }\n    )\n    if (!success) {\n      if (!message) throw new Error(`Secondary key: no success but no error message`)\n      if (message.includes('invalid confirmation code')) {\n        addToast('Unable to sign: wrong confirmation code', { error: true })\n        return\n      }\n      throw new Error(`Secondary key error: ${message}`)\n    }\n    if (confCodeRequired) {\n      setSigningStatus({ quickAcc: true, finalBundle, confCodeRequired })\n    } else {\n      if (!signature) throw new Error(`QuickAcc internal error: there should be a signature`)\n      if (!account.primaryKeyBackup) throw new Error(`No key backup found: you need to import the account from JSON or login again.`)\n      setSigningStatus({ quickAcc: true, inProgress: true, confCodeRequired: canSkip2FA ? 'notRequired' : undefined })\n      if (!finalBundle.recoveryMode) {\n        // Make sure we let React re-render without blocking (decrypting and signing will block)\n        await new Promise(resolve => setTimeout(resolve, 0))\n        const pwd = quickAccCredentials.passphrase || alert('Enter password')\n        const wallet = await Wallet.fromEncryptedJson(JSON.parse(account.primaryKeyBackup), pwd)\n        await finalBundle.sign(wallet)\n      } else {\n        // set both .signature and .signatureTwo to the same value: the secondary signature\n        // this will trigger a timelocked txn\n        finalBundle.signature = signature\n      }\n      finalBundle.signatureTwo = signature\n      return await finalBundle.submit({ relayerURL, fetch })\n    }\n  }\n\n  const approveTxn = ({ quickAccCredentials }) => {\n    if (signingStatus && signingStatus.inProgress) return\n    setSigningStatus(signingStatus || { inProgress: true })\n\n    if (account.signerExtra && account.signerExtra.type === 'ledger') {\n      addToast('Please confirm this transaction on your Ledger device.', { timeout: 10000 })\n    }\n\n    if (account.signerExtra && account.signerExtra.type === 'Lattice') {\n      addToast('Please confirm this transaction on your Lattice device.', { timeout: 10000 })\n    }\n\n    const requestIds = bundle.requestIds\n    const approveTxnPromise = bundle.signer.quickAccManager ?\n      approveTxnImplQuickAcc({ quickAccCredentials })\n      : approveTxnImpl()\n    approveTxnPromise.then(bundleResult => {\n      // special case for approveTxnImplQuickAcc: when a user interaction prevents the operation from completing\n      if (!bundleResult) return\n\n      // do not to call this after onDimiss, cause it might cause state to be changed post-unmount\n      if (isMounted.current) setSigningStatus(null)\n\n      // Inform everything that's waiting for the results (eg WalletConnect)\n      const skipResolve = !bundleResult.success && bundleResult.message && bundleResult.message.match(/underpriced/i)\n      if (!skipResolve && requestIds) resolveMany(requestIds, { success: bundleResult.success, result: bundleResult.txId, message: bundleResult.message })\n\n      if (bundleResult.success) {\n        onBroadcastedTxn(bundleResult.txId)\n        onDismiss()\n      } else {\n        // to force replacementBundle to be null, so it's not filled from previous state change in App.js in useEffect\n        // basically close the modal if the txn was already mined\n        if (bundleResult.message.includes('was already mined')) {\n          onDismiss()\n        }\n        addToast(`Transaction error: ${getErrorMessage(bundleResult)}`, { error: true })  //'unspecified error'\n      }\n    })\n    .catch(e => {\n      if (isMounted.current) setSigningStatus(null)\n      console.error(e)\n      if (e && e.message.includes('must provide an Ethereum address')) {\n        addToast(`Signing error: not connected with the correct address. Make sure you're connected with ${bundle.signer.address}.`, { error: true })\n      } else if (e && e.message.includes('0x6b0c')) {\n        // not sure if that's actually the case with this hellish error, but after unlocking the device it no longer appeared\n        // however, it stopped appearing after that even if the device is locked, so I'm not sure it's related...\n        addToast(`Ledger: unknown error (0x6b0c): is your Ledger unlocked and in the Ethereum application?`, { error: true })\n      } else {\n        addToast(`Signing error: ${getErrorMessage(e)}`, { error: true })\n      }\n    })\n  }\n\n  const rejectTxn = () => {\n    onDismiss()\n    bundle.requestIds && resolveMany(bundle.requestIds, { message: REJECT_MSG })\n  }\n\n  const accountAvatar = blockies.create({ seed: account.id }).toDataURL()\n\n  // `mustReplaceNonce` is set on speedup/cancel, to prevent the user from broadcasting the txn if the same nonce has been mined\n  const canProceed = isInt(mustReplaceNonce)\n    ? (\n      isInt(estimation?.nextNonce?.nextNonMinedNonce)\n        ? mustReplaceNonce >= estimation?.nextNonce?.nextNonMinedNonce\n        : null // null = waiting to get nonce data from relayer\n    )\n    : true\n\n  return (\n    <div id='sendTransaction'>\n      <div id=\"titleBar\">\n        <div className='dismiss' onClick={onDismiss}>\n          <FaChevronLeft size={35}/>\n          back\n          <ToolTip label=\"You can go back to the main dashboard and add more transactions to this bundle in order to sign & send them all at once.\">\n            <MdOutlineInfo size={25}/>\n          </ToolTip>\n        </div>\n      </div>\n\n      <div className='container'>\n        <div id='transactionPanel' className='panel'>\n          <div className='heading'>\n            <div className='title'>{ bundle.txns.length } Transaction{ bundle.txns.length > 1 ? 's' : '' } Waiting</div>\n          </div>\n          <div className='content'>\n            <div className={`listOfTransactions${bundle.requestIds ? '' : ' frozen'}`}>\n              {bundle.txns.map((txn, i) => {\n                const isFirstFailing = estimation && !estimation.success && estimation.firstFailing === i\n                // we need to re-render twice per minute cause of DEX deadlines\n                const min = Math.floor(Date.now() / 30000)\n                return (<TxnPreview\n                  key={[...txn, i].join(':')}\n                  // pasing an unused property to make it update\n                  minute={min}\n                  onDismiss={bundle.requestIds && (() => resolveMany([bundle.requestIds[i]], { message: REJECT_MSG }))}\n                  txn={txn} network={bundle.network} account={bundle.identity}\n                  isFirstFailing={isFirstFailing}\n                  disableDismiss={!!signingStatus}\n                  disableDismissLabel={\"Cannot modify transaction bundle while a signing procedure is pending\"}\n                  addressLabel={!!bundle.meta && bundle.meta.addressLabel}\n                  />\n                )\n              })}\n            </div>\n\n            <div className='separator'></div>\n\n            <div className='transactionsNote'>\n              {\n                // only render this if we're using the queue\n                bundle.requestIds &&\n                  <>\n                    <b><GiGorilla size={16}/> DEGEN TIP</b>\n                    <span>You can sign multiple transactions at once. Add more transactions to this batch by interacting with a connected dApp right now. Alternatively, you may click \"Back\" to add more transactions.</span>\n                  </>\n              }\n            </div>\n          </div>\n        </div>\n\n        <div id='detailsPanel' className='panel'>\n          <div id=\"options-container\">\n            <div className='section' id=\"signing-details\">\n              <div className='section-title'>Signing With</div>\n              <div className='section-content'>\n                <div className='account'>\n                  <div className='icon' style={{ backgroundImage: `url(${accountAvatar})` }}/>\n                  <div className='address'>{ account.id }</div>\n                </div>\n                <div className='network'>\n                  on\n                  <div className='icon' style={{ backgroundImage: `url(${networkIconsById[network.id]})` }}/>\n                  <div className='address'>{ network.name }</div>\n                </div>\n              </div>\n            </div>\n\n            { /* Only lock the fee selector when the bundle is locked too - to make sure that the fee really is set in stone (won't change on the next getFinalBundle()) */ }\n            {\n              canProceed &&\n              <FeeSelector\n                disabled={signingStatus && signingStatus.finalBundle && !(estimation && !estimation.success)}\n                signer={bundle.signer}\n                estimation={estimation}\n                setEstimation={setEstimation}\n                network={network}\n                feeSpeed={feeSpeed}\n                setFeeSpeed={setFeeSpeed}\n                onDismiss={onDismiss}\n                isGasTankEnabled={currentAccGasTankState.isEnabled && !!relayerURL}\n              ></FeeSelector>\n            }\n\n          </div>\n\n         {\n            // If there's `bundle.nonce` set, it means we're cancelling or speeding up, so this shouldn't even be visible\n            // We also don't show this in any case in which we're forced to replace a particular transaction (mustReplaceNonce)\n            !isInt(bundle.nonce) && !isInt(mustReplaceNonce) && !!estimation?.nextNonce?.pendingBundle &&\n            (\n              <div>\n               <Checkbox\n                    label='Replace currently pending transaction'\n                    checked={replaceTx}\n                    onChange={({ target }) => setReplaceTx(target.checked)}\n                />\n              </div>\n            )\n          }\n\n          {\n            // NOTE there's a case in which both \"This transaction will replace the current pending transaction\" and the checkbox will render - when we're doing a modify\n            // If we are replacing a txn, look at whether canProceed is true\n            isInt(mustReplaceNonce) &&\n            <>\n              {\n                // We always warn the user if they're trying to replace a particular transaction\n                // This doesn't need to show when replacing is optional\n                (canProceed || canProceed === null) && <div className='replaceInfo warning' ><MdWarning /><span>This transaction bundle will replace the one that's currently pending.</span></div>\n              }\n\n              {\n                // canProceed equals null means we don't have data yet\n                canProceed === null &&\n                <div>\n                  <Loading />\n                </div>\n              }\n\n              {\n                canProceed === false &&\n                <div id='actions-container-replace'>\n                  <div className='replaceInfo info' ><MdInfo /><span>The transaction you're trying to replace has already been confirmed</span></div>\n                  <div className='buttons'>\n                    <Button clear icon={<MdOutlineClose/>} type='button' className='rejectTxn' onClick={rejectTxn}>Close</Button>\n                  </div>\n                </div>\n              }\n            </>\n          }\n\n          {\n            canProceed &&\n            <>\n              {\n                estimation && estimation.success && estimation.isDeployed === false && bundle.gasLimit ?\n                  <div className='first-tx-note'>\n                    <div className='first-tx-note-title'><MdInfo/>Note</div>\n                    <div className='first-tx-note-message'>\n                      Because this is your first Ambire transaction, this fee is {(60000 / bundle.gasLimit * 100).toFixed()}% higher than usual because we have to deploy your smart wallet.\n                      Subsequent transactions will be cheaper\n                    </div>\n                  </div>\n                  :\n                  null\n              }\n\n              <div id=\"actions-container\">\n                {\n                  bundle.signer.quickAccManager && !relayerURL ?\n                    <FailingTxn message='Signing transactions with an email/password account without being connected to the relayer is unsupported.'></FailingTxn>\n                    :\n                    <div className='section' id=\"actions\">\n                      <Actions\n                        estimation={estimation}\n                        approveTxn={approveTxn}\n                        rejectTxn={rejectTxn}\n                        cancelSigning={() => setSigningStatus(null)}\n                        signingStatus={signingStatus}\n                        feeSpeed={feeSpeed}\n                        isGasTankEnabled={currentAccGasTankState.isEnabled && !!relayerURL}\n                        network={network}\n                      />\n                    </div>\n                }\n              </div>\n            </>\n          }\n\n        </div>\n      </div>\n    </div>\n  )\n}\n","const { BN } = require('bn.js')\n\nfunction Uint256(x) {\n\tconst bn = new BN(x, 10)\n\tif (bn.isNeg()) throw new Error('uint256 expected, negative number given')\n\treturn bn\n}\n\nfunction Address(x) {\n\tif (!(typeof x === 'string' && x.length === 42 && x.startsWith('0x')))\n\t\tthrow new Error('invalid address: must start with a 0x and be 42 characters long')\n\treturn x\n}\n\nfunction Bytes32(b) {\n\tif (typeof b === 'string' && b.startsWith('0x') && b.length === 66) {\n\t\treturn Buffer.from(b.slice(2), 'hex')\n\t}\n\tif (!(b.length === 32 && Buffer.isBuffer(b))) throw new Error('32 byte Buffer expected')\n\treturn b\n}\n\nfunction Bytes(b) {\n\tif (typeof b === 'string' && b.startsWith('0x')) {\n\t\treturn Buffer.from(b.slice(2), 'hex')\n\t}\n\tif (!Buffer.isBuffer(b)) throw new Error('Buffer expected')\n\treturn b\n}\n\nfunction Bytes32Array(bytes32Array, size) {\n\t// no size specified\n\tif (size === -1 || size === undefined) {\n\t\treturn bytes32Array.map(x => Bytes32(x))\n\t}\n\treturn bytes32Array.length === size && bytes32Array.map(x => Bytes32(x))\n}\n\nfunction Channel(channel) {\n\tAddress(channel.leader)\n\tAddress(channel.follower)\n\tAddress(channel.guardian)\n\tAddress(channel.tokenAddr)\n\tBytes32(channel.nonce)\n\treturn channel\n}\n\nmodule.exports = { Uint256, Bytes32, Address, Bytes, Bytes32Array, Channel }\n","const customIcons = {\n    '0xb468a1e5596cfbcdf561f21a10490d99b4bb7b68': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/Jeff_Sessions_with_Elmo_and_Rosita_%28cropped%29.jpg/220px-Jeff_Sessions_with_Elmo_and_Rosita_%28cropped%29.jpg', // TEST Polygon ELMO token,\n    '0x88800092ff476844f74dc2fc427974bbee2794ae': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/ambire_logo_white_bg_250x250.png', // Ambire Wallet Token\n    '0x47cd7e91c3cbaaf266369fe8518345fc4fc12935': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/xwallet_250x250.png', //xWallet\n    '0xb6456b57f03352be48bf101b46c1752a0813491a': 'https://raw.githubusercontent.com/AmbireTech/adex-brand/master/logos/vaporwave-adex-2.png', // ADX-STAKING\n    '0xd9a4cb9dc9296e111c66dfacab8be034ee2e1c2c': 'https://raw.githubusercontent.com/AmbireTech/adex-brand/master/logos/ADX-loyalty%40256x256.png', // ADX-LOYALTY\n    '0xec3b10ce9cabab5dbf49f946a623e294963fbb4e': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/xwallet_250x250.png', // Polygons test xWallet\n    '0xe9415e904143e42007865e6864f7f632bd054a08': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/Ambire_logo_250x250.png', // Polygons test Wallet\n    '0xade00c28244d5ce17d72e40330b1c318cd12b7c3': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/official-logos/Ambire-AdEx/Ambire_AdEx_Symbol_color_white_bg.png' //ADX-TOKEN\n}\n\nconst zapperStorageTokenIcons = 'https://storage.googleapis.com/zapper-fi-assets/tokens'\n\nexport function getTokenIcon(networkId = '', address = '') {\n    const addr = address.toLowerCase()\n    const net = networkId.toLowerCase()\n    return customIcons[addr] || `${zapperStorageTokenIcons}/${net}/${addr}.png`\n}\n","export function formatFloatTokenAmount(amount, useGrouping = true, maximumFractionDigits = 18) {\n    if (isNaN(amount) || isNaN(parseFloat(amount)) || !(typeof amount === 'number' || typeof amount === 'string')) return amount\n\n    try {\n        const minimumFractionDigits = Math.min(2, maximumFractionDigits || 0)\n        return ((typeof amount === 'number') ? amount : parseFloat(amount))\n            .toLocaleString(undefined,\n                {\n                    useGrouping,\n                    maximumFractionDigits: Math.max(minimumFractionDigits, maximumFractionDigits),\n                    minimumFractionDigits\n                })\n    } catch (err) {\n        console.error(err)\n        return amount\n    }\n}\n\n// Round a floating point number to a specific decimal places, i.e. 1.156 => 1.16\nexport function roundFloatingNumber(number, places = 2) {\n  const decimals = Math.pow(10, places)\n\n  return Math.round((number + Number.EPSILON) * decimals) / decimals\n}\n","import { Client } from 'gridplus-sdk'\nimport { ethers } from 'ethers'\nimport { serialize } from '@ethersproject/transactions'\n\nconst crypto = require('crypto')\nconst HARDENED_OFFSET = 0x80000000\n\nconst getAddressesReqOpts = {\n    startPath: [\n        HARDENED_OFFSET + 44,\n        HARDENED_OFFSET + 60,\n        HARDENED_OFFSET,\n        0,\n        0,\n    ],\n    n: 10,\n}\n\nconst latticeInit = commKey => {\n    const clientConfig = {\n        name: 'Ambire Wallet',\n        crypto: crypto,\n        privKey: commKey,\n    }\n\n    return new Client(clientConfig)\n}\n\nconst latticeConnect = async(client, deviceId) => {\n    return await new Promise((resolve, reject) => {\n        client.connect(deviceId, (err, isPaired) => {\n            if (err) {\n                reject(`Lattice connect: ${err} Or check if the DeviceID is correct.`)\n                return\n            }\n            \n            resolve({ isPaired: !!isPaired, errConnect: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { isPaired: false, errConnect: err }\n    })\n}\n\nconst latticePair = async(client, secret) => {\n    return await new Promise((resolve, reject) => {\n        client.pair(secret, (err, hasActiveWallet) => {\n            if (err) {\n                reject(`Lattice connect: ${err}`)\n                return\n            }\n            \n            resolve({ hasActiveWallet, errPair: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { hasActiveWallet: false, errPair: err }\n    })\n}\n\nconst latticeGetAddresses = async client => {\n    return await new Promise((resolve, reject) => {\n        client.getAddresses(getAddressesReqOpts, (err, res) => {\n            if (err) {\n                reject(`Lattice get addresses: ${err}`)\n                return\n            }\n\n            if (!res) throw new Error('Lattice could not get the addresses.')\n\n            resolve({res, errGetAddresses: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { res: null, errGetAddresses: err }\n    })\n}\n\nconst latticeSignMessage = async(client, hash) => {\n    const dataMsg = {\n        protocol: 'signPersonal',\n        payload: ethers.utils.hexlify(hash),\n        signerPath: [HARDENED_OFFSET+44, HARDENED_OFFSET+60, HARDENED_OFFSET, 0, 0],\n    }\n\n    const signOptsMsg = {\n        currency: 'ETH_MSG',\n        data: dataMsg,\n    }\n\n    \n    return await new Promise((resolve, reject) => {\n        client.sign(signOptsMsg, (err, signedTx) => {\n            if (err) {\n                reject(err)\n                return\n            }\n\n            if (!signedTx) throw new Error('Lattice could not sign the message.')\n            \n            resolve({ signedMsg: '0x' + signedTx.sig.r + signedTx.sig.s + signedTx.sig.v[0].toString(16), errSignMessage: false })  \n        })\n    }).catch(err => {\n        console.error(err)\n        return { signedMsg: null, errSignMessage: err }\n    })\n}\n\nconst latticeSignMessage712 = async(client, message) => {\n    const reqData = {\n        currency: 'ETH_MSG',\n        data: {\n          signerPath: [HARDENED_OFFSET+44, HARDENED_OFFSET+60, HARDENED_OFFSET, 0, 0],\n          protocol: 'eip712', // You must use this string to specify this protocol\n          payload: message\n        }\n      }\n\n    return await new Promise((resolve, reject) => {\n        client.sign(reqData, (err, signedTx) => {\n            if (err) {\n                reject(err)\n                return\n            }\n\n            if (!signedTx) throw new Error('Lattice could not sign the message.')\n            \n            resolve({ signedMsg: '0x' + signedTx.sig.r + signedTx.sig.s + signedTx.sig.v[0].toString(16), errSignMessage: false })  \n        })\n    }).catch(err => {\n        console.error(err)\n        return { signedMsg: null, errSignMessage: err }\n    })\n}\n\nconst latticeSignTransaction = async(client, txn, chainId) => {\n    const { to, data, gas, gasPrice, nonce, value = 0 } = txn\n    const unsignedTxObj = {\n        ...txn,\n        gasLimit: txn.gasLimit || txn.gas,\n        chainId\n    }\n    delete unsignedTxObj.from\n    delete unsignedTxObj.gas\n\n    const txData = {\n        nonce,\n        gasLimit: gas || txn.gasLimit,\n        gasPrice,\n        to,\n        value,\n        data: data || '',\n        // -- m/44'/60'/0'/0/0\n        signerPath: [HARDENED_OFFSET+44, HARDENED_OFFSET+60, HARDENED_OFFSET, 0, 0],\n        chainId,\n        useEIP155: true,\n    }\n\n    const signOpts = {\n        currency: 'ETH',\n        data: txData,\n    }\n\n    \n    return await new Promise((resolve, reject) => {\n        client.sign(signOpts, (err, signedTx) => {\n            if (err) {\n                reject(err)\n                return\n            }\n\n            if (!signedTx) throw new Error('Lattice could not sign the message.')\n            \n            delete unsignedTxObj.v\n            const serializedSigned = serialize(unsignedTxObj, {\n                r: '0x' + signedTx.sig.r,\n                s: '0x' + signedTx.sig.s,\n                v: signedTx.sig.v[0].toString(16)\n            })\n            \n            resolve({ serializedSigned, errSignTxn: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { serializedSigned: null, errSignTxn: err }\n    })\n}\n\nexport { \n    latticeInit,\n    latticeConnect,\n    latticePair,\n    latticeGetAddresses,\n    latticeSignMessage,\n    latticeSignMessage712,\n    latticeSignTransaction\n }\n","import { TrezorSubprovider } from '@0x/subproviders/lib/src/subproviders/trezor' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport TrezorConnect from '@trezor/connect-web'\nimport { ethers } from 'ethers'\nimport HDNode from 'hdkey'\nimport { LedgerSubprovider } from '@0x/subproviders/lib/src/subproviders/ledger' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { ledgerEthereumBrowserClientFactoryAsync } from '@0x/subproviders/lib/src' // https://github.com/0xProject/0x-monorepo/issues/1400\nimport { ledgerSignMessage, ledgerSignTransaction, ledgerSignMessage712, ledgerGetAddresses } from './ledgerWebHID'\nimport { \n  latticeInit, \n  latticeConnect, \n  latticeSignMessage, \n  latticeSignTransaction, \n  latticeGetAddresses, \n  latticeSignMessage712\n } from 'lib/lattice'\nimport { _TypedDataEncoder } from 'ethers/lib/utils'\nimport { getProvider } from 'lib/provider'\nimport networks from 'consts/networks'\n\nlet wallets = {}\n\n// opts\n// passphrase: string\n// noCache: boolean\nexport function getWallet({ signer, signerExtra, chainId }, opts = {}) {\n  const id = `${signer.address || signer.one}${chainId}`\n  if (wallets[id]) return wallets[id]\n  return wallets[id] = getWalletNew({ signer, signerExtra, chainId }, opts)\n}\n\nfunction getWalletNew({ chainId, signer, signerExtra }, opts) {\n  if (signerExtra && signerExtra.type === 'trezor') {\n    TrezorConnect.manifest({\n      email: 'contactus@ambire.com',\n      appUrl: 'https://wallet.ambire.com'\n    })\n    const providerTrezor = new TrezorSubprovider({\n      trezorConnectClientApi: TrezorConnect,\n      networkId: chainId\n    })\n    providerTrezor._initialDerivedKeyInfo = getInitialDerivedKeyInfo(signerExtra)\n    // for Trezor/ledger, alternatively we can shim using https://www.npmjs.com/package/web3-provider-engine and then wrap in Web3Provider\n    return {\n      signMessage: hash => providerTrezor.signPersonalMessageAsync(ethers.utils.hexlify(hash), signer.address),\n      signTransaction: params => providerTrezor.signTransactionAsync({ ...params, from: signer.address }),\n      sendTransaction: async (transaction) => {\n        const network = networks.find(n => n.chainId === transaction.chainId)\n        if (!network) throw Error('no network found for chainId : ' + transaction.chainId)\n        const broadcastProvider = await getProvider(network.id)\n        if (!broadcastProvider) throw Error('no provider found for network : ' + network.id)\n\n        transaction.nonce = ethers.utils.hexlify(await broadcastProvider.getTransactionCount(transaction.from))\n        const gas = ethers.utils.hexlify(transaction.gas || transaction.gasLimit)\n        transaction.gasPrice = ethers.utils.hexlify(transaction.gasPrice)\n        \n        transaction = {\n          ...transaction,\n          gas // trezor params requires gas prop\n          // no chainId prop but chainId already known by providerTrezor\n        }\n        \n        const signedTx = await providerTrezor.signTransactionAsync(transaction)\n        \n        return broadcastProvider.sendTransaction(signedTx)\n      },\n      isConnected: async (matchAddress) => { // chain is provided to trezor. Not necessary to check network\n        const addresses = await providerTrezor.getAccountsAsync(100)\n        return addresses.map(i => i.toLowerCase()).includes(matchAddress.toLowerCase())\n      },\n      _signTypedData: async (domain, types, value) => {\n        \n        const domainSeparator = _TypedDataEncoder.hashDomain(domain)\n        const hashStructMessage = _TypedDataEncoder.hashStruct(_TypedDataEncoder.getPrimaryType(types), types, value)\n        const data = _TypedDataEncoder.getPayload(domain, types, value)\n        const initialDerivedKeyInfo = await providerTrezor._initialDerivedKeyInfoAsync()\n        const derivedKeyInfo = providerTrezor._findDerivedKeyInfoForAddress(initialDerivedKeyInfo, signer.address)\n        const path = derivedKeyInfo.derivationPath\n\n        const response = await providerTrezor._trezorConnectClientApi.ethereumSignTypedData({\n          path,\n          data,\n          metamask_v4_compat: true,\n          domain_separator_hash: domainSeparator,\n          message_hash: hashStructMessage\n        })\n\n        if (response.success) {\n          return `${response.payload.signature}`;\n        } else {\n            throw new Error(response.payload.error);\n        }\n      }\n    }\n  } else if (signerExtra && signerExtra.type === 'ledger') {\n    if (signerExtra.transportProtocol === 'webHID') {\n      return {\n        signMessage: hash => ledgerSignMessage(ethers.utils.hexlify(hash), signer.address),\n        signTransaction: params => ledgerSignTransaction(params, chainId),\n        sendTransaction: async (transaction) => {\n          const network = networks.find(n => n.chainId === transaction.chainId)\n          if (!network) throw Error('no network found for chainId : ' + transaction.chainId)\n          const provider = await getProvider(network.id)\n          if (!provider) throw Error('no provider found for network : ' + network.id)\n\n          transaction.nonce = ethers.utils.hexlify(await provider.getTransactionCount(transaction.from))\n\n          const signedTx = await ledgerSignTransaction(transaction, transaction.chainId)\n\n          return provider.sendTransaction(signedTx)\n        },\n        isConnected: async (matchAddress) => { // chain is provided to ledger. Not necessary to check network\n          const addresses = await ledgerGetAddresses()\n          if (addresses && addresses[0]) {\n            if (matchAddress) {\n              return !!addresses.find(a => a.toLowerCase() === matchAddress.toLowerCase())\n            }\n            return true\n          }\n          return false\n        },\n        _signTypedData: (domain, types, value) => {\n          const domainSeparator = _TypedDataEncoder.hashDomain(domain)\n          const hashStructMessage = _TypedDataEncoder.hashStruct(_TypedDataEncoder.getPrimaryType(types), types, value)\n          return ledgerSignMessage712(domainSeparator, hashStructMessage, signer.address)\n        }\n      }\n    } else {\n      const provider = new LedgerSubprovider({\n        networkId: chainId,\n        ledgerEthereumClientFactoryAsync: ledgerEthereumBrowserClientFactoryAsync,\n        baseDerivationPath: signerExtra.info.baseDerivationPath\n      })\n      return {\n        signMessage: hash => provider.signPersonalMessageAsync(ethers.utils.hexlify(hash), signer.address),\n        signTransaction: params => provider.signTransactionAsync({ ...params, from: signer.address }),\n        sendTransaction: async () => {\n          throw Error('Please use a chrome based browser to use Ledger')\n        },\n        isConnected: async (matchAddress) => { // chain is provided to ledger. Not necessary to check network\n          const addresses = await provider.getAccountsAsync(1)\n          return addresses.map(i => i.toLowerCase()).includes(matchAddress.toLowerCase())\n        },\n        _signTypedData: (domain, types, value) => {\n          throw Error('Please, use a chrome based browser to use 721 Typed signatures')\n        }\n      }\n    }\n  } else if (signerExtra && signerExtra.type === 'Lattice') {\n    return {\n      signMessage: async hash => {\n        return await wrapLatticeError(async hash => {\n          const { commKey, deviceId } = signerExtra\n          const client = latticeInit(commKey)\n          const {isPaired, errConnect } = await latticeConnect(client, deviceId)\n\n          if (errConnect) throw new Error(errConnect.message || errConnect)\n\n          if (!isPaired) {\n            // Canceling the visualization of the secret code on the device's screen.\n            client.pair('')\n            throw new Error('The Lattice device is not paired! Please re-add your account!')\n          }\n\n          const { signedMsg, errSignMessage } = await latticeSignMessage(client, hash)\n          if (errSignMessage) throw new Error(errSignMessage)\n\n          return signedMsg\n        }, [hash])\n      },\n      signTransaction: async params => {\n        return await wrapLatticeError( async params => {\n          const { commKey, deviceId } = signerExtra\n          const client = latticeInit(commKey)\n          const {isPaired, errConnect } = await latticeConnect(client, deviceId)\n\n          if (errConnect) throw new Error(errConnect.message || errConnect)\n\n          if (!isPaired) {\n            // Canceling the visualization of the secret code on the device's screen.\n            client.pair('')\n            throw new Error('The Lattice device is not paired! Please re-add your account!')\n          }\n\n          const { serializedSigned, errSignTxn } = await latticeSignTransaction(client, params, chainId)\n          if (errSignTxn) throw new Error(errSignTxn)\n\n          return serializedSigned\n        }, [params])\n      },\n      sendTransaction: async transaction => { \n        return await wrapLatticeError(async (transaction) => {\n          const network = networks.find(n => n.chainId === transaction.chainId)\n          if (!network) throw Error('no network found for chainId : ' + transaction.chainId)\n          const broadcastProvider = await getProvider(network.id)\n          if (!broadcastProvider) throw Error('no provider found for network : ' + network.id)\n          transaction.nonce = ethers.utils.hexlify(await broadcastProvider.getTransactionCount(transaction.from))\n          const { commKey, deviceId } = signerExtra\n          const client = latticeInit(commKey)\n          const { isPaired, errConnect } = await latticeConnect(client, deviceId)\n\n          if (errConnect) throw new Error(errConnect.message || errConnect)\n\n          if (!isPaired) {\n            // Canceling the visualization of the secret code on the device's screen.\n            client.pair('')\n            throw new Error('The Lattice device is not paired! Please re-add your account!')\n          }\n\n          const { serializedSigned, errSignTxn } = await latticeSignTransaction(client, transaction, chainId)\n          if (errSignTxn) throw new Error(errSignTxn)\n\n          return broadcastProvider.sendTransaction(serializedSigned)\n        }, [transaction])\n      },\n      isConnected: async matchAddress => { \n        return await wrapLatticeError(async (matchAddress) => {\n          let addresses = null\n\n          const { commKey, deviceId } = signerExtra\n          const client = latticeInit(commKey)\n          const { isPaired, errConnect } = await latticeConnect(client, deviceId)\n\n          if (errConnect) throw new Error(errConnect.message || errConnect)\n\n          if (!isPaired) {\n            // Canceling the visualization of the secret code on the device's screen.\n            client.pair('')\n            throw new Error('The Lattice device is not paired! Please re-add your account!')\n          }\n\n          const { res, errGetAddresses } = await latticeGetAddresses(client)\n          if (errGetAddresses) { \n            throw new Error(`Lattice: ${errGetAddresses}`, { error: true })\n          }\n\n          addresses = res\n          return addresses.map(i => i.toLowerCase()).includes(matchAddress.toLowerCase())\n        }, [matchAddress])\n    },\n    _signTypedData: async (domain, types, value) => {\n      return await wrapLatticeError(async (domain, types, value) => {\n        const payload = _TypedDataEncoder.getPayload(domain, types, value)\n        const { commKey, deviceId } = signerExtra\n        const client = latticeInit(commKey)\n        const {isPaired, errConnect } = await latticeConnect(client, deviceId)\n\n        if (errConnect) throw new Error(errConnect.message || errConnect)\n\n        if (!isPaired) {\n          // Canceling the visualization of the secret code on the device's screen.\n          client.pair('')\n          throw new Error('The Lattice device is not paired! Please re-add your account!')\n        }\n\n        const { signedMsg, errSignMessage } = await latticeSignMessage712(client, payload)\n        if (errSignMessage) throw new Error(errSignMessage)\n\n        return signedMsg\n      }, [domain, types, value])\n    }\n  }\n  } else if (signer.address) {\n    if (!window.ethereum) throw new Error('No web3 support detected in your browser: if you created this account through MetaMask, please install it.')\n    // NOTE: for metamask, use `const provider = new ethers.providers.Web3Provider(window.ethereum)`\n    // 'any' is explained here: https://github.com/ethers-io/ethers.js/issues/1107\n    const provider = new ethers.providers.Web3Provider(window.ethereum, 'any')\n\n    const signerObject = provider.getSigner(signer.address)\n\n    signerObject.isConnected = async (matchAddress, matchChain) => {\n      const accounts = await provider.listAccounts()\n\n      let match = true\n      if (!!(accounts.length)) {\n        if (matchAddress) {\n          match = !!accounts.find(a => a.toLowerCase() === matchAddress.toLowerCase())\n        }\n        if (matchChain) {\n          const { chainId } = await provider.getNetwork()\n          match = match && chainId === matchChain\n        }\n      } else {\n        match = false\n      }\n      return match\n    }\n\n    return signerObject\n  } else if (signer.one) {\n    throw new Error('getWallet not applicable for QuickAccounts: use primaryKeyBackup with the passphrase and /second-sig')\n  } else {\n    throw new Error('unknown signer type')\n  }\n}\n\nfunction getInitialDerivedKeyInfo(signerExtra) {\n  return {\n    hdKey: HDNode.fromExtendedKey(signerExtra.info.hdKey.xpub),\n    derivationPath: signerExtra.info.derivationPath,\n    baseDerivationPath: signerExtra.info.baseDerivationPath\n  }\n}\n\nasync function wrapLatticeError(fn, arg) {\n  return await fn.apply(this, arg)\n   .catch(e => {\n     throw new Error(`Lattice: ${e.message}`)\n    })\n}\n","import TransportWebHID from '@ledgerhq/hw-transport-webhid'\nimport AppEth from '@ledgerhq/hw-app-eth'\nimport { serialize } from '@ethersproject/transactions'\n\nconst EIP_155_CONSTANT = 35\n\nconst ethUtil = require('ethereumjs-util')\nconst HDNode = require('hdkey')\n\nlet connectedDevices = null\n\nexport const PARENT_HD_PATH = \"44'/60'/0'/0\"\n\nasync function getTransport() {\n  connectedDevices = await TransportWebHID.list()\n  if (connectedDevices.length) {\n    if (connectedDevices[0].opened) {\n      return new TransportWebHID(connectedDevices[0])\n    } else { // when transport is still not closed and time between 2 requests is short\n      return TransportWebHID.open(connectedDevices[0])\n    }\n  } else {\n    try {\n      return await TransportWebHID.request()\n    } catch (e) {\n      if (e.message.includes('reading \\'open\\'')) {\n        throw new Error('ledger WebHID request denied')\n      }\n      throw new Error('Could not request WebHID ledger: ' + e.message)\n    }\n  }\n}\n\nexport async function ledgerGetAddresses() {\n  const transport = await getTransport()\n  const accounts = await getAccounts(transport)\n  transport.close()\n\n  return accounts.map(a => a.address)\n}\n\nasync function getAccounts(transport) {\n  const parentKeyDerivationPath = `m/${PARENT_HD_PATH}`\n  let ledgerResponse\n  ledgerResponse = await getAddressInternal(transport, parentKeyDerivationPath).then(o => o).catch(err => {\n    if (err.statusCode === 25871 || err.statusCode === 27404) {\n      throw Error('Please make sure your ledger is unlocked and running the Ethereum app. ' + err.message)\n    } else {\n      throw Error('Could not get address from ledger : ' + err)\n    }\n  })\n\n  const hdKey = new HDNode()\n  hdKey.publicKey = Buffer.from(ledgerResponse.publicKey, 'hex')\n  hdKey.chainCode = Buffer.from(ledgerResponse.chainCode, 'hex')\n  const mainAddress = addressOfHDKey(hdKey)\n\n  const initialDerivedKeyInfo = {\n    hdKey,\n    address: mainAddress,\n    derivationPath: parentKeyDerivationPath,\n    baseDerivationPath: PARENT_HD_PATH,\n  }\n\n  // currently we can't get addrs to match with what appears in MM/Ledger live so only one is derived\n  return calculateDerivedHDKeyInfos(initialDerivedKeyInfo, 1)\n}\n\n\nasync function getAddressInternal(transport, parentKeyDerivationPath) {\n  let timeoutHandle\n  const appEth = new AppEth(transport)\n\n  const ledgerTimeout = new Promise((resolve, reject) => {\n    timeoutHandle = setTimeout(() => {\n      return reject(new Error('Device took too long to respond...'))\n    }, 10000)\n  })\n\n  return Promise.race([\n    appEth.getAddress(parentKeyDerivationPath, false, true),\n    ledgerTimeout\n  ]).then((res) => {\n    clearTimeout(timeoutHandle)\n    return res\n  })\n}\n\nexport async function ledgerSignTransaction(txn, chainId) {\n  const transport = await getTransport()\n\n  const fromAddr = txn.from\n\n  const unsignedTxObj = {\n    ...txn,\n    gasLimit: txn.gasLimit || txn.gas,\n    chainId: chainId\n  }\n  delete unsignedTxObj.from\n  delete unsignedTxObj.gas\n\n  let serializedUnsigned = serialize(unsignedTxObj)\n  const accountsData = await getAccounts(transport)\n\n  //Managing only 1 addr for now\n  const address = accountsData[0].address\n\n  let serializedSigned\n  if (address.toLowerCase() === fromAddr.toLowerCase()) {\n    let rsvResponse\n    try {\n      rsvResponse = await new AppEth(transport).signTransaction(accountsData[0].derivationPath, serializedUnsigned.substr(2))\n    } catch (e) {\n      throw new Error('Could not sign transaction ' + e)\n    }\n\n    const intV = parseInt(rsvResponse.v, 16)\n    const signedChainId = Math.floor((intV - EIP_155_CONSTANT) / 2)\n\n    if (signedChainId !== chainId) {\n      throw new Error('Invalid returned V 0x' + rsvResponse.v)\n    }\n\n    delete unsignedTxObj.v\n    serializedSigned = serialize(unsignedTxObj, {\n      r: '0x' + rsvResponse.r,\n      s: '0x' + rsvResponse.s,\n      v: intV\n    })\n  } else {\n    throw new Error('Incorrect address. Are you using the correct account/ledger?')\n  }\n\n  transport.close()\n\n  return serializedSigned\n}\n\nexport async function ledgerSignMessage(hash, signerAddress) {\n  const transport = await getTransport()\n\n  const accountsData = await getAccounts(transport)\n\n  //TODO for multiple accs?\n  const account = accountsData[0]\n\n  let signedMsg\n  if (account.address.toLowerCase() === signerAddress.toLowerCase()) {\n    try {\n      const rsvReply = await new AppEth(transport).signPersonalMessage(account.derivationPath, hash.substr(2))\n      signedMsg = '0x' + rsvReply.r + rsvReply.s + rsvReply.v.toString(16)\n    } catch (e) {\n      throw new Error('Signature denied ' + e.message)\n    }\n  } else {\n    throw new Error('Incorrect address. Are you using the correct account/ledger?')\n  }\n  transport.close()\n  return signedMsg\n}\n\nexport async function ledgerSignMessage712(domainSeparator, hashStructMessage, signerAddress) {\n  const transport = await getTransport()\n\n  const accountsData = await getAccounts(transport)\n\n  //TODO for multiple accs?\n  const account = accountsData[0]\n\n  let signedMsg\n  if (account.address.toLowerCase() === signerAddress.toLowerCase()) {\n    try {\n      const rsvReply = await new AppEth(transport).signEIP712HashedMessage(account.derivationPath, domainSeparator, hashStructMessage)\n      signedMsg = '0x' + rsvReply.r + rsvReply.s + rsvReply.v.toString(16)\n    } catch (e) {\n      throw new Error('Signature denied ' + e.message)\n    }\n  } else {\n    throw new Error('Incorrect address. Are you using the correct account/ledger?')\n  }\n  transport.close()\n  return signedMsg\n}\n\nfunction calculateDerivedHDKeyInfos(initialDerivedKeyInfo, count) {\n  const derivedKeys = []\n  for (let i = 0; i < count; i++) {\n\n    const fullDerivationPath = `m/${initialDerivedKeyInfo.baseDerivationPath}/${i}`\n    const path = `m/${i}`\n    const hdKey = initialDerivedKeyInfo.hdKey.derive(path)\n    const address = addressOfHDKey(hdKey)\n    const derivedKey = {\n      address,\n      hdKey,\n      baseDerivationPath: initialDerivedKeyInfo.baseDerivationPath,\n      derivationPath: fullDerivationPath,\n    }\n\n    derivedKeys.push(derivedKey)\n  }\n  return derivedKeys\n}\n\nexport function addressOfHDKey(hdKey) {\n  const shouldSanitizePublicKey = true\n  const derivedPublicKey = hdKey.publicKey\n  const ethereumAddressUnprefixed = ethUtil\n    .publicToAddress(derivedPublicKey, shouldSanitizePublicKey)\n    .toString('hex')\n  return ethUtil.addHexPrefix(ethereumAddressUnprefixed).toLowerCase()\n}\n","const { AbiCoder, hexlify, arrayify, keccak256, Interface } = require('ethers').utils\nconst { Contract, BigNumber } = require('ethers')\n\nconst ensure = require('./ensureTypes')\n\nconst IdentityABI = require('../abi/Identity5.2')\nconst QuickAccManagerABI = require('../abi/QuickAccManager')\n\nconst IdentityInterface = new Interface(IdentityABI)\n\nfunction Bundle(args) {\n\tthis.identity = ensure.Address(args.identity)\n\tthis.network = args.network\n\t// @TODO validate this\n\tthis.signer = args.signer\n\tthis.txns = args.txns\n\tthis.gasLimit = args.gasLimit\n\tthis.nonce = args.nonce\n\tthis.signature = args.signature\n\tthis.minFeeInUSDPerGas = args.minFeeInUSDPerGas\n\tthis.recoveryMode = args.recoveryMode\n\tthis.meta = args.meta\n\tthis.gasTankFee = args.gasTankFee\n\treturn this\n}\n\nBundle.prototype.getNonce = async function(provider) {\n\tthis.nonce = await getNonce(provider, this)\n\treturn this.nonce\n}\n\nBundle.prototype.estimate = async function({ fetch, relayerURL, replacing, getNextNonce, gasTank }) {\n\tconst queryParams = Object.fromEntries(Object.entries({getNextNonce, gasTank}).filter(([_, v]) => v))\n\tconst res = await fetchPost(\n\t\tfetch,\n\t\t`${relayerURL}/identity/${this.identity}/${this.network}/estimate?${\n\t\t\t(new URLSearchParams(queryParams)).toString()\n\t\t}`,\n\t\t{ txns: this.txns, signer: this.signer, replacing, minFeeInUSDPerGas: this.minFeeInUSDPerGas }\n\t)\n\tthis.gasLimit = res.gasLimit\n\treturn res\n}\n\nBundle.prototype.sign = async function(wallet, isSingleSigMode) {\n\tif (isNaN(this.nonce)) throw new Error('nonce is not set')\n\tif (isNaN(this.gasLimit)) throw new Error('gasLimit is not set')\n\tconst encoded = getSignable(this, isSingleSigMode)\n\tconst hash = arrayify(keccak256(encoded))\n\tconst signature = await signMsg(wallet, hash)\n\tthis.signature = signature\n\treturn signature\n}\n\nBundle.prototype.submit = async function({ fetch, relayerURL }) {\n\tconst res = await fetchPost(\n\t\tfetch,\n\t\t`${relayerURL}/identity/${this.identity}/${this.network}/submit`,\n\t\t{\n\t\t\tnonce: this.nonce,\n\t\t\tsigner: this.signer,\n\t\t\ttxns: this.txns,\n\t\t\tgasLimit: this.gasLimit,\n\t\t\tsignature: this.signature,\n\t\t\tsignatureTwo: this.signatureTwo,\n\t\t\tmeta: this.meta,\n\t\t\tgasTankFee: this.gasTankFee\n\t\t}\n\t)\n\treturn res\n}\n\nBundle.prototype.cancel = async function({ fetch, relayerURL }) {\n\tconst res = await fetchPost(\n\t\tfetch,\n\t\t`${relayerURL}/identity/${this.identity}/${this.network}/cancel`,\n\t\t{ nonce: this.nonce, signer: this.signer }\n\t)\n\treturn res\n}\n\nconst UNPREDICTABLE_GAS_REGEX = /gas required exceeds allowance|always failing transaction|execution reverted/\nBundle.prototype.estimateNoRelayer = async function({ provider, replacing }) {\n\tconst txParams = {\n\t\tfrom: this.signer.quickAccManager || this.signer.address,\n\t\tto: this.identity,\n\t\tdata: IdentityInterface.encodeFunctionData('executeBySender', [this.txns])\n\t}\n\tconst blockTag = replacing ? 'latest' : 'pending'\n\tconst { error, gasLimit } = await estimateGasWithCatch(provider, blockTag, txParams)\n\tif (error && error.message.startsWith('execution reverted: ')) {\n\t\tconst message = error.message.slice(20)\n\t\treturn { success: false, message }\n\t}\n\tif (error) {\n\t\t// Match both the code and the regex to handle both errs from ethers and raw ones from nodes in case we use .send\n\t\tif (!(error.code === 'UNPREDICTABLE_GAS_LIMIT' || error.message.match(UNPREDICTABLE_GAS_REGEX)))\n\t\t\tthrow error\n\t\treturn { success: false, message: await getErrMsg(provider, txParams, blockTag) }\n\t}\n\tthis.gasLimit = gasLimit.toNumber()\n\t// @TODO EIP1559-optimized estimations (good first issue for external contributors)\n\tconst feeData = await provider.getFeeData()\n\tconst gasPrice = feeData.gasPrice.toNumber()\n\tconst baseFee = (gasPrice * gasLimit) / 1e18\n\treturn {\n\t\tsuccess: true,\n\t\tgasLimit: this.gasLimit,\n\t\tgasPrice,\n\t\tfeeInNative: {\n\t\t\tslow: baseFee * 0.9,\n\t\t\tmedium: baseFee * 1.0,\n\t\t\tfast: baseFee * 1.15,\n\t\t\tape: baseFee * 1.4\n\t\t}\n\t}\n}\n\nasync function signMessage(wallet, identity, signer, message, signatureTwo) {\n\tif (signer.address) return signMsg(wallet, message, true)\n\tif (signer.quickAccManager) {\n\t\tconst signatureOne = await signMsg(wallet, message, true)\n\t\t// the inner sig is the one that the QuickAccManager interprets by doing an abi.decode and sending each individual signature to isValidSignature\n\t\tconst abiCoder = new AbiCoder()\n\t\tconst sigInner = abiCoder.encode(\n\t\t\t['uint', 'bytes', 'bytes'],\n\t\t\t[signer.timelock, signatureOne, signatureTwo]\n\t\t)\n\t\t// 02 is the SmartWallet type sig; we're essentially formatting this as a smart wallet type sig, verified by the quickAccManager\n\t\tconst sig = `${sigInner + abiCoder.encode(['address'], [signer.quickAccManager]).slice(2)}02`\n\t\treturn sig\n\t}\n\tthrow new Error(`invalid signer object`)\n}\n\n\nasync function signMessage712(wallet, identity, signer, domain, types, value, signatureTwo) {\n\tif (signer.address) return signMsg712(wallet, domain, types, value)\n\tif (signer.quickAccManager) {\n\t\tconst signatureOne = await signMsg712(wallet, domain, types, value)\n\t\t// the inner sig is the one that the QuickAccManager interprets by doing an abi.decode and sending each individual signature to isValidSignature\n\t\tconst abiCoder = new AbiCoder()\n\t\tconst sigInner = abiCoder.encode(\n\t\t\t['uint', 'bytes', 'bytes'],\n\t\t\t[signer.timelock, signatureOne, signatureTwo]\n\t\t)\n\t\t// 02 is the SmartWallet type sig; we're essentially formatting this as a smart wallet type sig, verified by the quickAccManager\n\t\tconst sig = `${sigInner + abiCoder.encode(['address'], [signer.quickAccManager]).slice(2)}02`\n\t\treturn sig\n\t}\n\tthrow new Error(`invalid signer object`)\n}\n\nfunction getSignable(userTxnBundle, isSingleSigMode) {\n\tconst abiCoder = new AbiCoder()\n\tconst signer = userTxnBundle.signer\n\tif (signer.address)\n\t\treturn abiCoder.encode(\n\t\t\t['address', 'uint', 'uint', 'tuple(address, uint, bytes)[]'],\n\t\t\t[\n\t\t\t\tuserTxnBundle.identity,\n\t\t\t\tgetChainID(userTxnBundle.network),\n\t\t\t\tuserTxnBundle.nonce,\n\t\t\t\tuserTxnBundle.txns\n\t\t\t]\n\t\t)\n\tif (signer.quickAccManager) {\n\t\tconst accHash = keccak256(\n\t\t\tabiCoder.encode(\n\t\t\t\t['tuple(uint, address, address)'],\n\t\t\t\t[[userTxnBundle.signer.timelock, userTxnBundle.signer.one, userTxnBundle.signer.two]]\n\t\t\t)\n\t\t)\n\t\t// @TODO typed data\n\t\t// if (signer.isTypedData)\n\t\treturn abiCoder.encode(\n\t\t\t['address', 'uint', 'address', 'bytes32', 'uint', 'tuple(address, uint, bytes)[]', 'bool'],\n\t\t\t[\n\t\t\t\tsigner.quickAccManager,\n\t\t\t\tgetChainID(userTxnBundle.network),\n\t\t\t\tuserTxnBundle.identity,\n\t\t\t\taccHash,\n\t\t\t\tuserTxnBundle.nonce,\n\t\t\t\tuserTxnBundle.txns,\n\t\t\t\t!isSingleSigMode\n\t\t\t]\n\t\t)\n\t}\n\tthrow new Error(`invalid signer object`)\n}\n\nfunction getChainID(network) {\n\tif (network === 'ethereum') return 1\n\tif (network === 'polygon') return 137\n\tif (network === 'binance-smart-chain') return 56\n\tif (network === 'bsc') return 56\n\tif (network === 'fantom') return 250\n\tif (network === 'avalanche') return 43114\n\tif (network === 'arbitrum') return 42161\n\tif (network === 'moonbeam') return 1284\n\tif (network === 'moonriver') return 1285\n\tif (network === 'gnosis') return 100\n\tif (network === 'kucoin') return 321\n\tif (network === 'andromeda') return 1088\n\tif (network === 'cronos') return 25\n\tif (network === 'aurora') return 1313161554\n\tif (network === 'rinkeby') return 4\n\tif (network === 'optimism') return 10\n\tthrow new Error(`unsupported network ${network}`)\n}\n\nfunction mapSignatureV(sigRaw) {\n\tconst sig = arrayify(sigRaw)\n\tif (sig[64] < 27) sig[64] += 27\n\treturn hexlify(sig)\n}\n\nasync function signMsg(wallet, message, useFinalDigestSigMode = false) {\n\t// assert.equal(hash.length, 32, 'hash must be 32byte array buffer')\n\t// was 01 originally but to avoid prefixing in solidity, we changed it to 00\n\treturn `${mapSignatureV(await wallet.signMessage(message))}${useFinalDigestSigMode ? '00' : '01'}`\n}\n\nasync function signMsg712(wallet, domain, types, value) {\n\t// 00 is the enum number of SignatureMode.EIP712\n\tconst typedDataSign = await wallet._signTypedData(domain, types, value)\n\treturn `${mapSignatureV(typedDataSign)}00`\n}\n\nasync function getNonce(provider, userTxnBundle) {\n\ttry {\n\t\treturn (userTxnBundle.signer.quickAccManager\n\t\t\t? await new Contract(\n\t\t\t\t\tuserTxnBundle.signer.quickAccManager,\n\t\t\t\t\tQuickAccManagerABI,\n\t\t\t\t\tprovider\n\t\t\t  ).nonces(userTxnBundle.identity)\n\t\t\t: await new Contract(userTxnBundle.identity, IdentityABI, provider).nonce()\n\t\t).toNumber()\n\t} catch (e) {\n\t\t// means the identity isn't deployed, which certainly implies nonce 0\n\t\tif (e.code === 'CALL_EXCEPTION' && (await provider.getCode(userTxnBundle.identity)) === '0x')\n\t\t\treturn 0\n\t\tthrow e\n\t}\n}\n\nasync function fetchPost(fetch, url, body) {\n\tconst r = await fetch(url, {\n\t\theaders: { 'content-type': 'application/json' },\n\t\tmethod: 'POST',\n\t\tbody: JSON.stringify(body)\n\t})\n\treturn r.json()\n}\n\n// helpers for estimateNoRelayer\n\n// Signature of Error(string)\nconst ERROR_SIG = '0x08c379a0'\n\nasync function getErrMsg(provider, txParams, blockTag) {\n\t// .call always returns a hex string with ethers\n\ttry {\n\t\tconst returnData = await provider.call(txParams, blockTag)\n\t\treturn returnData.startsWith(ERROR_SIG)\n\t\t\t? new AbiCoder().decode(['string'], `0x${returnData.slice(10)}`)[0]\n\t\t\t: returnData\n\t} catch (e) {\n\t\t// weird infura case\n\t\tif (e.code === 'UNPREDICTABLE_GAS_LIMIT' && e.error) return e.error.message.slice(20)\n\t\tif (e.code === 'CALL_EXCEPTION') return 'no error string, possibly insufficient amount'\n\t\tif (e.code === 'INVALID_ARGUMENT') return `unable to deserialize: ${hexlify(e.value)}`\n\t\tthrow e\n\t}\n}\n\nasync function estimateGasWithCatch(provider, blockTag, tx) {\n\treturn (\n\t\tprovider\n\t\t\t.send('eth_estimateGas', [tx, blockTag])\n\t\t\t.then(gasLimit => ({ gasLimit: BigNumber.from(gasLimit) }))\n\t\t\t// with .send, the error is wrapped in another error\n\t\t\t.catch(e => (e.code === 'SERVER_ERROR' ? { error: e.error } : { error: e }))\n\t)\n}\n\n// getNonce(require('ethers').getDefaultProvider('homestead'), { identity: '0x23c2c34f38ce66ccc10e71e9bb2a06532d52c5e8', signer: {address: '0x942f9CE5D9a33a82F88D233AEb3292E680230348'}, txns: [] }).then(console.log)\n\nmodule.exports = { Bundle, signMessage, signMessage712, getSignable, signMsg, signMsg712 }\n","// Needed for OUTPACE\nconst channelLib = require('./Channel')\nconst withdrawalLib = require('./Withdraw')\nconst MerkleTree = require('./MerkleTree')\nconst splitSig = require('./splitSig')\n\n// Other utilities\nconst unbondCommitmentlLib = require('./UnbondCommitment')\nconst Permit = require('./Permit')\n\n// Identity and QuickAccManager\nconst bundleLib = require('./Bundle')\n\nmodule.exports = {\n\t...channelLib,\n\t...withdrawalLib,\n\t...unbondCommitmentlLib,\n\t...Permit,\n\t...bundleLib,\n\tMerkleTree,\n\tsplitSig\n}\n","const abi = require('ethereumjs-abi')\nconst keccak256 = require('js-sha3').keccak256\nconst ensure = require('./ensureTypes')\n\nconst ChannelState = {\n\t// hex representation of solidity type(uint256).max\n\tChallenged: '115792089237316195423570985008687907853269984665640564039457584007913129639935',\n\tActive: '0'\n}\n\nfunction Channel(args) {\n\tthis.leader = ensure.Address(args.leader)\n\tthis.follower = ensure.Address(args.follower)\n\tthis.guardian = ensure.Address(args.guardian)\n\tthis.tokenAddr = ensure.Address(args.tokenAddr)\n\tthis.nonce = ensure.Bytes32(args.nonce)\n\n\tObject.freeze(this)\n\n\treturn this\n}\n\nChannel.prototype.hash = function() {\n\treturn Buffer.from(\n\t\tkeccak256.arrayBuffer(\n\t\t\tabi.rawEncode(\n\t\t\t\t['address', 'address', 'address', 'address', 'bytes32'],\n\t\t\t\t[this.leader, this.follower, this.guardian, this.tokenAddr, this.nonce]\n\t\t\t)\n\t\t)\n\t)\n}\n\nChannel.prototype.hashHex = function() {\n\treturn `0x${this.hash().toString('hex')}`\n}\n\nChannel.prototype.toSolidityTuple = function() {\n\treturn [this.leader, this.follower, this.guardian, this.tokenAddr, this.nonce]\n}\n\nChannel.prototype.hashToSign = function(contractAddr, balanceRoot) {\n\t// contains the channel hash (channelId), so that it's not replayable\n\treturn Channel.getSignableStateRoot(contractAddr, this.hashHex(), balanceRoot)\n}\n\nChannel.prototype.hashToSignHex = function(contractAddr, stateRoot) {\n\treturn `0x${this.hashToSign(contractAddr, stateRoot).toString('hex')}`\n}\n\nChannel.prototype.getResumeSignableMessage = function(challengeExpires) {\n\treturn Buffer.from(\n\t\tkeccak256.arrayBuffer(\n\t\t\tabi.solidityPack(\n\t\t\t\t['string', 'bytes32', 'uint256'],\n\t\t\t\t['resume', this.hashHex(), challengeExpires]\n\t\t\t)\n\t\t)\n\t)\n}\n\nChannel.prototype.getResumeSignableMessageHex = function(challengeExpires) {\n\treturn `0x${this.getResumeSignableMessage(challengeExpires).toString('hex')}`\n}\n\n// This returns the same as .hashToSign, .hashToSignHex, but it takes the channelId rather than (the whole channel + contract addr)\nChannel.getSignableStateRoot = function(contractAddr, channelId, balanceRoot) {\n\treturn Buffer.from(\n\t\tkeccak256.arrayBuffer(\n\t\t\tabi.rawEncode(['address', 'bytes32', 'bytes32'], [contractAddr, channelId, balanceRoot])\n\t\t)\n\t)\n}\n\nChannel.getBalanceLeaf = function(acc, amnt) {\n\treturn Buffer.from(keccak256.arrayBuffer(abi.rawEncode(['address', 'uint256'], [acc, amnt])))\n}\n\nChannel.getSpenderBalanceLeaf = function(acc, amnt) {\n\treturn Buffer.from(\n\t\tkeccak256.arrayBuffer(abi.rawEncode(['address', 'string', 'uint256'], [acc, 'spender', amnt]))\n\t)\n}\n\nmodule.exports = { Channel, ChannelState }\n","const ensure = require('./ensureTypes')\n\nfunction Withdraw(args) {\n\tthis.channel = args.channel\n\tthis.balanceTreeAmount = ensure.Uint256(args.balanceTreeAmount)\n\tthis.stateRoot = ensure.Bytes32(args.stateRoot)\n\tthis.sigLeader = ensure.Bytes32Array(args.sigLeader, 3)\n\tthis.sigFollower = ensure.Bytes32Array(args.sigFollower, 3)\n\tthis.proof = ensure.Bytes32Array(args.proof, -1)\n\n\tObject.freeze(this)\n\n\treturn this\n}\n\nWithdraw.prototype.toSolidityTuple = function() {\n\t// etherjs doesn't seem to want BN.js instances; hex is the lowest common denominator for web3/ethers\n\treturn [\n\t\tthis.channel.toSolidityTuple(),\n\t\t`0x${this.balanceTreeAmount.toString(16)}`,\n\t\tthis.stateRoot,\n\t\tthis.sigLeader,\n\t\tthis.sigFollower,\n\t\tthis.proof\n\t]\n}\n\nmodule.exports = { Withdraw }\n","// from https://github.com/ConnextProject/connext-client/blob/master/src/helpers/MerkleTree.js\nconst Buffer = require('buffer').Buffer\nconst keccak256 = require('js-sha3').keccak256\n\nfunction combinedHash(first, second) {\n\tif (!second) {\n\t\treturn first\n\t}\n\tif (!first) {\n\t\treturn second\n\t}\n\tconst sorted = Buffer.concat([first, second].sort(Buffer.compare))\n\n\treturn Buffer.from(keccak256.arrayBuffer(sorted))\n}\n\nfunction deduplicate(buffers) {\n\t// NOTE: performance?\n\treturn buffers.filter((buffer, i) => {\n\t\treturn buffers.findIndex(e => e.equals(buffer)) === i\n\t})\n}\n\nfunction getPair(index, layer) {\n\tconst pairIndex = index % 2 ? index - 1 : index + 1\n\tif (pairIndex < layer.length) {\n\t\treturn layer[pairIndex]\n\t}\n\treturn null\n}\n\nfunction getLayers(elements) {\n\tif (elements.length === 0) {\n\t\treturn [[Buffer.from('')]]\n\t}\n\tconst layers = []\n\tlayers.push(elements)\n\twhile (layers[layers.length - 1].length > 1) {\n\t\tlayers.push(getNextLayer(layers[layers.length - 1]))\n\t}\n\treturn layers\n}\n\nfunction getNextLayer(elements) {\n\treturn elements.reduce((layer, element, index, arr) => {\n\t\tif (index % 2 === 0) {\n\t\t\tlayer.push(combinedHash(element, arr[index + 1]))\n\t\t}\n\t\treturn layer\n\t}, [])\n}\n\nclass MerkleTree {\n\tconstructor(_elements) {\n\t\tif (!_elements.every(b => b.length === 32 && Buffer.isBuffer(b))) {\n\t\t\tthrow new Error('elements must be 32 byte buffers')\n\t\t}\n\t\tconst e = { elements: deduplicate(_elements) }\n\t\tObject.assign(this, e)\n\t\tthis.elements.sort(Buffer.compare)\n\n\t\tconst l = { layers: getLayers(this.elements) }\n\t\tObject.assign(this, l)\n\t}\n\n\tgetRoot() {\n\t\tif (!this.root) {\n\t\t\tconst r = { root: this.layers[this.layers.length - 1][0] }\n\t\t\tObject.assign(this, r)\n\t\t}\n\t\treturn this.root\n\t}\n\n\tverify(proof, element) {\n\t\treturn this.getRoot().equals(proof.reduce((hash, pair) => combinedHash(hash, pair), element))\n\t}\n\n\tproof(element) {\n\t\tlet index = this.elements.findIndex(e => e.equals(element))\n\n\t\tif (index === -1) {\n\t\t\tthrow new Error('element not found in merkle tree')\n\t\t}\n\n\t\treturn this.layers.reduce((proof, layer) => {\n\t\t\tconst pair = getPair(index, layer)\n\t\t\tif (pair) {\n\t\t\t\tproof.push(pair)\n\t\t\t}\n\t\t\tindex = Math.floor(index / 2)\n\t\t\treturn proof\n\t\t}, [])\n\t}\n}\nmodule.exports = MerkleTree\n","function splitSig(inputSig) {\n\tconst sig = inputSig.startsWith('0x') ? inputSig.slice(2) : inputSig\n\tconst r = `0x${sig.substring(0, 64)}`\n\tconst s = `0x${sig.substring(64, 128)}`\n\tlet v = parseInt(sig.substring(128, 130), 16)\n\tif (v < 27) v += 27\n\t// 02 mode is GETH\n\tconst pack = `${'0x02'}${v.toString(\n\t\t16\n\t)}000000000000000000000000000000000000000000000000000000000000`\n\treturn [pack, r, s]\n}\n\nmodule.exports = splitSig\n","const abi = require('ethereumjs-abi')\nconst keccak256 = require('js-sha3').keccak256\nconst ensure = require('./ensureTypes')\n\nfunction UnbondCommitment(args) {\n\tthis.owner = ensure.Address(args.owner)\n\tthis.shares = ensure.Uint256(args.shares)\n\tthis.unlocksAt = ensure.Uint256(args.unlocksAt)\n\n\tObject.freeze(this)\n\treturn this\n}\n\nUnbondCommitment.prototype.hash = function() {\n\tconst buf = abi.rawEncode(\n\t\t['address', 'uint256', 'uint256'],\n\t\t[this.owner, this.shares, this.unlocksAt]\n\t)\n\treturn Buffer.from(keccak256.arrayBuffer(buf))\n}\n\nUnbondCommitment.prototype.hashHex = function() {\n\treturn `0x${this.hash().toString('hex')}`\n}\n\nmodule.exports = { UnbondCommitment }\n","const { keccak256, defaultAbiCoder, toUtf8Bytes, solidityPack } = require('ethers').utils\n\nconst PERMIT_TYPEHASH = keccak256(\n\ttoUtf8Bytes('Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)')\n)\n\nfunction getDomainSeparator(name, tokenAddress, chainId) {\n\treturn keccak256(\n\t\tdefaultAbiCoder.encode(\n\t\t\t['bytes32', 'bytes32', 'bytes32', 'uint256', 'address'],\n\t\t\t[\n\t\t\t\tkeccak256(\n\t\t\t\t\ttoUtf8Bytes(\n\t\t\t\t\t\t'EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'\n\t\t\t\t\t)\n\t\t\t\t),\n\t\t\t\tkeccak256(toUtf8Bytes(name)),\n\t\t\t\tkeccak256(toUtf8Bytes('1')),\n\t\t\t\tchainId,\n\t\t\t\ttokenAddress\n\t\t\t]\n\t\t)\n\t)\n}\n\nfunction getApprovalDigest(token, approve, nonce, deadline) {\n\tconst DOMAIN_SEPARATOR = getDomainSeparator(token.name, token.address, token.chainId)\n\n\treturn keccak256(\n\t\tsolidityPack(\n\t\t\t['bytes1', 'bytes1', 'bytes32', 'bytes32'],\n\t\t\t[\n\t\t\t\t'0x19',\n\t\t\t\t'0x01',\n\t\t\t\tDOMAIN_SEPARATOR,\n\t\t\t\tkeccak256(\n\t\t\t\t\tdefaultAbiCoder.encode(\n\t\t\t\t\t\t['bytes32', 'address', 'address', 'uint256', 'uint256', 'uint256'],\n\t\t\t\t\t\t[PERMIT_TYPEHASH, approve.owner, approve.spender, approve.value, nonce, deadline]\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t]\n\t\t)\n\t)\n}\n\nmodule.exports = { getDomainSeparator, getApprovalDigest }\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","// It costs around 19k to send a token, if that token was interacted with before in the same transaction,\n// because of SLOAD costs - they depend on whether a slot has been read\n// however, it costs 30k if the token has not been interacted with\n// we may decrease it a bit and lean on the relayer failsafe values (cfg.gasAddedOnEstimate) later on\nconst ADDED_GAS_TOKEN = 30000\nconst ADDED_GAS_NATIVE = 12000\n\nexport function isTokenEligible(token, speed, estimation, isGasTankEnabled, network) {\n  if (estimation?.relayerless && token?.address === '0x0000000000000000000000000000000000000000') return true\n  if (!token) return false\n  const { feeInFeeToken } = getFeesData(token, estimation, speed, isGasTankEnabled, network)\n  const balanceInFeeToken = (parseInt(token.balance) / Math.pow(10, token.decimals))\n  return balanceInFeeToken > feeInFeeToken\n}\n\nexport function getAddedGas(token) {\n  return !token?.address || token?.address === '0x0000000000000000000000000000000000000000'\n    ? ADDED_GAS_NATIVE\n    : ADDED_GAS_TOKEN\n}\n\n// can't think of a less funny name for that\nexport function getFeePaymentConsequences(token, estimation, isGasTankEnabled) {\n  // Relayerless mode\n  if (!estimation?.feeInUSD || !token) return { multiplier: 1, addedGas: 0 }\n  // Relayer mode\n  const addedGas = getAddedGas(token)\n  // If Gas Tank enabled\n  if (!!isGasTankEnabled) return { addedGas: 0, multiplier: 1 }\n\n  return {\n    // otherwise we get very long floating point numbers with trailing .999999\n    multiplier: parseFloat(((estimation.gasLimit + addedGas) / estimation.gasLimit).toFixed(4)),\n    addedGas\n  }\n}\n\nconst contractErrors = ['caller is a contract', 'caller is another contract', 'contract not allowed', 'contract not supported', 'No contractz allowed', 'o contracts', /*no */'contracts allowed', /* c or C*/'ontract is not allowed', 'aller must be user', 'aller must be a user', 'ontract call not allowed']\n\nexport function mapTxnErrMsg(msg) {\n  if (!msg) return\n  if (msg.includes('Router: EXPIRED')) return 'Swap expired'\n  if (msg.includes('Router: INSUFFICIENT_OUTPUT_AMOUNT')) return 'Swap will suffer slippage higher than your requirements'\n  if (msg.includes('INSUFFICIENT_PRIVILEGE')) return 'Your signer address is not authorized.'\n  if (contractErrors.find(contractMsg => msg.includes(contractMsg))) return 'This dApp does not support smart wallets.'\n  return msg\n}\n\nexport function getErrHint(msg) {\n  if (!msg) return\n  if (msg.includes('Router: EXPIRED')) return 'Try performing the swap again'\n  if (msg.includes('Router: INSUFFICIENT_OUTPUT_AMOUNT')) return 'Try performing the swap again or increase your slippage requirements'\n  if (msg.includes('INSUFFICIENT_PRIVILEGE')) return 'If you set a new signer for this account, try re-adding the account.'\n  if (contractErrors.find(contractMsg => msg.includes(contractMsg))) {\n    return 'WARNING! We detected that this dApp intentionally blocks smart contract calls. This is a highly disruptive practice, as it breaks support for all smart wallets (Ambire, Gnosis Safe and others). We recommend you report this to the dApp ASAP and ask them to fix it.'\n    // return 'This dApp does not support smart wallets or purposefully excludes them. Contact the dApp developers to tell them to implement smart wallets by not blocking contract interactions and/or implementing EIP1271.'\n  }\n  return 'Sending this transaction batch would have resulted in an error, so we prevented it.'\n}\n\nexport function checkIfDAppIncompatible(msg) {\n  return contractErrors.find(contractMsg => msg.includes(contractMsg))\n}\n\nexport function toHexAmount(amnt, decimals) {\n  return '0x' + Math.round(amnt * Math.pow(10, decimals)).toString(16)\n}\n\nexport function getDiscountApplied(amnt, discount = 0) {\n  if (!discount) return 0\n  if (!amnt) return 0\n  if (discount === 1) return amnt\n  return amnt / (1 - discount) * discount\n}\n\n// Returns feeToken data with all multipliers applied\nexport function getFeesData(feeToken, estimation, speed, isGasTankEnabled, network) {\n  const { addedGas, multiplier } = getFeePaymentConsequences(feeToken, estimation, isGasTankEnabled)\n  const savedGas = getAddedGas(feeToken)\n  const discountMultiplier = 1 - (feeToken?.discount || 0)\n  const totalMultiplier = multiplier * discountMultiplier\n  const nativeRate = feeToken?.nativeRate || 1\n  const isCrossChainNativeSelected = isGasTankEnabled && feeToken.address === '0x0000000000000000000000000000000000000000' && (network.id !== feeToken.network)\n  const feeInNative = estimation.customFee\n    ? ((estimation.customFee * discountMultiplier) / nativeRate)\n    : !isCrossChainNativeSelected ? \n        estimation.feeInNative[speed] * totalMultiplier : \n        (((estimation.feeInNative[speed] * totalMultiplier) / nativeRate) * estimation.nativeAssetPriceInUSD) / feeToken.price\n  const feeInUSD = !isNaN(estimation.nativeAssetPriceInUSD) ? \n    !isCrossChainNativeSelected ? \n      feeInNative * estimation.nativeAssetPriceInUSD : \n      feeInNative * feeToken.price : \n    undefined\n  const feeInFeeToken = feeInNative * nativeRate\n\n  return {\n    feeInNative,\n    feeInUSD,\n    feeInFeeToken,\n    addedGas, // use it bundle data\n    savedGas,\n  }\n}\n","import './TxnPreview.scss'\n\nimport { useState, Fragment, useEffect  } from 'react'\n\nimport { getName, getTransactionSummary, isKnown } from 'lib/humanReadableTransactions'\nimport networks from 'consts/networks'\nimport { formatUnits } from 'ethers/lib/utils'\nimport { ToolTip } from 'components/common'\nimport { HiOutlineExternalLink } from 'react-icons/hi'\nimport { MdOutlineClose } from 'react-icons/md'\nimport { BsChevronDown, BsChevronUp } from 'react-icons/bs'\nimport { getTokenIcon } from 'lib/icons'\nimport { formatFloatTokenAmount } from 'lib/formatters'\nimport { setKnownAddressNames } from 'lib/humanReadableTransactions'\nimport useConstants from 'hooks/useConstants'\n\nfunction getNetworkSymbol(networkId) {\n  const network = networks.find(x => x.id === networkId)\n  return network ? network.nativeAssetSymbol : 'UNKNW'\n}\n\nfunction parseExtendedSummaryItem(item, i, networkDetails) {\n  if (item.length === 1) return item\n\n  if (i === 0) return (<div className={`action ${item.toLowerCase()}`} key={`item-${i}`}>{ item }</div>)\n\n  if (!item.type) return (<div className='word' key={`item-${i}`}>{ item }</div>)\n  if (item.type === 'token') {\n    return (\n    <div className='token' key={`item-${i}`}>\n      { item.amount > 0 && <span>{ formatFloatTokenAmount(item.amount, true, item.decimals) }</span> }\n      { item.decimals !== null && item.symbol ? \n        <Fragment>\n          {item.address &&\n            <div className='icon' \n              style={{ backgroundImage: `url(${getTokenIcon(networkDetails.id, item.address)})` }}>\n            </div>}\n          {item.symbol}\n        </Fragment>\n        : (item.amount > 0) ? 'units of unknown token' : null \n      }\n    </div>\n  )}\n\n  if (item.type === 'address') return (\n    <a\n      className='address'\n      key={`item-${i}`}\n      href={item.address ? `${networkDetails.explorerUrl}/address/${item.address}` : null}\n      target=\"_blank\"\n      rel=\"noreferrer\"\n      onClick={e => e.stopPropagation()}\n    >\n      <ToolTip disabled={!item.address} label={item.address}>\n        { item.name ? item.name : item.address }\n        { item.address ? <HiOutlineExternalLink/> : null }\n      </ToolTip>\n    </a>\n  )\n\n  if (item.type === 'network') return (\n    <div className='network' key={`item-${i}`}>\n      { item.icon ? <div className='icon' style={{ backgroundImage: `url(${item.icon})` }}></div> : null }\n      { item.name }\n    </div>\n  )\n\n  if (item.type === 'erc721') {\n    const canShowLink = item.network && item.address && item.id\n    return (\n      <a\n        className='erc721'\n        key={`item-${i}`}\n        href={canShowLink ? `#/wallet/nft/${item.network}/${item.address}/${item.id}` : null}\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        onClick={e => e.stopPropagation()}\n      >\n        { item.name }\n        { canShowLink ? <HiOutlineExternalLink/> : null }\n      </a>\n    )\n  }\n\n  return <></>\n}\n\nexport default function TxnPreview ({ txn, onDismiss, network, account, isFirstFailing, mined, disableExpand, disableDismiss, disableDismissLabel, addressLabel = null }) {\n  const { constants: { tokenList, humanizerInfo } } = useConstants()\n  const [isExpanded, setExpanded] = useState(false)\n  const contractName = getName(humanizerInfo, txn[0])\n\n  const networkDetails = networks.find(({ id }) => id === network)\n  const extendedSummary = getTransactionSummary(humanizerInfo, tokenList, txn, network, account, { mined, extended: true })\n\n  const summary = (extendedSummary.map(entry => Array.isArray(entry) ? entry.map((item, i) => parseExtendedSummaryItem(item, i, networkDetails)) : (entry))) // If entry is extended summary parse it\n  useEffect(() => !!addressLabel && setKnownAddressNames(addressLabel), [addressLabel])\n  \n  return (\n    <div className={isFirstFailing ? 'txnPreview firstFailing' : 'txnPreview'}>\n        <div className=\"heading\">\n          <div className=\"info\" onClick={() => !disableExpand && setExpanded(e => !e)}>\n            <div className=\"summary-container\">\n              {!disableExpand && (<div className='expandTxn'>\n                {isExpanded ? (<BsChevronUp/>) : (<BsChevronDown/>)}\n              </div>)}\n              <div className=\"summary\">{ summary }</div>\n            </div>\n            {isFirstFailing && (<div className='firstFailingLabel'>This is the first failing transaction.</div>)}\n              {!isFirstFailing && !mined && !isKnown(humanizerInfo, txn, account) && (<div className='unknownWarning'>Warning: interacting with an unknown contract or address.</div>)}\n          </div>\n          <div className='actionIcons'>\n            {onDismiss ? (\n              <ToolTip disabled={!disableDismiss || !disableDismissLabel} label={disableDismissLabel}>\n                <div className={`dismissTxn ${disableDismiss ? 'disabled' : ''}`} onClick={e => { e.stopPropagation(); !disableDismiss && onDismiss.apply(this, e) }}><MdOutlineClose/></div>\n              </ToolTip>\n            ) : (<></>)}\n          </div>\n        </div>\n        {\n          isExpanded ? (<div className='advanced'>\n            <div><b>Interacting with (<i>to</i>):</b> {txn[0]}{contractName ? ` (${contractName})` : ''}</div>\n            <div><b>Value to be sent (<i>value</i>):</b> {formatUnits(txn[1] || '0x0', 18)} {getNetworkSymbol(network)}</div>\n            <div><b>Data:</b> {txn[2]}</div>\n          </div>) : (<></>)\n        }\n    </div>\n  )\n}\n","// @ts-ignore adex-protocol-eth package doesn't have any types written\nimport IdentityFactoryABI from 'adex-protocol-eth/abi/IdentityFactory'\nimport { Interface } from 'ethers/lib/utils'\n\nimport accountPresets from '../../constants/accountPresets'\n\nconst IdentityFactory = new Interface(IdentityFactoryABI)\n\n// Pass deploySalt (eg `id('IsAmbireIdentity')`) to deploy contracts at the same address across chains\nexport function toBundleTxn(\n  { to, value, data, deploySalt }: { to: string; value: string; data: string; deploySalt: string },\n  from: string\n) {\n  // Transactions with no `to` are interpreted by the Ethereum network as CREATE (contract deployment) if they come from an EOA\n  // however, our accounts are not EOAs, so we will just call the factory with a user-specific nonce, that's also identifiable (0x6942)\n  if (to === '0x' || !to) {\n    const salt =\n      deploySalt || `0x69420000000000${Date.now().toString(16).slice(1, 9)}00${from.slice(2)}`\n    return [\n      accountPresets.identityFactoryAddr,\n      value,\n      IdentityFactory.encodeFunctionData('deploy', [data, salt])\n    ]\n  }\n  return [to, value || '0x0', data || '0x']\n}\n"],"sourceRoot":""}