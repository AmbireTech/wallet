{"version":3,"sources":["components/Wallet/Signatures/Signatures.module.scss","components/Wallet/Signatures/Signatures.js"],"names":["module","exports","getMessageAsText","msg","isHexString","toUtf8String","_","toString","Signatures","selectedAcc","selectedNetwork","privateMode","useLocalStorage","storage","key","defaultValue","messages","setMessages","filteredMessages","useMemo","filter","m","accountId","networkId","chainId","sort","a","b","date","useState","expansions","setExpansions","parentPage","useParams","page","localSignedMessagesStr","localStorage","signedMessages","useEffect","JSON","parse","err","console","error","paginatedMessages","setPaginatedMessages","className","cn","styles","signatures","title","items","setPaginatedItems","itemsPerPage","url","length","mainContainer","headerContainer","dapp","colDapp","dappTitle","colSigtype","colDate","colExpand","signatureExpand","map","index","hash","id","stringify","subContainer","subContainerVisible","dappIcon","dApp","icons","src","size","style","opacity","name","typed","Date","toLocaleDateString","toLocaleTimeString","onClick","prev","subContainerExpanded","messageContent","signer","address","quickAcc","message","signature","hidePrivateValue"],"mappings":"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","file":"static/js/30.12f5b59e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"signatures\":\"Signatures_signatures__26K2K\",\"title\":\"Signatures_title__1_dIL\",\"mainContainer\":\"Signatures_mainContainer__2zIg9\",\"colDapp\":\"Signatures_colDapp__15VA_\",\"colSigtype\":\"Signatures_colSigtype__1_9l9\",\"colDate\":\"Signatures_colDate__2gYWV\",\"colExpand\":\"Signatures_colExpand__38JJ1\",\"headerContainer\":\"Signatures_headerContainer__C-ZIO\",\"subContainer\":\"Signatures_subContainer__1sq0O\",\"subContainerVisible\":\"Signatures_subContainerVisible__y8Lc7\",\"dapp\":\"Signatures_dapp__1yP9H\",\"dappIcon\":\"Signatures_dappIcon__gtPHA\",\"signatureExpand\":\"Signatures_signatureExpand__2W_nu\",\"subContainerExpanded\":\"Signatures_subContainerExpanded__1BJdH\",\"messageContent\":\"Signatures_messageContent__3lpWT\"};","import styles from './Signatures.module.scss'\nimport { useLocalStorage } from 'hooks'\n\nimport { Image, Pagination } from 'components/common'\nimport React, { useState, useEffect, useMemo } from 'react'\nimport { isHexString, toUtf8String } from 'ethers/lib/utils'\nimport { id } from 'ethers/lib/utils'\n\nimport { AiFillAppstore } from 'react-icons/ai'\nimport { FaChevronDown, FaChevronUp } from 'react-icons/fa'\nimport { useParams } from 'react-router-dom'\nimport cn from 'classnames'\n\nconst ITEMS_PER_PAGE = 8\n\nfunction getMessageAsText(msg) {\n  if (isHexString(msg)) {\n    try {\n      return toUtf8String(msg)\n    } catch (_) {\n      return msg\n    }\n  }\n  return msg?.toString ? msg.toString() : msg + \"\" //what if dapp sends it as object? force string to avoid app crashing\n}\n\nfunction Signatures({ selectedAcc, selectedNetwork, privateMode }) {\n\n  const [messages, setMessages] = useLocalStorage({\n    storage: useLocalStorage,\n    key: 'signedMessages',\n    defaultValue: []\n  })\n\n  const filteredMessages = useMemo(() =>\n    messages\n      .filter(m =>\n        m.accountId === selectedAcc\n        && m.networkId === selectedNetwork.chainId\n      )\n      .sort((a, b) => b.date - a.date)\n  , [messages, selectedNetwork, selectedAcc])\n\n  const [expansions, setExpansions] = useState({})\n\n  const params = useParams()\n  const parentPage = params.page\n\n  //hacky, and preventing Outer scope values warning. but either this, either having a localstorage listener\n  let localSignedMessagesStr = localStorage.signedMessages\n\n  useEffect(() => {\n    try {\n      setMessages(JSON.parse(localSignedMessagesStr))\n    } catch (err) {\n      console.error('SignedMessages localstorage: invalid format')\n    }\n  }, [setMessages, localSignedMessagesStr])\n\n  const [paginatedMessages, setPaginatedMessages] = useState([])\n\n  return (\n    <div className={cn(styles.signatures)}>\n      <div className={cn(styles.title)}>\n        <h2>Signed Messages History</h2>\n        <Pagination\n          items={filteredMessages}\n          setPaginatedItems={setPaginatedMessages}\n          itemsPerPage={ITEMS_PER_PAGE}\n          url='/wallet/messages/{p}'\n          parentPage={parentPage}\n        />\n      </div>\n      {\n        !filteredMessages.length\n          ? (\n            <div className={cn(styles.mainContainer)}>\n              No messages signed with the account { privateMode.hidePrivateValue(selectedAcc) } yet on {selectedNetwork.id}\n            </div>\n          )\n          : (\n            <div>\n              <div className={cn(styles.mainContainer)}>\n                <div className={cn(styles.headerContainer)}>\n                  <div className={cn(styles.dapp, styles.colDapp)}>\n                    <div className={cn(styles.dappTitle)}>Dapp</div>\n                  </div>\n                  <div className={cn(styles.colSigtype)}>Type</div>\n                  <div className={cn(styles.colDate)}>Signed on</div>\n                  <div className={cn(styles.colExpand, styles.signatureExpand)}></div>\n                </div>\n                {\n                  paginatedMessages && paginatedMessages.map((m, index) => {\n                    const hash = id(JSON.stringify(m))\n                    return (\n                      <div className={cn(styles.subContainer)} key={index} >\n                        <div className={cn(styles.subContainerVisible)} >\n                          <div className={cn(styles.dapp, styles.colDapp)} >\n                            <div className={cn(styles.dappIcon)} >\n                              {\n                                m.dApp?.icons[0]\n                                  ? (\n                                    <Image src={m.dApp.icons[0]} size={32} />\n                                  )\n                                  : (\n                                    <AiFillAppstore style={{ opacity: 0.5 }}/>\n                                  )\n                              }\n                            </div>\n                            <div className={cn(styles.dappTitle)} >{m.dApp?.name || 'Unknown dapp'}</div>\n                          </div>\n                          <div className={cn(styles.colSigtype)} >{m.typed ? '1271 TypedData' : 'Standard'}</div>\n                          <div\n                            className={cn(styles.colDate)} >{`${new Date(m.date).toLocaleDateString()} ${new Date(m.date).toLocaleTimeString()}`}</div>\n                          <div className={cn(styles.colExpand, styles.signatureExpand)} onClick={() => {\n                            setExpansions(prev => ({ ...prev, [hash]: !prev[hash] }))\n                          }}>{expansions[hash] ? <FaChevronUp/> : <FaChevronDown/>}</div>\n                        </div>\n                        {\n                          expansions[hash] &&\n                          <div className={cn(styles.subContainerExpanded)}>\n                            <div>\n                              <b>Signer</b>\n                              <div className={cn(styles.messageContent)} >\n                                {m.signer.address || m.signer.quickAcc}\n                              </div>\n                            </div>\n                            <div>\n                              <b>Message</b>\n                              <div className={cn(styles.messageContent)} >\n                                {\n                                  m.typed\n                                    ? <div>{JSON.stringify(m.message, null, ' ')}</div>\n                                    : <div>{getMessageAsText(m.message)}</div>\n                                }\n                              </div>\n                            </div>\n                            <div>\n                              <b>Signature</b>\n                              <div className={cn(styles.messageContent)} >\n                                {m.signature}\n                              </div>\n                            </div>\n                          </div>\n                        }\n                      </div>\n                    )\n                  })\n                }\n              </div>\n              <Pagination\n                items={filteredMessages}\n                setPaginatedItems={setPaginatedMessages}\n                itemsPerPage={ITEMS_PER_PAGE}\n                url='/wallet/messages/{p}'\n                parentPage={parentPage}\n              />\n            </div>\n          )\n      }\n    </div>\n  )\n\n\n}\n\nexport default Signatures\n"],"sourceRoot":""}