{"version":3,"sources":["components/Wallet/Deposit/Providers/Providers.module.scss","components/Wallet/Deposit/Deposit.module.scss","resources/icons/information.svg","resources/payment-providers/ramp.svg","resources/payment-providers/paytrie.svg","resources/payment-providers/transak.svg","resources/payment-providers/kriptomat.svg","resources/payment-providers/guardarian.svg","lib/popupHelper.js","components/Modals/GuardarianDepositProviderModal/useGuardarian.js","components/Modals/GuardarianDepositProviderModal/GuardarianDepositProviderModal.js","components/Wallet/Deposit/Providers/useProviders.js","components/Wallet/Deposit/Providers/Providers.js","components/Wallet/Deposit/Deposit.js","consts/specialAddresses.js","lib/assetMigrationDetector.js","consts/permittableCoins.js","components/Wallet/AssetsMigration/AssetsMigrationSelector.js","components/Wallet/AssetsMigration/AssetsMigrationPermitter.js","components/Wallet/AssetsMigration/AssetsMigrationNative.js","components/Wallet/AssetsMigration/AssetsMigration.js","components/Modals/AssetsMigrationModal/AssetsMigrationModal.js","components/Wallet/AssetsMigration/AssetsMigrationBanner.js"],"names":["module","exports","_g","popupCenter","url","title","w","h","dualScreenLeft","undefined","window","screenLeft","screenX","dualScreenTop","screenTop","screenY","width","innerWidth","document","documentElement","clientWidth","screen","height","innerHeight","clientHeight","systemZoom","availWidth","left","top","newWindow","open","focus","OFF_RAMP_FIAT","label","value","icon","NETWORK_MAPPING","DEFAULT_CRYPTO","NATIVE_ADDRESS","repeat","useGuardarian","relayerURL","selectedNetwork","initMode","tokens","walletAddress","FIAT_CURRENCIES_URL","CRYPTO_CURRENCIES_URL","offRampFiats","addToast","useToasts","useState","network","setNetwork","from","setFrom","to","setTo","mode","setMode","amount","setAmount","data","cryptoCurrencies","setCryptoCurrencies","onRampFiats","setOnRampFiats","marketInfo","setMarketInfo","isLoading","estimateInfo","setEstimateInfo","cryptoList","useMemo","filter","t","networks","find","n","payment_methods","some","pm","withdrawal_enabled","map","ticker","logo_url","deposit_enabled","bt","address","toLowerCase","token_contract","fiatList","f","useEffect","fetchGet","then","error","message","catch","genMarketInfoUrl","useCallback","fromTo","unmounted","genEstimateUrl","unloaded","genTxnUrl","GuardarianDepositProviderModal","portfolio","hideModal","useModals","guardarian","sendTransactionLoading","setSendTransactionLoading","getCurrentTokenFromBalance","token","nt","validationMsg","marketData","userAmount","parseFloat","marketMin","min","marketMax","max","currToken","balance","switchMode","prevMode","buttons","clear","onClick","disabled","txn","redirect_url","format","e","id","className","placeholder","onInput","searchable","defaultValue","items","onChange","changeFrom","style","color","from_currency","estimated_exchange_rate","to_currency","changeTo","useProviders","setLoading","showModal","openPayTrie","a","prevState","rightSideLabels","ethereum","polygon","URL","parse","PAYTRIE_PARTNER_URL","search","query","addr","rightSideLabel","openKriptomat","kriptomatResponse","success","openRampNetwork","RampInstantSDK","hostAppName","hostLogoUrl","variant","swapAsset","userAddress","hostApiKey","RAMP_HOST_API_KEY","show","openTransak","transak","transakSDK","apiKey","TRANSAK_API_KEY","environment","TRANSAK_ENV","defaultCryptoCurrency","disableWalletAddressForm","themeColor","email","redirectURL","hostURL","location","origin","widgetHeight","widgetWidth","init","on","ALL_EVENTS","console","log","EVENTS","TRANSAK_ORDER_SUCCESSFUL","orderData","close","openGuardarian","_excluded","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgInformation","_ref","svgRef","titleId","props","xmlns","viewBox","ref","transform","fill","d","ForwardRef","Providers","networkDetails","providers","logo","GUARDARIAN_LOGO","name","type","fees","limits","currencies","KRIPTOMAT_LOGO","RAMP_LOGO","PAYTRIE_LOGO","TRANSAK_LOGO","shouldBeDisabled","includes","styles","wrapper","provider","src","alt","details","networkWarning","Deposit","selectedAcc","accounts","addRequest","useStorage","qrCodeUrl","setQrCodeUrl","generateQRCode","QRCode","toDataURL","quality","margin","deposit","panel","heading","subtitle","description","TextInput","depositAddress","inputContainerClass","inputClass","nativeAssetSymbol","copy","qrCode","networksTitle","list","hide","backgroundImage","AssetsMigrationBanner","selectedAccount","linkMargin","cn","ZERO_ADDRESS","assetMigrationDetector","networkId","account","relayerlessOnly","Promise","resolve","VELCRO_API_ENDPOINT","ZAPPER_API_KEY","velcroResponse","signer_","products","customTokens","assets","symbol","decimals","urlCustomTokens","JSON","stringify","finalResponse","tokenImageUrl","native","availableBalance","balanceRaw","balanceUSD","rate","err","Error","PERMIT_TYPE_2612","PERMIT_TYPE_DAI","EIP712DomainWithVersion","EIP712DomainWithoutNameNorVersion","EIP712Domain","EIP712DomainWithSalt","PERMITTABLE_COINS","version","domainType","permitType","nonceFunction","salt","ERC20PermittableInterface","Interface","AssetsMigrationSelector","signerAccount","identityAccount","setIsSelectionConfirmed","setStep","setModalButtons","setSelectedTokensWithAllowance","setGasSpeed","setStepperSteps","hidden","selectableTokens","setSelectableTokens","selectableTokensUserInputs","setSelectableTokensUserInputs","nativeToken","setNativeToken","setIsLoading","failedImg","setFailedImg","gasData","setGasData","estimatedGasFees","setEstimatedGasFees","selectedGasSpeed","setSelectedGasSpeed","tokensAllowances","setTokenAllowances","isAddCustomTokenFormShown","setIsAddCustomTokenFormShown","isCustomTokenPending","setIsCustomTokenPending","customTokenAddress","setCustomTokenAddress","customTokenError","setCustomTokenError","customTokenInput","useRef","inputRefs","updateSelectableTokenUserInputs","callback","index","findIndex","updated","slice","toggleTokenSelection","minHumanAmount","sort","b","current","old","selected","currentHumanAmount","humanAmount","BigNumber","multipliedBy","toFixed","addCustomToken","getProvider","ethers","utils","isAddress","tokenContract","Contract","symbolPromise","decimalsPromise","allowancePromise","allowance","availableSignerBalancePromise","balanceOf","all","promises","signerBalance","toNumber","toString","selectedAmount","div","gt","canCoverGasFees","speed","nativeToSpend","gasFees","signerTransactionsCost","plus","lte","getMaxTransferableNative","minus","consolidatedSelectableTokens","st","confirmTokenSelection","tokensToMigrate","consolidatedTokens","regularTransfersCount","nativeTransfersCount","signerTransactionsConsumption","nativeRate","gasFeeAssets","GAS_SPEEDS","forEach","gasPrice","maxPriorityFeePerGas","signerTransactionsCostUSD","allowanceResults","small","onAssetAmountChange","val","item","endsWith","split","isEqualTo","isNaN","newHumanAmount","comparedTo","dividedBy","replace","setTimeout","steps","push","tokensTitleActions","join","AmbireLoading","labelClassName","size","draggable","onError","failed","checked","element","ROUND_DOWN","values","AssetsMigrationPermitter","signer","signerExtra","selectedTokensWithAllowance","setError","gasSpeed","tokensPermissions","setTokensPermissions","tokensTransfers","setTokensTransfers","tokensPendingStatus","setTokensPendingStatus","hasRefusedOnce","setHasRefusedOnce","lastRefusalError","setLastRefusalError","hasCorrectAccountAndChainId","setHasCorrectAccountAndChainId","currentGasPrice","setCurrentGasPrice","wallet","setWallet","getConsolidatedTokensPure","remapped","signing","signature","sent","pending","checkWalletConnection","isConnected","chainId","connected","readyTokensCount","count","sendToken","waitForRcpt","tokenToMigrate","sendData","encodeFunctionData","transferResult","sendTransaction","gasLimit","rcpt","wait","cancelMigration","completeMigration","getWallet","nextTokenToAsk","signed","initialTokensTransfers","Button","gte","AssetsMigrationNative","nativeTokenData","hasERC20Tokens","setBeforeCloseModalHandler","hasMigratedNative","setHasMigratedNative","isMigrationPending","setIsMigrationPending","nativeAmount","setNativeAmount","maxRecommendedAmount","setMaxRecommendedAmount","transactionEstimationCost","setTransactionEstimationCost","nativeHumanAmount","setNativeHumanAmount","hasModifiedAmount","setHasModifiedAmount","continueMigration","erc20TransfersCount","permittable","migrateNative","updateAmount","nativeTransactionCost","transfersTransactionCost","recommendedBN","onAmountChange","initialHumanAmount","getDisplayedButtons","AssetsMigration","setModalSteps","setNativeTokenData","setHasERC20Tokens","isSelectionConfirmed","step","stepperSteps","showCloseConfirmation","setShowCloseConfirmation","currentAccount","stepIndex","s","beforeCloseHandle","AssetsMigrationModal","modalButtons","modalSteps","currentStep","noLabels","closeable","hasSignerAssets","setHasSignerAssets","migrationMessageSeen","setMigrationMessageSeen","migrationMessageSeenStorage","setMigrationMessageSeenStorage","closeMigrationMessage","relevantAssets","checkSignerAssets"],"mappings":"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","file":"static/js/20.c932a442.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Providers_wrapper__7mBkD\",\"provider\":\"Providers_provider__39HAw\",\"logo\":\"Providers_logo__22UO3\",\"details\":\"Providers_details__3D5WY\",\"type\":\"Providers_type__ZBapd\",\"fees\":\"Providers_fees__3H-KG\",\"limits\":\"Providers_limits__37PHy\",\"currencies\":\"Providers_currencies__ffX78\",\"disabled\":\"Providers_disabled__127mG\",\"networkWarning\":\"Providers_networkWarning__3sy45\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deposit\":\"Deposit_deposit__MVFPl\",\"depositAddress\":\"Deposit_depositAddress__8GtBi\",\"inputClass\":\"Deposit_inputClass__1kOnb\",\"panel\":\"Deposit_panel__3vfYo\",\"heading\":\"Deposit_heading__37Rps\",\"title\":\"Deposit_title__FtpVm\",\"subtitle\":\"Deposit_subtitle__28DJk\",\"description\":\"Deposit_description__1u2D2\",\"margin\":\"Deposit_margin__8HgjN\",\"qrCode\":\"Deposit_qrCode__3gFm8\",\"networks\":\"Deposit_networks__20Jgz\",\"networksTitle\":\"Deposit_networksTitle___H2Hn\",\"list\":\"Deposit_list__2V21e\",\"network\":\"Deposit_network__3IP_d\",\"icon\":\"Deposit_icon__2OVP1\",\"name\":\"Deposit_name__3iAeA\",\"logos\":\"Deposit_logos__1W5P7\"};","var _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgInformation(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"Information_icon\",\n    \"data-name\": \"Information icon\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"100%\",\n    height: \"100%\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Group_29\",\n    \"data-name\": \"Group 29\",\n    transform: \"translate(78 849) rotate(180)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"Boundary\",\n    width: 24,\n    height: 24,\n    transform: \"translate(54 825)\",\n    fill: \"none\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Shape\",\n    d: \"M1987,23a10,10,0,1,1,10-10A10.012,10.012,0,0,1,1987,23Zm0-8a1,1,0,1,0,1,1A1,1,0,0,0,1987,15Zm0-8a1,1,0,0,0-1,1v5a1,1,0,1,0,2,0V8A1,1,0,0,0,1987,7Z\",\n    transform: \"translate(-1921 824)\",\n    fill: \"#ebecff\"\n  }))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInformation);\nexport default __webpack_public_path__ + \"static/media/information.254b0bf9.svg\";\nexport { ForwardRef as ReactComponent };","export default __webpack_public_path__ + \"static/media/ramp.51a5841d.svg\";","export default __webpack_public_path__ + \"static/media/paytrie.81b0b17f.svg\";","export default __webpack_public_path__ + \"static/media/transak.cc92c218.svg\";","export default __webpack_public_path__ + \"static/media/kriptomat.6b5104a5.svg\";","export default __webpack_public_path__ + \"static/media/guardarian.770dcdb9.svg\";","export const popupCenter = ({ url, title, w, h }) => {\n\t// Fixes dual-screen position                             Most browsers      Firefox\n\tconst dualScreenLeft =\n\t\twindow.screenLeft !== undefined ? window.screenLeft : window.screenX\n\tconst dualScreenTop =\n\t\twindow.screenTop !== undefined ? window.screenTop : window.screenY\n\n\tconst width = window.innerWidth\n\t\t? window.innerWidth\n\t\t: document.documentElement.clientWidth\n\t\t? document.documentElement.clientWidth\n\t\t: window.screen.width\n\tconst height = window.innerHeight\n\t\t? window.innerHeight\n\t\t: document.documentElement.clientHeight\n\t\t? document.documentElement.clientHeight\n\t\t: window.screen.height\n\n\tconst systemZoom = width / window.screen.availWidth\n\tconst left = (width - w) / 2 / systemZoom + dualScreenLeft\n\tconst top = (height - h) / 2 / systemZoom + dualScreenTop\n\tconst newWindow = window.open(\n\t\turl,\n\t\ttitle,\n\t\t`\n\t\ttoolbar=no,scrollbars=no,resizable=no\n\t\twidth=${w / systemZoom}, \n\t\theight=${h / systemZoom}, \n\t\ttop=${top}, \n\t\tleft=${left},\n\t\t`\n\t)\n\n\tif (window.focus) newWindow.focus()\n}","import { useState, useEffect, useCallback, useMemo } from 'react'\nimport { fetchGet } from 'lib/fetch';\nimport { useToasts } from 'hooks/toasts'\n\nconst OFF_RAMP_FIAT = [\n    {\n        label: 'EUR',\n        value: 'EUR',\n        icon: `https://changenow.io/images/sprite/currencies/eur.svg`\n    },\n    {\n        label: 'GBP',\n        value: 'GBP',\n        icon: `https://changenow.io/images/sprite/currencies/gbp.svg`\n    },\n    {\n        label: 'USD',\n        value: 'USD',\n        icon: `https://changenow.io/images/sprite/currencies/usd.svg`\n    }\n]\n\nconst NETWORK_MAPPING = {\n    'ethereum': 'ETH',\n    'binance-smart-chain': 'BSC',\n    'polygon': 'MATIC',\n    'fantom': 'FTM',\n    'avalanche': 'AVAX'\n}\n\nconst DEFAULT_CRYPTO = {\n    'ethereum': 'ETH',\n    'binance-smart-chain': 'BNB',\n    'polygon': 'MATIC',\n    'fantom': 'FTM',\n    'avalanche': 'AVAX'\n\n}\n\nconst NATIVE_ADDRESS = '0x'+'0'.repeat(40)\n\nconst useGuardarian = function({ relayerURL, selectedNetwork, initMode, tokens, walletAddress }) {\n    const FIAT_CURRENCIES_URL = `${relayerURL}/guardarian/currencies/fiat`\n    const CRYPTO_CURRENCIES_URL = `${relayerURL}/guardarian/currencies/crypto`\n    const offRampFiats = OFF_RAMP_FIAT\n    const { addToast } = useToasts()\n    const [network, setNetwork] = useState(selectedNetwork)\n    const [from, setFrom] = useState('')\n    const [to, setTo] = useState('')\n    const [mode, setMode] = useState(initMode)\n    const [amount, setAmount] = useState('50')\n\n    const [cryptoCurrencies, setCryptoCurrencies] = useState({data: []})\n    const [onRampFiats, setOnRampFiats] = useState({data: []})\n\n    const [marketInfo, setMarketInfo] = useState(null)\n    const [estimateInfo, setEstimateInfo] = useState({data: null, isLoading: false})\n\n    const cryptoList = useMemo(() => {\n        if (mode === 'buy') {\n            return {\n                data: cryptoCurrencies?.data?.filter(t => t.networks.find(n => n.network === NETWORK_MAPPING[network] && n.payment_methods.some(pm => pm.withdrawal_enabled\n                ))).map(t => ({\n                    label: t.ticker,\n                    value: t.ticker ,\n                    icon: t.logo_url\n                })).filter(t => t.value) || [],\n                isLoading: cryptoCurrencies?.isLoading\n            }\n        } else if (mode === 'sell') {\n            return {\n                data: cryptoCurrencies?.data?.filter(t => t.networks.find(n => n.network === NETWORK_MAPPING[network] && n.payment_methods.some(pm => pm.deposit_enabled) && tokens.find(bt => bt?.address?.toLowerCase() === n?.token_contract?.toLowerCase() || (bt?.address === NATIVE_ADDRESS && n?.token_contract === null))))\n                    .map(t => ({\n                        label: t.ticker,\n                        value: t.ticker ,\n                        icon: t.logo_url\n                    })).filter(t => t.value) || [],\n                isLoading: cryptoCurrencies.isLoading\n            }\n        }\n    }, [mode, cryptoCurrencies, network, tokens])\n\n    const fiatList = useMemo(() => {\n        if (mode === 'buy') {\n            return {\n                data: onRampFiats?.data?.map(f => ({\n                    label: f.ticker,\n                    value: f.ticker,\n                    icon: f.logo_url || `https://changenow.io/images/sprite/currencies/${f?.ticker?.toLowerCase()}.svg`\n                })) || [],\n                isLoading: onRampFiats?.isLoading\n            }\n        } else if (mode === 'sell') {\n            return {\n                data: offRampFiats,\n                isLoading: false\n            }\n        }\n    }, [mode, onRampFiats, offRampFiats])\n\n    //mode\n    useEffect(()=> {\n        if (mode === 'buy') {\n            setAmount('50')\n            setFrom(fiatList.data && fiatList.data[0] ? fiatList.data[0].value : null)\n            setTo(DEFAULT_CRYPTO[network])\n        } else if (mode === 'sell') {\n            setAmount('')\n            setFrom(cryptoList.data && cryptoList.data[0] ? cryptoList.data[0].value : null)\n            setTo(fiatList.data && fiatList.data[0] ? fiatList.data[0].value : null)\n        }\n    }, [mode, fiatList, cryptoList, network])\n\n    //fiat\n    useEffect(() => {\n        setOnRampFiats({data: null, isLoading: true})\n        fetchGet(FIAT_CURRENCIES_URL)\n            .then((data) => setOnRampFiats({data, isLoading: false, error: {}, message: ''}))\n            .catch(error => {\n                setOnRampFiats({data: null, isLoading: false, error, message: 'Error while fetching fiat list'})\n                addToast('Error while fetching fiat list', { error: true })\n            })\n    }, [FIAT_CURRENCIES_URL, addToast])\n\n    //ctypto\n    useEffect(() => {\n        setCryptoCurrencies({data: null, isLoading: true})\n        fetchGet(CRYPTO_CURRENCIES_URL)\n            .then((data) => {\n                setCryptoCurrencies({data, isLoading: false, error: {}, message: ''})\n            })\n            .catch(error => {\n                setCryptoCurrencies({data: null, isLoading: false, error, message: 'Error while fetching crypto list'})\n                addToast('Error while fetching crypto list', { error: true })\n            })\n    }, [network, CRYPTO_CURRENCIES_URL, addToast])\n\n\n    const genMarketInfoUrl = useCallback(() => {\n        const fromTo =\n            mode === 'buy'\n                ? `${from}_${to}-${NETWORK_MAPPING[network]}`\n                : mode === 'sell'\n                    ? `${from}-${NETWORK_MAPPING[network]}_${to}`\n                    : null\n\n        if (fromTo) return `${relayerURL}/guardarian/market-info/${fromTo}`\n        else return null\n    }, [mode, from, to, network, relayerURL])\n\n    // MarketInfo\n    useEffect(() => {\n        if (!network || !from || !to || !mode) return setMarketInfo({ data: null, isLoading: false })\n\n        setMarketInfo({ data: null, isLoading: true })\n\n        const url = genMarketInfoUrl()\n\n        // Prevent State updates on unmounted components\n        let unmounted = false\n\n        fetchGet(url)\n            .then(({data}) => !unmounted && setMarketInfo({ data, isLoading: false }))\n            .catch(error => !unmounted && (\n                setMarketInfo({ data: null, isLoading: false, error, message: 'Error while fetching market info' }),\n                addToast('Error while fetching market info', { error: true })\n                ))\n        return () => {\n            unmounted = true\n        }\n    }, [network, mode, from, to, addToast, genMarketInfoUrl])\n\n\n    const genEstimateUrl = useCallback(() => {\n        if (mode === 'buy'){\n            return `${relayerURL}/guardarian/estimate/${from}/${network}/${amount}/${to}/${'true'}`\n        } else {\n            return `${relayerURL}/guardarian/estimate/${from}/${network}/${amount}/${to}/${'false'}`\n        }\n    }, [mode, relayerURL, from, network, amount, to])\n\n    // Estimate\n    useEffect(() => {\n        if (!network || !from || !to || !mode || !amount) return setEstimateInfo({ data: null, isLoading: false })\n\n        setEstimateInfo({ data: null, isLoading: true })\n\n        const url = genEstimateUrl()\n\n        // Prevent State updates on unmounted components\n        let unloaded = false\n\n        fetchGet(url)\n            .then(({data}) => !unloaded && setEstimateInfo({ data, isLoading: false }))\n            .catch(error => !unloaded && (\n                setEstimateInfo({ data: null, isLoading: false, error, message: 'Error while fetching estimate info' }),\n                addToast('Error while fetching estimate info', { error: true }))\n            )\n        return () => {\n            unloaded = true\n        }\n    }, [network, mode, from, to, amount, addToast, genEstimateUrl])\n\n    function genTxnUrl () {\n        if (mode === 'buy') {\n            return `${relayerURL}/guardarian/transaction/${from}/null/${amount}/${to}/${selectedNetwork}/${walletAddress}`\n        } else {\n            return `${relayerURL}/guardarian/transaction/${from}/${selectedNetwork}/${amount}/${to}/null/null`\n        }\n    }\n\n    return {\n        marketInfo,\n        estimateInfo,\n        cryptoList,\n        fiatList,\n        network,\n        from,\n        to,\n        mode,\n        amount,\n        cryptoCurrencies,\n        setNetwork,\n        setFrom,\n        setTo,\n        setMode,\n        setAmount,\n        genTxnUrl,\n        NETWORK_MAPPING,\n        NATIVE_ADDRESS,\n        DEFAULT_CRYPTO\n    }\n    \n}\n\n\nexport default useGuardarian","import './GuardarianDepositProviderModal.scss'\n\nimport { Button, Loading, Modal, TextInput, Select } from 'components/common'\nimport {useState, useMemo, useCallback} from 'react'\nimport { MdOutlineClose } from 'react-icons/md'\nimport useGuardarian from './useGuardarian'\nimport { useModals } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { ToolTip } from 'components/common'\nimport { fetchGet } from 'lib/fetch';\nimport { popupCenter } from 'lib/popupHelper'\nimport url from 'url'\n\n\nconst GuardarianDepositProviderModal = ({ relayerURL, walletAddress, selectedNetwork, portfolio }) => {\n    const { hideModal } = useModals()\n    const { addToast } = useToasts()\n    const guardarian = useGuardarian({relayerURL, selectedNetwork, initMode: 'buy', tokens: portfolio.tokens, walletAddress, addToast })\n    const [sendTransactionLoading, setSendTransactionLoading] = useState(false)\n\n    const getCurrentTokenFromBalance = useCallback(() => {\n        if (portfolio.tokens && guardarian?.cryptoCurrencies?.data && guardarian.mode === 'sell') {\n            const token = guardarian?.cryptoCurrencies?.data?.find(t => t.ticker === guardarian.from)\n            return portfolio?.tokens?.find(t => token?.networks?.find(nt => (nt?.token_contract?.toLowerCase() === t?.address?.toLowerCase())\n                || (nt?.network === guardarian.NETWORK_MAPPING[guardarian.network] && t?.address.toLowerCase() ===  guardarian.NATIVE_ADDRESS && nt?.token_contract === null)))\n        }\n        else return {}\n    }, [guardarian, portfolio.tokens])\n\n    const validationMsg = useMemo(() => {\n        const marketData = guardarian?.marketInfo?.data\n\n        // In case of failed market info or estimate requests\n        if (guardarian?.marketInfo?.error || guardarian?.estimateInfo?.error) return 'Sorry! We couldn\\'t estimate your order! Please try again later!'\n\n        // If there is no market data fetch yet, we can't validate\n        if (!marketData) return ''\n\n        const userAmount = parseFloat(guardarian.amount)\n        const marketMin = parseFloat(marketData.min)\n        const marketMax = parseFloat(marketData.max)\n\n        if (guardarian.mode === 'buy') {\n            if (userAmount < marketMin) return `Minimum amount is ${marketData.min} ${marketData.from}`\n            if (userAmount > marketMax) return `Maximum amount is ${marketData.max} ${marketData.from}`\n        } else if (guardarian.mode === 'sell') {\n            const currToken = getCurrentTokenFromBalance()\n\n            if (userAmount < marketMin) return `Minimum amount is ${marketData.min} ${marketData.from}`\n            if (userAmount > marketMax) return `Maximum amount is ${marketData.max} ${marketData.from}`\n            if (currToken && guardarian?.from && (userAmount > currToken.balance)) return `You do not have enough funds`\n        }\n\n        return ''\n    }, [guardarian, getCurrentTokenFromBalance])\n\n    const switchMode = () => {\n        // On switching mode, reset from/to, because the next form gets obsolete field values\n        // and can result in wrong API calls (fired in `useGuardarian` useEffect)\n        guardarian.setMode((prevMode) => prevMode === 'buy' ? 'sell' : 'buy')\n        guardarian.setAmount('')\n        guardarian.setFrom('')\n        guardarian.setTo(guardarian.mode === 'buy' ? guardarian.DEFAULT_CRYPTO[guardarian.NETWORK_MAPPING[guardarian.network]] : '')\n    }\n\n    function changeFrom(value) {\n        guardarian.setFrom(value)\n    }\n\n    function changeTo(value) {\n        guardarian.setTo(value)\n    }\n\n    const onInputAmount = value => {\n        guardarian.setAmount(value)\n    }\n\n    function sendTxn () {\n        setSendTransactionLoading(true)\n        fetchGet(guardarian.genTxnUrl())\n            .then(({data}) => {\n                setSendTransactionLoading(false)\n                if (data?.redirect_url) {\n                    popupCenter({\n                        url: url.format(data?.redirect_url),\n                        title: 'Guardarian Deposit',\n                        w: 560,\n                        h: 710,\n                    })\n                }\n            })\n            .catch(e => {\n                addToast('Error while trying to send transaction', { error: true })\n                setSendTransactionLoading(false)\n            })\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n        <Button \n            disabled={\n                validationMsg !== '' \n                || guardarian?.marketInfo?.isLoading \n                || guardarian?.estimateInfo?.isLoading \n                || guardarian?.txn?.isLoading\n                || guardarian?.amount === ''\n                || sendTransactionLoading\n            } \n            onClick={sendTxn}>{guardarian.mode === 'buy' ? 'Buy' : 'Sell'}</Button>\n    </>\n\n    return (\n        <Modal id=\"guardarian-modal\" title=\"Guardarian\" buttons={buttons}>\n            <div className='buy-sell-btns-wrapper'>\n                <div className={guardarian.mode === 'buy' ? 'button active' : 'button'} onClick={switchMode}>Buy</div>\n                <div className={guardarian.mode === 'sell' ? 'button active' : 'button'} onClick={switchMode}>Sell</div>    \n                \n            </div>\n            \n            <div className='input-currencies-wrapper'>\n            <div className='amount'>\n                <TextInput\n                    value={guardarian.amount}\n                    label=\"You send\"\n                    placeholder=\"Input amount\"\n                    onInput={onInputAmount}\n                />\n            </div>\n            <div className='currency'>\n                { (guardarian.mode === 'buy' && !guardarian?.fiatList?.isLoading) || (guardarian?.mode === 'sell' && !guardarian?.cryptoList?.isLoading)\n                ? <Select \n                    searchable \n                    defaultValue={guardarian.from} \n                    items={guardarian.mode === 'buy' ? guardarian.fiatList.data : guardarian.cryptoList.data} \n                    onChange={({value}) => changeFrom(value)}/>\n                : <div className='loading-wrapper'><Loading /> </div>}\n            </div>\n        </div>\n        { (validationMsg !== '') && (<p style={{ color: 'red' }}>{ validationMsg }</p>) }\n\n            <div className='estimation-info-wrapper'>\n                <div className='extra-fees'>\n                    <ToolTip label='All the exchange fees are added into the rate. There are no extra costs.'>\n                        <p>No extra fees</p>\n                    </ToolTip>\n                </div>\n                <div className='estimation-rate'>\n                    <ToolTip label='This is expected rate. Guardarian guarantees to pick up the best possible rate on the moment of the exchange'>\n                    <p>\n                        Estimation rate: {' '}\n                        { !guardarian.estimateInfo.isLoading && guardarian?.estimateInfo?.data && validationMsg === ''\n                        ? (<>\n                        { 1 + guardarian?.estimateInfo?.data?.from_currency} ≈ {guardarian?.estimateInfo?.data?.estimated_exchange_rate} {guardarian?.estimateInfo?.data?.to_currency}\n                    </>)\n                    : <></>}\n                    </p>\n                </ToolTip>\n                </div>\n            </div> \n        <div className='input-currencies-wrapper'>\n            <div className='amount'> \n                { !guardarian.estimateInfo.isLoading\n                    ? (<TextInput\n                        value= {guardarian?.estimateInfo?.data ? guardarian?.estimateInfo?.data?.value : ''}\n                        disabled\n                        label=\"You get\"\n                    />) \n                    : (\n                        <>\n                            <label>You get</label>\n                            <div className='loading-wrapper'><Loading /> </div>\n                        </>\n                    )}\n            </div>\n            <div className='currency'>\n            { (guardarian?.mode === 'buy' && !guardarian?.cryptoList?.isLoading) || (guardarian?.mode === 'sell' && !guardarian?.fiatList?.isLoading)\n                ? <Select \n                    searchable \n                    defaultValue={guardarian?.to}\n                    items={guardarian?.mode === 'sell' ? guardarian?.fiatList?.data : guardarian?.cryptoList?.data} \n                    onChange={({value}) => changeTo(value)}/> \n                : <div className='loading-wrapper'><Loading /> </div>}\n            </div>\n        </div>\n        </Modal>\n    )\n}                    \n\nexport default GuardarianDepositProviderModal","import { RampInstantSDK } from '@ramp-network/ramp-instant-sdk'\nimport transakSDK from '@transak/transak-sdk'\nimport { popupCenter } from 'lib/popupHelper'\nimport { fetchGet } from 'lib/fetch'\nimport { useState } from 'react';\nimport { useToasts } from 'hooks/toasts'\nimport { useModals } from 'hooks'\nimport GuardarianDepositProviderModal from 'components/Modals/GuardarianDepositProviderModal/GuardarianDepositProviderModal'\n\nimport url from 'url'\n\nimport { RAMP_HOST_API_KEY, PAYTRIE_PARTNER_URL, TRANSAK_API_KEY, TRANSAK_ENV } from 'config'\n\nconst useProviders = ({ walletAddress, selectedNetwork, relayerURL, portfolio }) => {\n\n    const [isLoading, setLoading] = useState([])\n    const { addToast } = useToasts()\n    const { showModal } = useModals()\n\n    const openRampNetwork = () => {\n        const assetsList = {\n            'ethereum': 'ERC20_*,ETH_*',\n            'polygon': 'MATIC_ERC20_*,MATIC_*',\n            'avalanche': 'AVAX_*',\n            'binance-smart-chain': 'BSC_*,BSC_ERC20_*',\n            'gnosis': 'XDAI_*'\n        }\n\n        const widget = new RampInstantSDK({\n            hostAppName: 'Ambire',\n            hostLogoUrl: 'https://www.ambire.com/ambire-logo.png',\n            variant: 'auto',\n            swapAsset: assetsList[selectedNetwork],\n            userAddress: walletAddress,\n            hostApiKey: RAMP_HOST_API_KEY,\n        })\n        widget.show()\n    };\n    \n    const openPayTrie = async() => {\n        setLoading(prevState => ['PayTrie', ...prevState])\n        const rightSideLabels = {\n            ethereum: 'USDC',\n            polygon: 'USDC-P',\n            'binance-smart-chain': 'USDT-B',\n        }\n\n        const URL = url.parse(PAYTRIE_PARTNER_URL, true)\n        URL.search = null\n        URL.query = {\n            ...URL.query,\n            addr: walletAddress,\n            rightSideLabel: rightSideLabels[selectedNetwork]\n        }\n\n        popupCenter({\n            url: url.format(URL),\n            title: 'Paytrie Deposit',\n            w: 450,\n            h: 700,\n        })\n        setLoading(prevState => prevState.filter(n => n !== 'PayTrie'))\n    };\n\n    const openTransak = () => {\n        const networksAlias = {\n            'avalanche': 'avaxcchain',\n            'binance-smart-chain': 'bsc',\n            'moonbeam': 'mainnet'\n        }\n\n        const defaultCurency = {\n            'ethereum': 'USDC',\n            'polygon': 'USDC',\n            'arbitrum': 'ETH',\n            'avalanche': 'AVAX',\n            'binance-smart-chain': 'BNB',\n            'moonriver': 'MOVR',\n            'moonbeam': 'GLMR',\n            'optimism': 'USDC'\n        }\n\n        const transak = new transakSDK({\n            apiKey: TRANSAK_API_KEY,\n            environment: TRANSAK_ENV,\n            networks: networksAlias[selectedNetwork] || selectedNetwork,\n            defaultCryptoCurrency: defaultCurency[selectedNetwork],\n            disableWalletAddressForm: true,\n            walletAddress,\n            themeColor: '282b33',\n            email: '',\n            redirectURL: '',\n            hostURL: window.location.origin,\n            widgetHeight: 'calc(100% - 60px)',\n            widgetWidth: '100%',\n        })\n\n        transak.init()\n\n        transak.on(transak.ALL_EVENTS, data => {\n            console.log(data)\n        })\n\n        transak.on(transak.EVENTS.TRANSAK_ORDER_SUCCESSFUL, orderData => {\n            console.log(orderData)\n            transak.close()\n        })\n    }\n\n\n    const openKriptomat = async () => {\n        setLoading(prevState => ['Kriptomat', ...prevState])\n        const kriptomatResponse = await fetchGet(`${relayerURL}/kriptomat/${walletAddress}/${selectedNetwork}`)\n        if (kriptomatResponse.success && kriptomatResponse.data && kriptomatResponse.data.url) popupCenter({\n            url: url.format(kriptomatResponse.data.url),\n            title: 'Kriptomat Deposit',\n            w: 515,\n            h: 600\n        })\n        else addToast(`Error: ${kriptomatResponse.data ? kriptomatResponse.data : 'unexpected error'}`, { error: true })\n        setLoading(prevState => prevState.filter(n => n !== 'Kriptomat'))\n    }\n\n    const openGuardarian = () => {\n        setLoading(prevState => ['Guardarian', ...prevState])\n        showModal(<GuardarianDepositProviderModal relayerURL={relayerURL} walletAddress={walletAddress} selectedNetwork={selectedNetwork} portfolio={portfolio}/>)\n        setLoading(prevState => prevState.filter(n => n !== 'Guardarian'))\n    }\n\n\n    return {\n        openRampNetwork,\n        openPayTrie,\n        openTransak,\n        openKriptomat,\n        openGuardarian,\n        isLoading\n    }\n}\n\nexport default useProviders","\nimport RAMP_LOGO from 'resources/payment-providers/ramp.svg';\nimport PAYTRIE_LOGO from 'resources/payment-providers/paytrie.svg';\nimport TRANSAK_LOGO from 'resources/payment-providers/transak.svg';\nimport KRIPTOMAT_LOGO from 'resources/payment-providers/kriptomat.svg';\nimport GUARDARIAN_LOGO from 'resources/payment-providers/guardarian.svg'\n\nimport { Loading } from 'components/common'\nimport useProviders from './useProviders'\n\nimport styles from './Providers.module.scss'\n\nimport { ReactComponent as InfoIcon } from 'resources/icons/information.svg' \n\nexport default function Providers({ walletAddress, networkDetails, relayerURL, portfolio }) {\n    const { openRampNetwork, openPayTrie, openTransak, openKriptomat, openGuardarian, isLoading } = useProviders({ walletAddress, selectedNetwork: networkDetails.id, relayerURL, portfolio })\n    \n    const providers = [\n        {\n            logo: GUARDARIAN_LOGO,\n            name: 'Guardarian',\n            type: 'Buy with Bank Transfer, Credit/Debit Card, Sell Crypto',\n            fees: 'from 2%',\n            limits: 'up to 15k EUR/monthly on and off ramp',\n            currencies: 'GBP, EUR, USD and many more',\n            networks: ['ethereum', 'polygon', 'binance-smart-chain', 'fantom'],\n            onClick: () => openGuardarian()\n        },\n        {\n            logo: KRIPTOMAT_LOGO,\n            name: 'Kriptomat',\n            type: 'Credit Card',\n            fees: '2.45%',\n            limits: 'up to 5000 EUR/day',\n            currencies: 'USD, EUR, GBP',\n            networks: ['ethereum', 'polygon', 'avalanche', 'binance-smart-chain'],\n            onClick: () => openKriptomat()\n        },\n        {\n            logo: RAMP_LOGO,\n            name: 'Ramp',\n            type: 'Bank Transfer, Credit/Debit Card, Apple Pay',\n            fees: '0.49%-2.9%',\n            limits: '10,000EUR/m',\n            currencies: 'USD, EUR, GBP',\n            networks: ['ethereum', 'polygon', 'avalanche', 'binance-smart-chain', 'gnosis'],\n            onClick: () => openRampNetwork()\n        },\n        {\n            logo: PAYTRIE_LOGO,\n            name: 'PayTrie',\n            type: 'Bank Transfer',\n            fees: '1% (min. $2 CAD)',\n            limits: '$2,000CAD/day',\n            currencies: 'CAD',\n            networks: ['ethereum', 'polygon', 'binance-smart-chain'],\n            onClick: () => openPayTrie()\n        },\n        {\n            logo: TRANSAK_LOGO,\n            name: 'Transak',\n            type: 'Credit/Debit card and Bank Transfer (methods availability depends on location)',\n            fees: 'from 0.5%',\n            limits: 'up to 15,000 EUR/day',\n            currencies: 'GBP, EUR, USD and many more',\n            networks: ['ethereum', 'polygon', 'avalanche', 'arbitrum', 'binance-smart-chain', 'moonriver', 'moonbeam', 'optimism'],\n            onClick: () => openTransak()\n        }\n    ];\n\n    const shouldBeDisabled = (networks) => {\n        return networks.includes(networkDetails.id) ? null : 'disabled'; \n    };\n\n    return (\n        <div className={styles.wrapper}>\n            {\n                providers.map(({ logo, name, type, fees, limits, currencies, networks, onClick }) =>\n                \n                    <div className={`${styles.provider} ${shouldBeDisabled(networks) || ''}`} key={name} onClick={onClick}>\n                        <div className={styles.logo}>\n                            <img src={logo} alt={name}></img>\n                        </div>\n                        { isLoading.includes(name) ? <div> <Loading/> </div> :\n                        <div className={styles.details}>\n                            <div className={styles.type}>\n                                { type }\n                            </div>\n                            <div className={styles.fees}>\n                                Fees: { fees }\n                            </div>\n                            <div className={styles.limits}>\n                                Limits: { limits }\n                            </div>\n                            <div className={styles.currencies}>\n                                Currencies: { currencies }\n                            </div>\n                        </div>\n                        }\n                    </div>\n                )\n            }\n            {\n                networkDetails.id !== 'ethereum' ? \n                    <label className={styles.networkWarning}>\n                        <InfoIcon />\n                        <label>\n                            Some deposit methods are unavailable on {networkDetails.name}. Switch to Ethereum for the widest support.\n                        </label>\n                    </label>\n                    :\n                    null\n            }\n        </div>\n    )\n}\n","import cn from 'classnames'\nimport { useCallback, useEffect, useState } from 'react'\nimport { Panel } from 'components/common'\nimport QRCode from 'qrcode'\nimport TextInput from 'components/common/TextInput/TextInput'\nimport Providers from './Providers/Providers'\n\nimport networks from 'consts/networks'\n\nimport AssetsMigrationBanner from 'components/Wallet/AssetsMigration/AssetsMigrationBanner'\n\nimport styles from './Deposit.module.scss'\n\nexport default function Deposit({ selectedAcc, selectedNetwork, accounts, addRequest, relayerURL, portfolio, useStorage }) {\n    const networkDetails = networks.find(({ id }) => id === selectedNetwork.id)\n    const [qrCodeUrl, setQrCodeUrl] = useState('')\n\n    const generateQRCode = useCallback(() => {\n        QRCode.toDataURL(selectedAcc, {\n            quality: 1,\n            margin: 1\n        }, (error, url) => {\n            if (error) return console.error(error)\n            setQrCodeUrl(url)\n        })\n    }, [selectedAcc])\n\n    useEffect(() => generateQRCode(), [generateQRCode])\n\n    return (\n        <section className={styles.deposit}>\n            <Panel className={styles.panel}>\n                <div className={styles.heading}>\n                     <div className={styles.title}>\n                        Deposit Tokens\n                    </div>\n                    <div className={styles.subtitle}>\n                        Direct Deposit\n                    </div>\n                </div>\n                <div className={styles.description}>\n                    <TextInput \n                        className={styles.depositAddress}\n                        inputContainerClass={styles.inputClass}\n                        label={`Send ${networkDetails.nativeAssetSymbol}, tokens or collectibles (NFTs) to this address:`} \n                        value={selectedAcc} \n                        copy\n                    />\n                    <img className={styles.qrCode} alt=\"QR Code\" src={qrCodeUrl}></img>\n                </div>\n                <div className={styles.networks}>\n                    <label className={styles.networksTitle}>Following networks supported on this address:</label>\n                    <div className={styles.list}>\n                        {\n                            networks.filter(n => !n.hide).map(({ id, icon, name }) => (\n                                <div className={styles.network} key={id}>\n                                    <div className={styles.icon} style={{backgroundImage: `url(${icon})`}}></div>\n                                    <div className={styles.name}>{ id === 'binance-smart-chain' ? 'BSC' : name }</div>\n                                </div>\n                            ))\n                        }\n                    </div>\n                </div>\n                <AssetsMigrationBanner\n                    selectedNetwork={selectedNetwork}\n                    selectedAccount={selectedAcc}\n                    accounts={accounts}\n                    addRequest={addRequest}\n                    linkMargin={true}\n                    relayerURL={relayerURL}\n                    portfolio={portfolio}\n                    useStorage={useStorage}\n                />\n            </Panel>\n            <Panel className={styles.panel}>\n                <div className={styles.heading}>\n                    <div className={styles.title}>\n                        Fiat Currency\n                    </div>\n                    <div className={styles.subtitle}>\n                        Credit Card & Bank Transfer\n                    </div>\n                </div>\n                <div className={cn(styles.description, styles.margin)}>\n                    Deposit with credit card to your account directly using one of our partners\n                </div>\n                <Providers walletAddress={selectedAcc} networkDetails={networkDetails} relayerURL={relayerURL} portfolio={portfolio}/>\n            </Panel>\n        </section>\n    )\n}\n","export const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n","import { VELCRO_API_ENDPOINT, ZAPPER_API_KEY } from 'config'\nimport { fetchGet } from 'lib/fetch'\nimport {ZERO_ADDRESS} from 'consts/specialAddresses'\nimport networks from 'consts/networks'\n\nexport default function assetMigrationDetector({ networkId, account }) {\n  if (networks.find(({id}) => id === networkId)?.relayerlessOnly) return Promise.resolve([])\n  if (!account) return Promise.resolve([])// for web accounts\n\n  //First pass\n  return fetchGet(`${VELCRO_API_ENDPOINT}/protocols/tokens/balances?addresses[]=${account}&network=${networkId}&api_key=${ZAPPER_API_KEY}&newBalances=true&available_on_coingecko=true`)\n    .then(velcroResponse => {\n\n      const signer_ = account.toLowerCase()\n      if (!velcroResponse[signer_]) return []\n      if (!velcroResponse[signer_].products[0]) return []\n\n      const filteredAssets = velcroResponse[signer_].products[0].assets;\n\n      //Second pass to get real time data\n      const customTokens = filteredAssets.map(a => ({\n        address: a.tokens[0].address,\n        symbol: a.tokens[0].symbol,\n        decimals: a.tokens[0].decimals,\n      }))\n      const urlCustomTokens = `${VELCRO_API_ENDPOINT}/protocols/tokens/balances?addresses[]=${account}&network=${networkId}&api_key=${ZAPPER_API_KEY}&customTokens=${JSON.stringify(customTokens)}&available_on_coingecko=true`\n      return fetchGet(urlCustomTokens)\n        .then(finalResponse => {\n          const filteredAssets = finalResponse[signer_]?.products[0]?.assets\n\n          return filteredAssets.map(a => {\n            return {\n              name: a.tokens[0].symbol,\n              icon: a.tokens[0].tokenImageUrl,\n              address: a.tokens[0].address.toLowerCase(),\n              native: a.tokens[0].address === ZERO_ADDRESS,\n              decimals: a.tokens[0].decimals,\n              availableBalance: a.tokens[0].balanceRaw,\n              balanceUSD: a.tokens[0].balanceUSD,\n              rate: a.tokens[0].balanceUSD / a.tokens[0].balanceRaw\n            }\n          })\n        })\n        .catch(err => {\n          throw Error('Could not get customToken assets from velcro')\n        })\n    })\n    .catch(err => {\n      throw Error('Could not get assets from velcro')\n    })\n}\n","//Permit definitions\nimport { Interface } from 'ethers/lib/utils'\n\nexport const PERMIT_TYPE_2612 = [\n  { name: \"owner\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"value\", type: \"uint256\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"deadline\", type: \"uint256\" },\n]\n\nexport const PERMIT_TYPE_DAI = [\n  { name: \"holder\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"expiry\", type: \"uint256\" },\n  { name: \"allowed\", type: \"bool\" },\n]\n\nexport const EIP712DomainWithVersion = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712DomainWithoutNameNorVersion = [\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712Domain = [\n  { name: \"name\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712DomainWithSalt = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"verifyingContract\", type: \"address\" },\n  { name: \"salt\", type: \"bytes32\" },\n]\n\nexport const PERMITTABLE_COINS = {\n  1: [\n    // Without version 2\n    { address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', name: 'USD Coin', version: '2', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612 },\n\n    // Without version\n    { address: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984', name: 'Uniswap', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612 },\n    { address: '0xde30da39c46104798bb5aa3fe8b9e0e1f348163f', name: 'Gitcoin', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612 },\n\n    // Dai\n    { address: '0x6b175474e89094c44da98b954eedeac495271d0f', name: 'Dai Stablecoin', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_DAI },\n\n    // Spell Token\n    { address: '0x090185f2135308bad17527004364ebcc2d37e5f6', domainType: EIP712DomainWithoutNameNorVersion, permitType: PERMIT_TYPE_2612 },\n    // Magic Internet Money\n    { address: '0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3', domainType: EIP712DomainWithoutNameNorVersion, permitType: PERMIT_TYPE_2612 },\n\n    // With version 1\n    { address: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', name: 'Aave Token', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612 , nonceFunction: \"_nonces\"},\n    { name: 'AdEx Loyalty', address: '0xd9a4cb9dc9296e111c66dfacab8be034ee2e1c2c', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Token', address: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Ambire Wallet Staking Token', address: '0x47cd7e91c3cbaaf266369fe8518345fc4fc12935', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'ConstitutionDAO', address: '0x7a58c0be72be218b41c608b7fe7c5bb630736c71', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aragon Network Token', address: '0xa117000000f279d81a1d3cc75430faa017fa5a2e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'AdEx Staking Token', address: '0xb6456b57f03352be48bf101b46c1752a0813491a', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'dYdX', address: '0x92d6c1e31e14520e676a687f0a93788b716beff5', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Ethereum Name Service', address: '0xc18360217d8f7ab5e7c516566761ea12ce7f9d72', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Olympus', address: '0x383518188c0c6d7730d91b2c03a03c837814a899', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: '1INCH Token', address: '0x111111111117dc0aa78b770fa6a738034120c302', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'IceToken', address: '0xf16e81dce15b08f326220742020379b855b87df9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Fei USD', address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'LUSD Stablecoin', address: '0x5f98805a4e8be255a32880fdec7f6728c6568ba0', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Balancer', address: '0xba100000625a3754423978a60c9317c58a424e3d', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave interest bearing AAVE', address: '0xffc97d72e13e01096502cb8eb52dee56f74dad7b', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniBATWETH', address: '0xa1b0edf4460cc4d8bfaa18ed871bff15e5b57eb4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniWBTCWETH', address: '0xc58f53a8adff2fb4eb16ed56635772075e2ee123', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniUSDCWETH', address: '0x391e86e2c002c70dee155eaceb88f7a3c38f5976', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing WETH', address: '0x030ba81f1c18d280636f32af80b9aad02cf0854e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing DAI', address: '0x028171bca77440897b824ca71d1c56cac55b68a3', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniWBTCUSDC', address: '0x2365a4890ed8965e564b7e2d27c38ba67fec4c6f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniCRVWETH', address: '0x0ea20e7ffb006d4cfe84df2f72d8c7bd89247db0', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniUNIWETH', address: '0x3d26dcd840fcc8e4b2193ace8a092e4a65832f9f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing GUSD', address: '0xd37ee7e4f452c6638c96536e68090de8cbcdb583', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniMKRWETH', address: '0x370adc71f67f581158dc56f539df5f399128ddf9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing CRV', address: '0x8dae6cb04688c62d939ed9b68d32bc62e49970b1', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market USDT', address: '0x17a79792fe6fe5c95dfe95fe3fcee3caf4fe4cb7', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniSNXWETH', address: '0x38e491a71291cd43e8de63b7253e482622184894', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing YFI', address: '0x5165d24277cd063f5ac44efd447b27025e888f37', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing SNX', address: '0x35f6b052c598d933d69a4eec4d04c73a191fe6c2', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market USDC', address: '0xd24946147829deaa935be2ad85a3291dbf109c80', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market DAI', address: '0x79be75ffc64dd58e66787e4eae470c8a1fd08ba4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing USDT', address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing RAI', address: '0xc9bc48c72154ef3e5425641a3c747242112a46af', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing BAL', address: '0x272f97b7a56a387ae942350bbc7df5700f8a4576', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing BAT', address: '0x05ec93c0365baaeabf7aeffb0972ea7ecdd39cf1', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing USDC', address: '0xbcca60bb61934080951369a648fb03df4f96263c', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market BptBALWETH', address: '0xd109b2a304587569c84308c55465cd9ff0317bfb', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing KNC', address: '0x39c6b3e42d6a679d7d776778fe880bc9487c2eda', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing MANA', address: '0xa685a61171bb30d4072b338c80cb7b2c865c873e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing XSUSHI', address: '0xf256cc7847e919fac9b808cc216cac87ccf2f47a', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing TUSD', address: '0x101cc05f4a51c0319f570d5e146a8c625198e636', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing ENJ', address: '0xac6df26a590f08dcc95d5a4705ae8abbc88509ef', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n\n  ],\n  137: [\n    //Not working, only to test UX behavior on polygon\n    { name: 'Governance OHM', address: '0xd8ca34fd379d9ca3c6ee3b3905678320f5b45195', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Frax', address: '0x45c32fa6df82ead1e2ef74d17b76547eddfaff89', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market WBTC', address: '0x5c2ed810328349100a66b82b78a1791b101c9d61', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave Matic Market WETH', address: '0x28424507fefb6f7f8e9d3860f56504e4e5f5f390', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market USDC', address: '0x1a13f4ca1d028320a707d99520abfefca3998b7f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market AAVE', address: '0x1d2a0e5ec8e5bbdca5cb219e649b565d8e5c3360', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Synapse', address: '0xf8f9efc0db77d8881500bb06ff5d6abc3070e695', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave Matic Market WMATIC', address: '0x8df3aad3a84da6b69a4da8aec3ea40d9091b2ac4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market USDT', address: '0x60d55f02a771d515e077c9c2403a1ef324885cec', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Klima DAO', address: '0x4e78011ce80ee02d2c3e649fb657e45898257815', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Quickswap', address: '0xb5c064f955d8e7f38fe0460c556a72987494ee17', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612},\n    { name: 'Route', address: '0x16eccfdbb4ee1a85a33f3a9b21175cd7ae753db4', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612},\n\n    { address: '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063', name: '(PoS) Dai Stablecoin', version: '1', salt: '0x0000000000000000000000000000000000000000000000000000000000000089', domainType: EIP712DomainWithSalt, permitType: PERMIT_TYPE_DAI, nonceFunction: 'getNonce'},\n    { address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174', name: 'USD Coin (PoS)', version: '1', salt: '0x0000000000000000000000000000000000000000000000000000000000000089', domainType: EIP712DomainWithSalt, permitType: PERMIT_TYPE_2612 },\n  ],\n  56: [\n    { name: '1INCH Token', address: '0x111111111117dc0aa78b770fa6a738034120c302', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Frax', address: '0x90c97f71e18723b0cf0dfa30ee176ab653e89f40', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'JADE', address: '0x7ad7242a99f21aa543f9650a56d141c57e4f6081', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Templar Token', address: '0x19e6bfc1a6e4b042fb20531244d47e252445df01', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n  ]\n}\n\nexport const ERC20PermittableInterface = new Interface([\n  \"function nonces(address owner) external view returns (uint256)\",\n  \"function _nonces(address owner) external view returns (uint256)\",\n  \"function getNonce(address owner) external view returns (uint256)\",\n\n  \"function name() external view returns (string)\",\n  \"function symbol() external view returns (string)\",\n  \"function decimals() external view returns (uint)\",\n  \"function balanceOf(address) external view returns (uint)\",\n\n  //2612 permit\n  \"function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\",\n  //Dai permit\n  \"function permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\",\n  \"function transferFrom(address from, address to, uint256 amount) view returns (bool)\",\n  \"function transfer(address to, uint256 amount) view returns (bool)\",\n  \"function approve(address spender, uint256 amount) returns (bool)\",\n  \"function allowance(address owner, address spender) view returns (uint)\"\n])\n","import './AssetsMigration.scss'\n\nimport BigNumber from 'bignumber.js'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport assetMigrationDetector from 'lib/assetMigrationDetector'\nimport { ZERO_ADDRESS } from 'consts/specialAddresses'\nimport AmbireLoading from 'components/common/Loading/AmbireLoading'\nimport { Checkbox, TextInput, Button, Loading } from 'components/common'\nimport { GiToken } from 'react-icons/gi'\nimport { fetchGet } from 'lib/fetch'\nimport { MdClose, MdOutlineNavigateNext, MdOutlineAddCircleOutline, MdCancel } from 'react-icons/md'\nimport { Contract, ethers } from 'ethers'\nimport { ERC20PermittableInterface } from 'consts/permittableCoins'\nimport { getProvider } from 'lib/provider'\nimport { GAS_SPEEDS } from 'ambire-common/src/constants/gasSpeeds'\n\nconst TRANSFER_CONSUMPTION = 52000 // higher avg, 21000 included\n\nconst AssetsMigrationSelector = ({ signerAccount, identityAccount, network, setIsSelectionConfirmed, setStep, portfolio, relayerURL, setModalButtons, hideModal, setSelectedTokensWithAllowance, setGasSpeed, setStepperSteps, hidden }) => {\n\n  const [selectableTokens, setSelectableTokens] = useState([])\n  const [selectableTokensUserInputs, setSelectableTokensUserInputs] = useState([])\n\n  const [nativeToken, setNativeToken] = useState(null)\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [failedImg, setFailedImg] = useState([])\n  const [gasData, setGasData] = useState(null)\n  const [estimatedGasFees, setEstimatedGasFees] = useState(null)\n  const [selectedGasSpeed, setSelectedGasSpeed] = useState('fast')\n  const [tokensAllowances, setTokenAllowances] = useState([])\n\n  const [isAddCustomTokenFormShown, setIsAddCustomTokenFormShown] = useState(false)\n  const [isCustomTokenPending, setIsCustomTokenPending] = useState(false)\n  const [customTokenAddress, setCustomTokenAddress] = useState('')\n  const [customTokenError, setCustomTokenError] = useState('')\n\n  const customTokenInput = useRef()\n  const inputRefs = useRef({})\n\n  // update signerTokens state helper\n  const updateSelectableTokenUserInputs = useCallback((address, callback) => {\n    const index = selectableTokensUserInputs.findIndex(a => a.address === address)\n\n    if (index !== -1) {\n      const updated = callback(selectableTokensUserInputs[index])\n\n      setSelectableTokensUserInputs([\n        ...selectableTokensUserInputs.slice(0, index),\n        updated,\n        ...selectableTokensUserInputs.slice(index + 1),\n      ])\n    }\n  }, [selectableTokensUserInputs])\n\n  // Include/Exclude token in migration\n  const toggleTokenSelection = useCallback((address, minHumanAmount = null) => {\n\n    // focusing input fields on selection\n    const index = selectableTokens\n      .sort((a, b) => a.name < b.name ? -1 : 1)\n      .findIndex(t => t.address === address)\n    inputRefs.current[index]?.focus()\n\n    updateSelectableTokenUserInputs(address, old => {\n      let updated = {\n        ...old,\n        selected: !old.selected\n      }\n      if (minHumanAmount) {\n\n        // let newHumanAmount = humanAmount.replace(/\\.?0+$/g, '')\n        const currentHumanAmount = selectableTokensUserInputs.find(t => t.address === address)?.humanAmount\n        if (minHumanAmount > currentHumanAmount) {\n          const decimals = selectableTokens.find(t => t.address === address)?.decimals\n\n          updated.amount = new BigNumber(minHumanAmount).multipliedBy(10 ** decimals).toFixed(0)\n          updated.humanAmount = minHumanAmount\n        }\n      }\n      return updated\n    })\n  }, [selectableTokens, updateSelectableTokenUserInputs, selectableTokensUserInputs])\n\n  const addCustomToken = useCallback(() => {\n\n    const provider = getProvider(network.id)\n\n    if (!ethers.utils.isAddress(customTokenAddress)) {\n      setCustomTokenError('invalid custom token address')\n      return\n    }\n\n    if (selectableTokens.find(t => t.address.toLowerCase() === customTokenAddress.toLowerCase())) {\n      setCustomTokenAddress('')\n      setIsAddCustomTokenFormShown(false)\n      return\n    }\n\n    const tokenContract = new Contract(customTokenAddress, ERC20PermittableInterface, provider)\n\n    const symbolPromise = tokenContract.symbol().catch(() => setCustomTokenError('Could not get symbol of token ' + customTokenAddress))\n    const decimalsPromise = tokenContract.decimals().catch(() => setCustomTokenError('Could not get decimals of token ' + customTokenAddress))\n    const allowancePromise = tokenContract.allowance(signerAccount, identityAccount).catch(() => setCustomTokenError('Could not get allowance for token ' + customTokenAddress))\n    const availableSignerBalancePromise = tokenContract.balanceOf(signerAccount).catch(() => setCustomTokenError('Could not get balance for token ' + customTokenAddress))\n\n    setIsCustomTokenPending(true)\n    setCustomTokenError(null)\n\n    Promise.all([\n      symbolPromise,\n      decimalsPromise,\n      allowancePromise,\n      availableSignerBalancePromise]\n    ).then((promises) => {\n\n      const [symbol, decimals, allowance, signerBalance] = promises\n\n      setIsCustomTokenPending(false)\n\n      if (symbol && decimals && allowance !== null && signerBalance !== null) {\n        setCustomTokenAddress('')\n        setIsAddCustomTokenFormShown(false)\n\n        setSelectableTokens(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              name: symbol,\n              decimals: decimals.toNumber(),\n              icon: null,\n              rate: 0,\n              native: false,\n              availableBalance: signerBalance.toString(),\n              balanceUSD: 0,\n            }\n          ]\n        })\n\n        setSelectableTokensUserInputs(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              selectedAmount: 0,\n              amount: signerBalance.toString(),\n              humanAmount: new BigNumber(signerBalance.toString()).div(10 ** decimals.toString()).toFixed(),\n              selected: signerBalance.gt(0)\n            }\n          ]\n        })\n\n        setTokenAllowances(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              allowance: 0\n            }\n          ]\n        })\n      }\n    }).catch(err => {\n      console.log('err getting custom token data', err)\n      setIsCustomTokenPending(false)\n    })\n  }, [network, customTokenAddress, signerAccount, identityAccount, setCustomTokenError, selectableTokens])\n\n  const canCoverGasFees = useCallback((speed) => {\n    if (!estimatedGasFees) return false\n    const nativeToSpend = selectableTokensUserInputs.find(t => t.address === ZERO_ADDRESS && t.selected)?.amount || 0\n\n    return new BigNumber(estimatedGasFees.gasFees[speed].signerTransactionsCost)\n      .plus(nativeToSpend)\n      .lte(nativeToken.availableBalance || 0)\n\n  }, [selectableTokensUserInputs, estimatedGasFees, nativeToken])\n\n  const getMaxTransferableNative = useCallback((speed) => {\n    return new BigNumber(nativeToken.availableBalance).minus(estimatedGasFees.gasFees[speed].signerTransactionsCost)\n  }, [estimatedGasFees, nativeToken])\n\n  const consolidatedSelectableTokens = (selectableTokens, selectableTokensUserInputs = [], tokensAllowances = []) => {\n    return selectableTokens.map(st => {\n      return {\n        ...st,\n        ...selectableTokensUserInputs.find(t => t.address === st.address),\n        ...tokensAllowances.find(t => t.address === st.address)\n      }\n    })\n  }\n\n  // select tokens to migrate\n  const confirmTokenSelection = useCallback(async () => {\n\n    const tokensToMigrate = consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs, tokensAllowances).filter(a => a.selected)\n    if (!tokensToMigrate.length) return\n\n    setSelectedTokensWithAllowance(tokensToMigrate.map(a => {\n      return {\n        ...a,\n      }\n    }))\n\n    setIsSelectionConfirmed(true)\n    if (tokensToMigrate.find(a => a.address === ZERO_ADDRESS)) {\n      setStep(1)\n    } else {\n      setStep(2)\n    }\n\n    setGasSpeed(selectedGasSpeed)\n  }, [selectableTokens, selectableTokensUserInputs, tokensAllowances, setSelectedTokensWithAllowance, setIsSelectionConfirmed, setStep, setGasSpeed, selectedGasSpeed])\n\n  useEffect(() => {\n    if (isAddCustomTokenFormShown) {\n      customTokenInput.current.focus()\n    }\n  }, [isAddCustomTokenFormShown])\n\n  useEffect(() => {\n    setNativeToken(selectableTokens.find(t => t.native))\n  }, [selectableTokens])\n\n  // fetch selectable tokens\n  useEffect(() => {\n\n    setIsLoading(true)\n    setSelectableTokens([])\n\n    assetMigrationDetector({ networkId: network.id, account: signerAccount }).then(assets => {\n      setSelectableTokens(\n        assets.map(t => {\n          return {\n            ...t,\n          }\n        })\n      )\n\n      setSelectableTokensUserInputs(assets.map(t => {\n        return {\n          address: t.address,\n          selectedAmount: 0,\n          amount: t.availableBalance,\n          humanAmount: new BigNumber(t.availableBalance).div(10 ** t.decimals).toFixed(),\n          selected: false\n        }\n      }))\n\n      setIsLoading(false)\n    }).catch(err => {\n      console.error(err)\n    })\n  }, [signerAccount, setIsLoading, setSelectableTokens, network])\n\n  // check Identity gas fees\n  useEffect(() => {\n\n    if (!gasData) return\n\n    const consolidatedTokens = consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs, tokensAllowances)\n\n    const regularTransfersCount = consolidatedTokens.filter(t => t.selected && !t.native).length\n    const nativeTransfersCount = consolidatedTokens.filter(t => t.selected && t.native).length\n\n    const adjustedApprovalCost = network.id === 'arbitrum' ? 200000 : 0\n\n    const signerTransactionsConsumption = (regularTransfersCount * (25000 + TRANSFER_CONSUMPTION + adjustedApprovalCost)) + (nativeTransfersCount * 25000)\n\n    const nativeRate = gasData.gasFeeAssets.native / 10 ** 18 // should decimals be returned in the API?\n\n    const gasFees = {}\n    GAS_SPEEDS.forEach(speed => {\n      let gasPrice = (gasData.gasPrice[speed] + (gasData.gasPrice.maxPriorityFeePerGas ? gasData.gasPrice.maxPriorityFeePerGas[speed] * 1 : 0))\n\n      const signerTransactionsCost = signerTransactionsConsumption * gasPrice\n      const signerTransactionsCostUSD = signerTransactionsCost * nativeRate\n\n      gasFees[speed] = {\n        speed,\n        signerTransactionsCost,\n        signerTransactionsCostUSD,\n        signerTransactionsConsumption\n      }\n    })\n\n    setEstimatedGasFees({\n      regularTransfersCount,\n      nativeTransfersCount,\n      gasFees,\n    })\n\n  }, [selectableTokens, selectableTokensUserInputs, portfolio, gasData, selectedGasSpeed, tokensAllowances, network])\n\n\n  // getting gasPrice data from relayer\n  useEffect(() => {\n    fetchGet(`${relayerURL}/gasPrice/${network.id}`).then(gasData => {\n      setGasData(gasData.data)\n    }).catch(err => {\n      console.log('fetch error', err)\n    })\n  }, [relayerURL, network])\n\n\n  // getting erc20 token allowances\n  useEffect(() => {\n    const promises = selectableTokens.map(t => {\n      const provider = getProvider(network.id)\n      const tokenContract = new Contract(t.address, ERC20PermittableInterface, provider)\n\n      if (!t.native) {\n        return tokenContract.allowance(signerAccount, identityAccount)\n          .then((allowance) => {\n\n            return {\n              address: t.address,\n              allowance: allowance.toString(),\n            }\n          }).catch(err => {\n            console.log('err getting allowance', err)\n          })\n      }\n      return {\n        address: t.address,\n        allowance: 0,\n      }\n    })\n\n    Promise.all(promises).then(allowanceResults => {\n      setTokenAllowances(allowanceResults)\n    })\n\n  }, [identityAccount, network, selectableTokens, signerAccount])\n\n\n  useEffect(() => {\n    if (hidden) return\n    setModalButtons(\n      <>\n        <Button clear small icon={<MdClose/>} onClick={hideModal}>Close</Button>\n        {\n          (selectableTokensUserInputs.filter(a => a.selected).length > 0 && canCoverGasFees(selectedGasSpeed))\n            ? <Button small icon={<MdOutlineNavigateNext/>} className={'primary'}\n                      onClick={() => confirmTokenSelection()}>Move {selectableTokensUserInputs.filter(a => a.selected).length} assets</Button>\n            : <Button small icon={<MdOutlineNavigateNext/>} className={'primary disabled'}>Move assets</Button>\n        }\n      </>\n    )\n  }, [selectableTokensUserInputs, selectedGasSpeed, setModalButtons, hideModal, confirmTokenSelection, hidden, canCoverGasFees])\n\n  const onAssetAmountChange = useCallback((val, item) => updateSelectableTokenUserInputs(item.address, (old) => {\n    if (val === '') {\n      return {\n        ...old,\n        humanAmount: 0,\n        amount: 0\n      }\n    }\n    if (\n      (val.endsWith('.') && val.split('.').length === 2)\n      || (val.split('.').length === 2 && (val.endsWith('0') && new BigNumber(val).isEqualTo(old.humanAmount)))\n    ) {\n      return {\n        ...old,\n        humanAmount: val,\n      }\n    }\n\n    if (!isNaN(val)) {\n      let newHumanAmount = new BigNumber(val).toFixed(item.decimals)\n      if (new BigNumber(newHumanAmount).multipliedBy(10 ** item.decimals).comparedTo(item.availableBalance) === 1) {\n        newHumanAmount = new BigNumber(item.availableBalance).dividedBy(10 ** item.decimals).toFixed(item.decimals)\n      }\n      // trim trailing . or 0\n      newHumanAmount = newHumanAmount.replace(/\\.?0+$/g, '')\n\n      return {\n        ...old,\n        humanAmount: newHumanAmount,\n        amount: new BigNumber(newHumanAmount).multipliedBy(10 ** item.decimals).toFixed(0)\n      }\n    }\n    return old\n  }), [updateSelectableTokenUserInputs])\n\n  useEffect(() => {\n    setTimeout(() => {\n      inputRefs.current[0]?.focus()\n    }, 250)\n  }, [selectableTokens])\n\n  // Stepper\n  useEffect(() => {\n\n    const steps = ['Selection']\n\n    const native = selectableTokensUserInputs.find(a => a.address.toLowerCase() === ZERO_ADDRESS && a.selected)\n    if (native) {\n      steps.push(`Send ${selectableTokens.find(t => t.address === native.address).name}`)\n    }\n\n    if (selectableTokensUserInputs.find(a => a.address.toLowerCase() !== ZERO_ADDRESS && a.selected)) {\n\n      let tokensTitleActions = []\n      if (selectableTokensUserInputs.find(a => a.selected && a.address.toLowerCase() !== ZERO_ADDRESS)) tokensTitleActions.push('Send')\n\n      steps.push(tokensTitleActions.join(' and ') + ' tokens')\n\n    }\n\n    if (steps.length === 1) {\n      steps.push('Send tokens')\n    }\n\n    setStepperSteps(steps)\n  }, [selectableTokens, selectableTokensUserInputs, setStepperSteps, network])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n      {\n        isLoading\n          ?\n          <div className={'content-center'}>\n            <h3 className={'mb-6'}>Loading assets...</h3>\n            <AmbireLoading/>\n          </div>\n          :\n          <div>\n            {\n              selectableTokens.length === 0\n                ? <div>No assets to migrate have been found</div>\n                :\n                <div>\n                  <div className={'mb-4'}>Please select the assets you would like to migrate from your signer wallet to\n                    your Ambire wallet\n                  </div>\n                  {\n                    consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs)\n                      .sort((a, b) => a.name < b.name ? -1 : 1)\n                      .map((item, index) => (\n                        <div className='migration-asset-row' key={index}>\n                          <div className={`migration-asset-select${item.selected ? ' checked' : ''}`}\n                               onClick={() => false}>\n                            <Checkbox\n                              labelClassName='checkbox-label'\n                              id={`check-${item.address}`}\n                              label={<span className={'migration-asset-select-label'}>\n                                  <span className='migration-asset-select-icon'>\n                                    {\n                                      (failedImg.includes(item.icon) || !item.icon) ?\n                                        <GiToken size={18}/>\n                                        :\n                                        <img src={item.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                                          setFailedImg(failed => [...failed, item.icon])\n                                        }}/>\n                                    }\n                                </span>\n                                <span className='migration-asset-select-name'>{item.name}</span>\n                              </span>}\n                              checked={item.selected}\n                              onChange={() => toggleTokenSelection(item.address)}\n                            />\n                          </div>\n                          <div className='migration-asset-usd'>\n                            ${((item.amount) * item.rate).toFixed(2)}\n                          </div>\n                          <div className='migration-asset-amount'>\n                            <TextInput\n                              ref={(element) => inputRefs.current[index] = element}\n                              className={'migrate-amount-input'}\n                              value={item.humanAmount}\n                              onChange={(val) => onAssetAmountChange(val, item)}\n                            />\n                          </div>\n                        </div>\n                      ))\n                  }\n                  <div className={'custom-token-row mt-2'}>\n                    {\n                      isAddCustomTokenFormShown\n                        ? <div>\n                          {\n                            isCustomTokenPending\n                              ? <div className={'custom-token-message-fetching'}>\n                                <Loading/>\n                                Fetching custom token data...\n                              </div>\n                              : <>\n                                {\n                                  customTokenError && <div className={'error'}>{customTokenError}</div>\n                                }\n                                <div>\n                                  <TextInput\n                                    className={'custom-token-input'}\n                                    placeholder={'Enter custom token address'}\n                                    value={customTokenAddress}\n                                    onChange={(val) => {\n                                      setCustomTokenAddress(val)\n                                    }}\n                                    ref={customTokenInput}\n                                  />\n                                </div>\n                                <div className={'flex-row mt-2'}>\n                                  <Button small icon={<MdCancel/>} className={'buttonHollow danger align-right'}\n                                          onClick={() => {\n                                            setIsAddCustomTokenFormShown(false)\n                                            setCustomTokenAddress('')\n                                            setCustomTokenError(null)\n                                          }}>Cancel</Button>\n                                  <Button small icon={<MdOutlineAddCircleOutline/>} className={'primary ms-4'}\n                                          onClick={() => addCustomToken()}>Add</Button>\n                                </div>\n                              </>\n                          }\n                        </div>\n                        : <Button small icon={<MdOutlineAddCircleOutline/>} className={'clear align-right'}\n                                  onClick={() => setIsAddCustomTokenFormShown(true)}\n                        >Add custom token</Button>\n                    }\n                  </div>\n                  {\n                    !canCoverGasFees(selectedGasSpeed) && selectableTokensUserInputs.filter(a => a.selected).length > 0 &&\n                    <div className={'notification-hollow warning mt-3 mb-3'}>\n                      Your Signer Wallet will not have enough fees to pay for the migration.\n                      Please transfer a maximum of <span className={'max-native-suggestion'}\n                                                         onClick={() => onAssetAmountChange(new BigNumber(getMaxTransferableNative(selectedGasSpeed)).dividedBy(10 ** nativeToken.decimals).toFixed(6, BigNumber.ROUND_DOWN), nativeToken)}>\n                        {new BigNumber(getMaxTransferableNative(selectedGasSpeed)).dividedBy(10 ** nativeToken.decimals).toFixed(6, BigNumber.ROUND_DOWN)} {network.nativeAssetSymbol}\n                      </span>\n                    </div>\n                  }\n                  {\n                    estimatedGasFees &&\n                    <div className={'gas-estimation-block mt-4'}>\n                      <div className={'gas-estimation-block-title'}>Estimated gas fee</div>\n                      <ul className={'gas-estimation-selector'}>\n                        {\n                          Object.values(estimatedGasFees.gasFees).map((f, index) => {\n                              return (<li key={index} className={f.speed === selectedGasSpeed ? 'selected' : ''}\n                                          onClick={() => setSelectedGasSpeed(f.speed)}>{f.speed}</li>)\n                            }\n                          )\n                        }\n                      </ul>\n                      <table className={'gas-estimation-details'}>\n                        <tbody>\n                        <tr>\n                          <td>\n                            Signer fee\n                            {\n                              (!!estimatedGasFees.nativeTransfersCount || !!estimatedGasFees.regularTransfersCount) &&\n                              <span className={'migration-actions'}>\n                                  <span>{estimatedGasFees.nativeTransfersCount + estimatedGasFees.regularTransfersCount} transfers</span>\n                              </span>\n                            }\n                          </td>\n                          <td\n                            className={'gas-estimation-details-amount'}>${estimatedGasFees.gasFees[selectedGasSpeed].signerTransactionsCostUSD.toFixed(2)}</td>\n                        </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  }\n                </div>\n            }\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationSelector\n","import './AssetsMigration.scss'\nimport { ethers } from 'ethers'\nimport { useCallback, useEffect, useState } from 'react'\nimport { getWallet } from 'lib/getWallet'\nimport { FaCheck, FaHourglass } from 'react-icons/fa'\nimport Button from 'components/common/Button/Button'\n\nimport { GiToken } from 'react-icons/gi'\nimport { MdOutlineNavigateBefore, MdOutlineNavigateNext } from 'react-icons/md'\nimport { ZERO_ADDRESS } from 'consts/specialAddresses'\nimport { fetchGet } from 'lib/fetch'\nimport BigNumber from 'bignumber.js'\nimport { ERC20PermittableInterface } from 'consts/permittableCoins'\n\nconst AssetsMigrationPermitter = ({\n                                    addRequest,\n                                    identityAccount,\n                                    signer,\n                                    signerExtra,\n                                    network,\n                                    selectedTokensWithAllowance,\n                                    setError,\n                                    hideModal,\n                                    setStep,\n                                    setModalButtons,\n                                    relayerURL,\n                                    gasSpeed,\n                                    hidden,\n                                  }) => {\n\n  //storing user sign/send or rejection\n  const [tokensPermissions, setTokensPermissions] = useState([])\n\n  //storing transfer status for non permittable tokens\n  const [tokensTransfers, setTokensTransfers] = useState({})\n\n  //to be able to have UI feedback without trigerring useEffects\n  const [tokensPendingStatus, setTokensPendingStatus] = useState({})\n  //error display logic if a user has rejected one or more MM popup\n  const [hasRefusedOnce, setHasRefusedOnce] = useState(false)\n  const [lastRefusalError, setLastRefusalError] = useState(null)\n  const [failedImg, setFailedImg] = useState([])\n\n  const [hasCorrectAccountAndChainId, setHasCorrectAccountAndChainId] = useState(null)\n\n  const [currentGasPrice, setCurrentGasPrice] = useState(null)\n\n  const [wallet, setWallet] = useState(null)\n\n  //using a callback would return not up to date data + would trigger useEffect prompt loop while we do not want that\n  const getConsolidatedTokensPure = (selected, tokensPermissions = [], tokensTransfers = [], tokensPendingStatus = []) => {\n    return selected.filter(t => t.address !== ZERO_ADDRESS).map(t => {\n      let remapped = {\n        ...t,\n        signing: null,\n        signature: null,\n        sent: false,\n        pending: false,\n        allowance: 0,\n      }\n      if (tokensPermissions[t.address]) {\n        remapped.signing = tokensPermissions[t.address].signing\n        remapped.signature = tokensPermissions[t.address].signature\n      }\n\n      if (tokensTransfers[t.address]) {\n        remapped.sent = true\n      }\n\n      if (tokensPendingStatus[t.address]) {\n        remapped.pending = true\n      }\n\n      return remapped\n    })\n  }\n\n  const checkWalletConnection = useCallback(async () => {\n    return wallet?.isConnected(signer.address, network.chainId)\n      .then(connected => {\n        setHasCorrectAccountAndChainId(connected)\n        if (!connected) {\n          setError(<>Please make sure your signer wallet is unlocked, and connected with <b>{signer.address}</b> to the\n            correct chain: <b>{network.id}</b></>)\n          return false\n        }\n        return true\n      })\n      .catch(e => {\n        setError('Could not check signer connection status: ' + e.error)\n        return false\n      })\n  }, [network, setError, signer, wallet])\n\n  //number of tokens that are ready to migrate (sent / permitted)\n  const readyTokensCount = useCallback(() => {\n    let count = 0\n    getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, []).forEach(t => {\n      if (t.sent) {\n        count++\n      }\n    })\n    return count\n  }, [selectedTokensWithAllowance, tokensPermissions, tokensTransfers])\n\n  //Send MM prompt\n  const sendToken = useCallback(async (address, waitForRcpt = false) => {\n\n    if (!(await checkWalletConnection())) return\n\n    const tokenToMigrate = selectedTokensWithAllowance.find(t => t.address === address)\n    if (!tokenToMigrate) return\n\n    const sendData = ERC20PermittableInterface.encodeFunctionData('transfer', [identityAccount, new BigNumber(tokenToMigrate.amount).toFixed(0)])\n\n    //UI pending status\n    setTokensPendingStatus(old => {\n      old[address] = true\n      return { ...old }\n    })\n\n    setLastRefusalError(null)\n    const transferResult = wallet.sendTransaction({\n      from: signer.address,\n      to: address,\n      data: sendData,\n      gasLimit: 80000,\n      gasPrice: currentGasPrice,\n      chainId: network.chainId,\n    }).then(async rcpt => {\n\n      setTokensPermissions(old => {\n        old[address] = {\n          ...old[address],\n          signing: true,\n        }\n        return { ...old }\n      })\n\n      if (waitForRcpt) {\n        await rcpt.wait()\n        setTokensTransfers(old => {\n          old[address] = true\n          return { ...old }\n        })\n\n        setTokensPendingStatus(old => {\n          old[address] = false\n          return { ...old }\n        })\n\n        setTokensPermissions(old => {\n          old[address] = {\n            ...old[address],\n            signing: false,\n          }\n          return { ...old }\n        })\n      }\n\n      return true\n    }).catch(err => {\n      setTokensPendingStatus(old => {\n        old[address] = false\n        return { ...old }\n      })\n\n      if (err.message.includes('underpriced')) { // not copying the whole JSON error returned by the rpc\n        setLastRefusalError('Transaction fee underpriced')\n      } else {\n        setLastRefusalError(err.message)\n      }\n\n      setHasRefusedOnce(true)\n\n      if (!tokensPermissions[address] || (tokensPermissions[address] && tokensPermissions[address].signing !== false)) {\n        setTokensPermissions(old => {\n          old[address] = {\n            ...old[address],\n            signing: false,\n          }\n          return { ...old }\n        })\n      }\n      return false\n    })\n\n    return !!transferResult\n\n  }, [wallet, identityAccount, tokensPermissions, selectedTokensWithAllowance, currentGasPrice, network, signer, checkWalletConnection])\n\n  //going to assets selection\n  const cancelMigration = useCallback(() => {\n    setError(null)\n    setTokensTransfers([])\n    setTokensPermissions([])\n    setHasRefusedOnce(false)\n    setStep(0)\n  }, [setError, setTokensPermissions, setTokensTransfers, setStep])\n\n  //batch transactions\n  const completeMigration = useCallback(() => {\n    //reset assets migration status\n    cancelMigration()\n    hideModal()\n  }, [cancelMigration, hideModal])\n\n  useEffect(() => {\n    setWallet(getWallet({\n      signer: signer,\n      signerExtra: signerExtra,\n      chainId: network.chainId\n    }))\n  }, [network, signer, signerExtra])\n\n  // check correctness of signer wallet before starting the chained popups\n  useEffect(() => {\n    checkWalletConnection()\n  }, [checkWalletConnection])\n\n  useEffect(() => {\n    const url = `${relayerURL}/gasPrice/${network.id}`\n\n    fetchGet(url).then(gasData => {\n      let gasPrice = gasData.data.gasPrice[gasSpeed]\n      if (gasData.data.gasPrice.maxPriorityFeePerGas) {\n        gasPrice += gasData.data.gasPrice.maxPriorityFeePerGas[gasSpeed]\n      }\n      setCurrentGasPrice(gasPrice)\n    }).catch(err => {\n      setError(err.message + ' ' + url)\n    })\n\n  }, [network, relayerURL, setError, gasSpeed])\n\n  //Automatic permit ask chain\n  useEffect(() => {\n\n    //Skip initial useEffect\n    if (!hasCorrectAccountAndChainId) return\n    if (!Object.values(tokensTransfers).length) return\n    if (!currentGasPrice) return\n\n    const tokensWithPermission = getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, []).map(t => {\n      return {\n        address: t.address,\n        signed: t.signing,\n      }\n    })\n\n    const nextTokenToAsk = tokensWithPermission.find(a => a.signed === null)\n\n    if (nextTokenToAsk) {\n      //avoid MM popup losing focus when immediately running the next action\n      setTimeout(() => {\n        sendToken(nextTokenToAsk.address, true)\n      }, 150)\n    }\n  }, [selectedTokensWithAllowance, sendToken, tokensPermissions, tokensTransfers, hasCorrectAccountAndChainId, currentGasPrice])\n\n  useEffect(() => {\n    if (!selectedTokensWithAllowance.length) return\n    const initialTokensTransfers = {}\n    selectedTokensWithAllowance.forEach(t => {\n      initialTokensTransfers[t.address] = false\n    })\n    setTokensTransfers(initialTokensTransfers)\n  }, [selectedTokensWithAllowance, setTokensTransfers])\n\n  useEffect(() => {\n    if (hasRefusedOnce) {\n      setError('Every asset below needs to be sent to complete the migration' + (lastRefusalError ? ' (' + lastRefusalError + ')' : ''))\n    }\n  }, [hasRefusedOnce, setError, lastRefusalError])\n\n\n  //Clearing UI error if all the tokens are validated\n  useEffect(() => {\n    if (readyTokensCount() === selectedTokensWithAllowance.length) {\n      setError(null)\n    }\n  }, [readyTokensCount, selectedTokensWithAllowance, setError])\n\n  useEffect(() => {\n    if (hidden) return\n    setModalButtons(\n      <>\n        <Button\n          className={'clear'}\n          icon={<MdOutlineNavigateBefore/>}\n          onClick={() => cancelMigration()}\n        >Back</Button>\n        {\n          readyTokensCount() === getConsolidatedTokensPure(selectedTokensWithAllowance).length\n            ?\n            <Button\n              className={'primary'}\n              icon={<MdOutlineNavigateNext/>}\n              onClick={() => hideModal()}\n            >Close</Button>\n            :\n            <Button\n              className={'primary disabled'}\n              icon={<MdOutlineNavigateNext/>}\n            >Complete</Button>\n        }\n      </>\n    )\n  }, [cancelMigration, completeMigration, readyTokensCount, selectedTokensWithAllowance, setModalButtons, hidden, hideModal])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n      {\n        readyTokensCount() < getConsolidatedTokensPure(selectedTokensWithAllowance).length\n          ? <div\n            className='notification-hollow mb-3 warning'>{`${getConsolidatedTokensPure(selectedTokensWithAllowance).length - readyTokensCount()} actions left to complete the migration`}</div>\n          : <div className='notification-hollow mb-3 success'>\n            Your tokens were migrated. You can close this window\n          </div>\n      }\n      {getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, tokensPendingStatus).map((item, index) => (\n        <div className='migration-asset-row' key={index}>\n          <span className='migration-asset-select-icon migration-asset-select-icon-permit'>\n            {\n              (!item.icon || failedImg.includes(item.icon)) ?\n                <GiToken size={18}/>\n                :\n                <img src={item.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                  setFailedImg(failed => [...failed, item.icon])\n                }}/>\n            }\n          </span>\n          <div className='migration-asset-name'>\n            {item.name}\n          </div>\n          <div className='migration-asset-amount'>\n            {new BigNumber(item.amount).div(10 ** item.decimals).toFixed()} <span\n            className={'migration-asset-amount-usd'}>(${((item.amount) * item.rate).toFixed(2)})</span>\n          </div>\n          <div className='separator'>\n\n          </div>\n          <div>\n            {!((item.allowance && ethers.BigNumber.from(item.allowance).gte(item.amount)) || item.sent)\n              ?\n              <>\n                {(item.pending || item.signing)\n                  ? <div className={'migration-permitted warning'}><FaHourglass/> Sending...</div>\n                  :\n                  <Button className={'button-small secondary'}\n                          onClick={() => sendToken(item.address)}>\n                    Send\n                  </Button>\n                }\n              </>\n              :\n              <div className={'migration-permitted'} onClick={() => sendToken(item.address)}><FaCheck/> Sent\n              </div>\n            }\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default AssetsMigrationPermitter\n","import './AssetsMigration.scss'\nimport { useCallback, useEffect, useState } from 'react'\nimport { getWallet } from 'lib/getWallet'\nimport { TextInput, Button, Loading } from 'components/common'\n\nimport { GiToken } from 'react-icons/gi'\nimport BigNumber from 'bignumber.js'\nimport { fetchGet } from 'lib/fetch'\nimport { MdOutlineNavigateNext, MdClose, MdOutlineNavigateBefore } from 'react-icons/md'\n\nconst AssetsMigrationNative = ({\n  identityAccount,\n  signer,\n  signerExtra,\n  network,\n  nativeTokenData,\n  setSelectedTokensWithAllowance,\n  selectedTokensWithAllowance,\n  setError,\n  setStep,\n  hasERC20Tokens,\n  hideModal,\n  relayerURL,\n  setModalButtons,\n  setBeforeCloseModalHandler,\n  gasSpeed,\n  hidden,\n}) => {\n\n  const [failedImg, setFailedImg] = useState([])\n  const [hasMigratedNative, setHasMigratedNative] = useState(false)\n  const [isMigrationPending, setIsMigrationPending] = useState(false)\n  const [nativeAmount, setNativeAmount] = useState('0')\n  const [maxRecommendedAmount, setMaxRecommendedAmount] = useState(null)\n  const [transactionEstimationCost, setTransactionEstimationCost] = useState('0')\n  const [nativeHumanAmount, setNativeHumanAmount] = useState('0')\n\n  const [hasModifiedAmount, setHasModifiedAmount] = useState(false)\n\n  const [currentGasPrice, setCurrentGasPrice] = useState(null)\n\n  let wallet\n  try {\n    wallet = getWallet({\n      signer: signer,\n      signerExtra: signerExtra,\n      chainId: network.chainId\n    })\n  } catch (err) {\n    // in case of no window.ethereum was injected from extension\n    setError('No Web3 wallet connected. Please connect a Web3 wallet and reload the page')\n  }\n\n  //going back to assets selection\n  const cancelMigration = useCallback(() => {\n    setStep(0)\n    setSelectedTokensWithAllowance([])\n  }, [setSelectedTokensWithAllowance, setStep])\n\n  const continueMigration = useCallback(() => {\n    setStep(2)\n  }, [setStep])\n\n  const erc20TransfersCount = (selectedTokensWithAllowance) => {\n    return selectedTokensWithAllowance.filter(t => t.selected && !t.permittable && !t.native).length\n  }\n\n  //Pops MM modal to send native to Identity\n  const migrateNative = useCallback(async () => {\n    if (!wallet) return\n    setError(null)\n    setIsMigrationPending(true)\n\n    if (!hasERC20Tokens) {\n      setBeforeCloseModalHandler(null)\n    }\n\n    let hasCorrectChainAndAccount = await wallet.isConnected(signer.address, network.chainId).catch(e => {\n      setError('Could not check signer connection status: ' + e.error)\n    })\n\n    if (hasCorrectChainAndAccount) {\n      wallet.sendTransaction({\n        from: signer.address,\n        to: identityAccount,\n        gasLimit: 25000 + (network.id === 'arbitrum' ? 200000 : 0),\n        gasPrice: currentGasPrice,\n        value: '0x' + new BigNumber(nativeAmount).toString(16),\n        chainId: network.chainId\n      }).then(async rcpt => {\n        await rcpt.wait()\n        setHasMigratedNative(true)\n        setIsMigrationPending(false)\n        return true\n      }).catch(err => {\n        setHasMigratedNative(false)\n        setIsMigrationPending(false)\n\n        if (err && err.message.includes('must provide an Ethereum address')) {\n          setError(`Make sure your wallet is unlocked and connected with ${signer.address}.`)\n        } else {\n          setError('Native asset migration failed: ' + err.message)\n        }\n\n        return false\n      })\n    } else {\n      setError(<>Please make sure your signer wallet is unlocked, and connected with <b>{signer.address}</b> to the correct chain: <b>{network.id}</b></>)\n      setIsMigrationPending(false)\n    }\n  }, [wallet, setError, hasERC20Tokens, network, setBeforeCloseModalHandler, signer, identityAccount, nativeAmount, currentGasPrice])\n\n  const updateAmount = useCallback((amount) => {\n    let newHumanAmount = new BigNumber(amount).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals).replace(/\\.?0+$/g, '')\n\n    setNativeHumanAmount(newHumanAmount)\n    setNativeAmount(amount)\n    setHasModifiedAmount(true)\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    const url = `${relayerURL}/gasPrice/${network.id}`\n\n    fetchGet(url).then(gasData => {\n      let gasPrice = gasData.data.gasPrice[gasSpeed]\n      if (gasData.data.gasPrice.maxPriorityFeePerGas) {\n        gasPrice += gasData.data.gasPrice.maxPriorityFeePerGas[gasSpeed]\n      }\n      const nativeTransactionCost = gasPrice * 25000\n\n      const regularTransfersCount = erc20TransfersCount(selectedTokensWithAllowance)\n      const transfersTransactionCost = regularTransfersCount * gasPrice * (25000 + 52000)\n\n      setTransactionEstimationCost(new BigNumber((nativeTransactionCost + transfersTransactionCost).toFixed(0)).toFixed(0))\n      const recommendedBN = new BigNumber(nativeTokenData.availableBalance).minus((nativeTransactionCost + transfersTransactionCost))\n      setMaxRecommendedAmount(recommendedBN.gte(0) ? recommendedBN.toFixed(0) : 0)\n      setCurrentGasPrice(gasPrice)\n    }).catch(err => {\n      setError(err.message + ' ' + url)\n    })\n\n  }, [setTransactionEstimationCost, setMaxRecommendedAmount, nativeTokenData, network, relayerURL, setError, gasSpeed, selectedTokensWithAllowance])\n\n  const onAmountChange = useCallback((val) => {\n    setHasModifiedAmount(true)\n    if (val === '') {\n      setNativeHumanAmount(0)\n      setNativeAmount(0)\n      return\n    }\n    if (\n      (val.endsWith('.') && val.split('.').length === 2)\n      || (val.split('.').length === 2 && val.endsWith('0'))\n    ) {\n      setNativeHumanAmount(val)\n      return\n    }\n\n    if (!isNaN(val)) {\n      let newHumanAmount = new BigNumber(val).toFixed(nativeTokenData.decimals)\n      if (new BigNumber(newHumanAmount).multipliedBy(10 ** nativeTokenData.decimals).comparedTo(nativeTokenData.availableBalance) === 1) {\n        newHumanAmount = new BigNumber(nativeTokenData.availableBalance).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals)\n      }\n      //trim trailing . or 0\n      newHumanAmount = newHumanAmount.replace(/\\.?0+$/g, '')\n\n      setNativeHumanAmount(newHumanAmount)\n      setNativeAmount(new BigNumber(newHumanAmount).multipliedBy(10 ** nativeTokenData.decimals).toFixed(0))\n    }\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    const initialHumanAmount = new BigNumber(nativeTokenData.amount).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals).replace(/\\.?0+$/g, '')\n    setNativeHumanAmount(initialHumanAmount)\n    setNativeAmount(nativeTokenData.amount)\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    if (hidden) return\n    const getDisplayedButtons = () => {\n      let buttons = []\n      if (hasMigratedNative) {\n        if (hasERC20Tokens) {\n          buttons.push(<Button\n            icon={<MdOutlineNavigateNext/>}\n            className={'primary full'}\n            onClick={() => continueMigration()}\n          >Next</Button>)\n        } else {\n          buttons.push(<Button\n            icon={<MdClose/>}\n            className={'primary full'}\n            onClick={() => hideModal()}\n          >Close</Button>)\n        }\n      } else if (!wallet) { // will have to restart the process anyway as web3.ethereum is not injected (not to confuse with not unlocked)\n        buttons.push(<Button\n          icon={<MdClose/>}\n          className={'clear full'}\n          onClick={() => hideModal()}\n        >Close</Button>)\n      } else {\n        buttons.push(<Button\n          icon={<MdOutlineNavigateBefore/>}\n          className={'clear'}\n          onClick={() => cancelMigration()}\n          key='0'\n        >Back</Button>)\n\n        if (isMigrationPending) {\n          buttons.push(<Button\n            icon={<Loading/>}\n            className={'primary disabled'}\n            key='1'\n          >Moving {nativeTokenData.name}...</Button>)\n        } else {\n          buttons.push(<Button\n            icon={<MdOutlineNavigateNext/>}\n            className={'primary'}\n            onClick={() => migrateNative()}\n            key='1'\n          >Move {nativeTokenData.name}</Button>)\n        }\n      }\n      return buttons\n    }\n\n    setModalButtons(getDisplayedButtons())\n  }, [hasMigratedNative, hasERC20Tokens, setModalButtons, hideModal, isMigrationPending, cancelMigration, migrateNative, continueMigration, wallet, nativeTokenData, hidden])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n\n      {\n        wallet &&\n        <>\n          <div className={'migration-native-title mb-4'}>\n            <div className='migration-native-asset-icon'>\n              {\n                failedImg.includes(nativeTokenData.icon) ?\n                  <GiToken size={64}/>\n                  :\n                  <img src={nativeTokenData.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                    setFailedImg(failed => [...failed, nativeTokenData.icon])\n                  }}/>\n              }\n            </div>\n            <div className='migration-native-title-asset-name'>Migrate native asset <b>{nativeTokenData.name}</b></div>\n          </div>\n\n          {\n            hasMigratedNative\n              ?\n              <>\n                <div className={'small-asset-notification success'}>Migration of your {nativeTokenData.name} was\n                  successful\n                </div>\n              </>\n              :\n              <>\n                <div className={'migration-native-row'}>\n                  <span className={'migration-native-row-key'}>\n                    Current balance\n                  </span>\n                  <span className={'migration-native-selection'}\n                        onClick={() => updateAmount(nativeTokenData.availableBalance)}>\n                    {new BigNumber(nativeTokenData.availableBalance).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                  </span>\n                </div>\n\n                <div className={'migration-native-row'}>\n                  <span className={'migration-native-row-key'}>Amount to migrate</span>\n                  {\n                    (hasModifiedAmount || (maxRecommendedAmount !== null && nativeAmount > maxRecommendedAmount))\n                      ?\n                      <TextInput\n                        className={'migrate-amount-input'}\n                        value={nativeHumanAmount}\n                        onChange={onAmountChange}\n                      />\n                      :\n                      <div>{nativeHumanAmount}</div>\n                  }\n                </div>\n\n                {\n                  maxRecommendedAmount !== null && new BigNumber(nativeAmount).gt(maxRecommendedAmount) &&\n                  <div className={'notification-hollow warning mt-4'}>\n                    <div>\n                      {\n                        !!erc20TransfersCount(selectedTokensWithAllowance)\n                          ? 'Signer transactions cost'\n                          : 'Current Transaction cost'\n                      }\n                      :\n                      ~{new BigNumber(transactionEstimationCost).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                      <span\n                        className={'migration-native-usd'}> (${new BigNumber(transactionEstimationCost).multipliedBy(nativeTokenData.rate).toFixed(2)})</span>\n                    </div>\n\n                    <div className={'mt-3 mb-3'}>\n                      {\n                        maxRecommendedAmount > 0\n                          ?\n                          <>\n                            <span>You should migrate up to </span>\n                            <span className={'migration-native-selection'} onClick={() => updateAmount(maxRecommendedAmount)}>\n                              {new BigNumber(maxRecommendedAmount).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                            </span>\n                            <span> because will you need funds to pay the transaction costs.</span>\n                          </>\n                          :\n                          <span>You do not have enough funds to pay the transaction fee.</span>\n                      }\n                    </div>\n                  </div>\n                }\n\n                {\n                  (isMigrationPending && hasERC20Tokens) &&\n                  <div className={'notification-hollow info mt-4'}>\n                    Waiting for the transaction to be mined before continuing migration...\n                  </div>\n                }\n                {\n                  (isMigrationPending && !hasERC20Tokens) &&\n                  <div className={'notification-hollow info mt-4'}>\n                    The amount of {nativeTokenData.name} will be updated in your wallet, once the transaction has been\n                    confirmed and mined.\n                    If you confirmed your transaction, you can already close this window\n                  </div>\n                }\n              </>\n          }\n        </>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationNative\n","import './AssetsMigration.scss'\nimport { useEffect, useState } from 'react'\nimport AssetsMigrationSelector from './AssetsMigrationSelector'\nimport AssetsMigrationPermitter from './AssetsMigrationPermitter'\nimport AssetsMigrationNative from './AssetsMigrationNative'\nimport { PERMITTABLE_COINS } from 'consts/permittableCoins'\nimport { MdClose, MdOutlineNavigateBefore } from 'react-icons/md'\nimport { Button } from 'components/common'\n\nconst AssetsMigration = ({ addRequest, selectedAccount, accounts, network, hideModal, relayerURL, portfolio, setModalButtons, setModalSteps, setBeforeCloseModalHandler }) => {\n\n  const [selectedTokensWithAllowance, setSelectedTokensWithAllowance] = useState([])\n  const [nativeTokenData, setNativeTokenData] = useState(null)\n  const [hasERC20Tokens, setHasERC20Tokens] = useState(false)\n\n  const [isSelectionConfirmed, setIsSelectionConfirmed] = useState(false)\n  const [step, setStep] = useState(0)\n  const [stepperSteps, setStepperSteps] = useState([])\n  const [error, setError] = useState(null)\n\n  const [showCloseConfirmation, setShowCloseConfirmation] = useState(false)\n\n  const [gasSpeed, setGasSpeed] = useState(null)\n\n\n  //to get signer\n  const currentAccount = accounts.find(a => a.id === selectedAccount)\n\n  //clear error and reset tokens\n  useEffect(() => {\n    if (step === 0) {\n      setError(null)\n      setSelectedTokensWithAllowance([])\n      setNativeTokenData(null)\n      setHasERC20Tokens(false)\n      setGasSpeed(null)\n      setBeforeCloseModalHandler(null)\n    }\n  }, [network, selectedAccount, step, setBeforeCloseModalHandler])\n\n  useEffect(() => {\n    if (isSelectionConfirmed) {\n      setIsSelectionConfirmed(false)\n\n      //the non permittable, promise wait all\n      setNativeTokenData(selectedTokensWithAllowance.find(t => t.native))\n      setHasERC20Tokens(!!selectedTokensWithAllowance.find(t => !t.native))\n    }\n  }, [isSelectionConfirmed, currentAccount, selectedTokensWithAllowance, network, selectedAccount])\n\n  useEffect(() => {\n    let stepIndex = step\n\n    if (step > 0 && !nativeTokenData) {\n      stepIndex -= 1\n    }\n\n    setModalSteps({\n      steps: stepperSteps.map(s => ({ name: s })),\n      stepIndex\n    })\n  }, [nativeTokenData, setModalSteps, step, stepperSteps])\n\n  useEffect(() => {\n    const beforeCloseHandle = () => {\n      setShowCloseConfirmation(true)\n      setModalButtons([\n        (<Button\n          icon={<MdOutlineNavigateBefore/>}\n          className={'clear buttonComponent'}\n          onClick={() => setShowCloseConfirmation(false)}\n          key='0'\n        >Back</Button>),\n        (<Button\n          icon={<MdClose/>}\n          className={'danger buttonComponent'}\n          onClick={() => hideModal()}\n          key='1'\n        >Close</Button>)\n      ])\n    }\n\n    if (step > 0) {\n      setBeforeCloseModalHandler(() => beforeCloseHandle)\n    }\n  }, [step, setBeforeCloseModalHandler, setModalButtons, hideModal, showCloseConfirmation])\n\n  return (\n    <div>\n      {\n        error && <div className={'mt-3 error'}>{error}</div>\n      }\n      <div id='assets-migration'>\n        {\n          showCloseConfirmation &&\n          <div className='notification-hollow warning mt-4'>\n            By closing this window, your progress will be lost. Are you sure you want to close this window?\n          </div>\n        }\n        {\n          step === 0 && <AssetsMigrationSelector\n            hidden={showCloseConfirmation}\n            signerAccount={currentAccount.signer.address}\n            identityAccount={selectedAccount}\n            network={network}\n            PERMITTABLE_COINS={PERMITTABLE_COINS}\n            setIsSelectionConfirmed={setIsSelectionConfirmed}\n            setStep={setStep}\n            portfolio={portfolio}\n            relayerURL={relayerURL}\n            setModalButtons={setModalButtons}\n            hideModal={hideModal}\n            setError={setError}\n            setSelectedTokensWithAllowance={setSelectedTokensWithAllowance}\n            setStepperSteps={setStepperSteps}\n            setGasSpeed={setGasSpeed}\n          />\n        }\n        {step === 1 && nativeTokenData &&\n          <AssetsMigrationNative\n            hidden={showCloseConfirmation}\n            signer={currentAccount.signer}\n            identityAccount={selectedAccount}\n            network={network}\n            addRequest={addRequest}\n            signerExtra={currentAccount.signerExtra}\n            setError={setError}\n            nativeTokenData={nativeTokenData}\n            hideModal={hideModal}\n            setStep={setStep}\n            relayerURL={relayerURL}\n            hasERC20Tokens={hasERC20Tokens}\n            setModalButtons={setModalButtons}\n            setSelectedTokensWithAllowance={setSelectedTokensWithAllowance}\n            selectedTokensWithAllowance={selectedTokensWithAllowance}\n            setBeforeCloseModalHandler={setBeforeCloseModalHandler}\n            gasSpeed={gasSpeed}\n          />\n        }\n        {step === 2 &&\n          <AssetsMigrationPermitter\n            hidden={showCloseConfirmation}\n            signer={currentAccount.signer}\n            identityAccount={selectedAccount}\n            network={network}\n            addRequest={addRequest}\n            PERMITTABLE_COINS={PERMITTABLE_COINS}\n            signerExtra={currentAccount.signerExtra}\n            setError={setError}\n            selectedTokensWithAllowance={selectedTokensWithAllowance}\n            hideModal={hideModal}\n            setStep={setStep}\n            setModalButtons={setModalButtons}\n            gasSpeed={gasSpeed}\n            relayerURL={relayerURL}\n          />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AssetsMigration\n","import './AssetsMigrationModal.scss'\n\nimport { useModals } from 'hooks'\nimport { Modal, Stepper } from 'components/common'\n\nimport AssetsMigration from 'components/Wallet/AssetsMigration/AssetsMigration'\nimport { useState } from 'react'\n\nconst AssetsMigrationModal = ({ addRequest, selectedAccount, selectedNetwork, accounts, relayerURL, portfolio }) => {\n  const { hideModal, setBeforeCloseModalHandler } = useModals()\n\n  const [modalButtons, setModalButtons] = useState(null)\n  const [modalSteps, setModalSteps] = useState({ steps: [], stepIndex: 0})\n\n  const getModalTitle = () => {\n    return (<div>\n      <span>Migrate Assets</span>\n      <Stepper steps={modalSteps.steps} currentStep={modalSteps.stepIndex} noLabels={false}/>\n    </div>)\n  }\n\n  return (\n    <Modal id='asset-migration-modal' title={getModalTitle()} buttons={modalButtons} >\n      <AssetsMigration\n        addRequest={addRequest}\n        selectedAccount={selectedAccount}\n        network={selectedNetwork}\n        accounts={accounts}\n        hideModal={hideModal}\n        relayerURL={relayerURL}\n        portfolio={portfolio}\n        setModalButtons={setModalButtons}\n        setModalSteps={setModalSteps}\n        setBeforeCloseModalHandler={setBeforeCloseModalHandler}\n      />\n    </Modal>\n  )\n}\n\nexport default AssetsMigrationModal\n","import './AssetsMigration.scss'\nimport assetMigrationDetector from 'lib/assetMigrationDetector'\nimport AssetsMigrationModal from 'components/Modals/AssetsMigrationModal/AssetsMigrationModal'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useModals } from 'hooks'\nimport { FaTimes } from 'react-icons/fa'\nimport { getWallet } from 'lib/getWallet'\n\nconst AssetsMigrationBanner = ({ addRequest, selectedAccount, accounts, selectedNetwork, relayerURL, portfolio, closeable = false, linkMargin = false, useStorage }) => {\n\n  const [hasSignerAssets, setHasSignerAssets] = useState(false)\n  const [migrationMessageSeen, setMigrationMessageSeen] = useState(false)\n  const { showModal } = useModals()\n  const [migrationMessageSeenStorage, setMigrationMessageSeenStorage] = useStorage({key: 'migrationSeen', defaultValue:{}})\n\n  // in the meantime that we integrate HW wallets...\n  const currentAccount = accounts.find(a => a.id === selectedAccount)\n  let wallet\n  try {\n    wallet = getWallet({\n      signer: currentAccount.signer,\n      signerExtra: currentAccount.signerExtra,\n      chainId: selectedNetwork.chainId\n    })\n  } catch (err) {\n    // in case of no window.ethereum was injected from extension\n  }\n\n  const closeMigrationMessage = useCallback(() => {\n    setMigrationMessageSeen(true)\n    setMigrationMessageSeenStorage((old) => {\n      old[selectedAccount + selectedNetwork.id] = true\n      return old\n    })\n  }, [selectedAccount, selectedNetwork, setMigrationMessageSeenStorage])\n\n  //fetching relevant assets\n  useEffect(() => {\n    let unmounted = false\n\n    setHasSignerAssets(false)\n    const checkSignerAssets = ({ networkId, identityAccount, accounts }) => {\n      const currentAccount = accounts.find(a => a.id === identityAccount)\n      if (!currentAccount.signer) return\n\n      assetMigrationDetector({ networkId: networkId, account: currentAccount.signer.address }).then(assets => {\n        if (unmounted) return\n        const relevantAssets = assets.filter(a => a.balanceUSD > 0.001)\n        setHasSignerAssets(!!relevantAssets.length)\n      }).catch(err => {\n        console.error(err)\n      })\n    }\n\n    checkSignerAssets({ identityAccount: selectedAccount, networkId: selectedNetwork.id, accounts })\n\n    return () => unmounted = true\n  }, [selectedAccount, selectedNetwork, accounts])\n\n  //checking if closable message has been seen(closed) or not\n  useEffect(() => {\n    setMigrationMessageSeen(closeable && !!migrationMessageSeenStorage[selectedAccount + selectedNetwork.id])\n  }, [closeable, selectedAccount, selectedNetwork, migrationMessageSeenStorage])\n  \n  // We either have a provider (web3) or we use a supported HW wallet\n  const supportedHWWalletTypes = ['ledger', 'trezor', 'Lattice']\n  const shouldShow = wallet?.provider|| (currentAccount.signerExtra && supportedHWWalletTypes.includes(currentAccount.signerExtra.type))\n  if (!shouldShow) return (<></>)\n\n  return (\n    (hasSignerAssets && !migrationMessageSeen) &&\n    <div className={'migration-banner'}>\n      <div className='migration-banner-message'>\n        <div>We detected that your signer account has tokens that can be transferred to your Ambire account. We recommend doing this in order to maximize your $WALLET rewards.</div>\n        <span className={'link' + (linkMargin ? ' link-margin' : '')} onClick={() => {\n          showModal(<AssetsMigrationModal\n            addRequest={addRequest}\n            selectedNetwork={selectedNetwork}\n            selectedAccount={selectedAccount}\n            accounts={accounts}\n            relayerURL={relayerURL}\n            portfolio={portfolio}\n          />)\n        }}>Click here to migrate those tokens</span>\n      </div>\n      {\n        closeable &&\n        <div className={'migration-banner-close'}><FaTimes onClick={() => closeMigrationMessage()}/></div>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationBanner\n"],"sourceRoot":""}