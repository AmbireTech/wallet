{"version":3,"sources":["components/Wallet/Dashboard/Balances/Balances.js","components/Wallet/Dashboard/Protocols/ProtocolsPlaceholder/ProtocolsPlaceholder.js","components/Wallet/Dashboard/Protocols/Protocols.js","components/Wallet/Dashboard/Collectibles/CollectiblesPlaceholder/CollectiblesPlaceholder.js","components/Wallet/Dashboard/Collectibles/Collectibles.js","components/common/FinalCountdown/FinalCountdown.js","components/Wallet/Dashboard/Promotions/Promotions.js","components/Wallet/Dashboard/OutdatedBalancesMsg/OutdatedBalancesMsg.js","components/Wallet/Dashboard/Dashboard.js","hooks/usePasswordRecoveryCheck.js","../node_modules/tiny-warning/dist/tiny-warning.esm.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../../modules/BrowserRouter.js","../../modules/HashRouter.js","../../modules/utils/locationUtils.js","../../modules/Link.js","../../modules/NavLink.js","components/Wallet/Security/PendingRecoveryNotice/PendingRecoveryNotice.js","consts/specialAddresses.js","lib/assetMigrationDetector.js","consts/permittableCoins.js","components/Wallet/AssetsMigration/AssetsMigrationSelector.js","components/Wallet/AssetsMigration/AssetsMigrationPermitter.js","components/Wallet/AssetsMigration/AssetsMigrationNative.js","components/Wallet/AssetsMigration/AssetsMigration.js","components/Modals/AssetsMigrationModal/AssetsMigrationModal.js","components/Wallet/AssetsMigration/AssetsMigrationBanner.js"],"names":["Balances","portfolio","selectedNetwork","setNetwork","hidePrivateValue","relayerURL","selectedAccount","history","match","useHistory","networkDetails","network","networks","find","id","otherBalances","filter","total","full","otherBalancesLoading","Object","entries","balancesByNetworksLoading","ntw","urlGetBalance","useRelayerData","url","balancesRes","data","isLoading","gasTankBalances","length","map","balanceInUSD","reduce","a","b","Number","toString","toFixed","split","truncated","gasTankDetails","label","decimals","isCurrNetworkBalanceLoading","className","balance","i","onClick","style","backgroundImage","icon","name","push","size","ProtocolsPlaceholder","onClickAddToken","onClickShowToken","listHiddenTokens","useLocalStorage","key","hiddenTokensCount","to","small","mini","clear","cursor","symbol","balanceUSD","src","alt","Protocols","account","userSorting","setUserSorting","showModal","useModals","useState","failedImg","setFailedImg","isHideTokenModalOpen","setIsHideTokenModalOpen","isCurrNetworkProtocolsLoading","tokens","protocols","sortType","isMobileScreen","useCheckMobileScreen","useDragAndDrop","list","prev","items","chainId","dragStart","dragEnter","target","handle","dragTarget","drop","sortedTokens","sort","indexOf","address","decreasing","localeCompare","otherProtocols","shouldShowPlaceholder","tokenItem","index","img","send","category","sortedTokensLength","logo","includes","getTokenIcon","draggable","onDragStart","e","current","contains","preventDefault","onMouseDown","onDragEnter","onDragEnd","onDragOver","onError","failed","formatFloatTokenAmount","openAddTokenModal","useCallback","AddTokenModal","openHideTokenModal","useEffect","color","tokenImageUrl","assets","CollectiblesPlaceholder","isPrivateMode","collectiblesLength","collectionName","collectionImg","image","price","Collectibles","params","useParams","maxPages","Math","ceil","collectibles","defaultPage","useMemo","min","max","page","setPage","collectiblesList","slice","paginationControls","replace","uri","tokenId","assetName","assetImg","startsWith","endsWith","join","toTwoDigits","num","Countdown","endDateTime","timeLeft","setTimeLeft","useLayoutEffect","interval","setInterval","diff","Date","getTime","days","hours","minutes","seconds","floor","getTimeDiff","clearInterval","Promo","period","text","title","resources","togglePromo","minimized","pattern","RegExp","emojies","background","linksRes","links","anchors","href","anc","rel","elmojies","elmos","elmo","fontSize","backgroundColor","x","timer","Promotions","promo","rewardsData","rewards","defaultValue","closedPromos","setClosedPromos","promoId","prevClosed","splice","OutdatedBalancesMsg","explorerUrl","chartSegments","value","tabSegments","Dashboard","privateMode","accounts","addRequest","useStorage","showSendTxns","tabId","chartTokensData","setChartTokensData","chartProtocolsData","setChartProtocolsData","chartType","setChartType","tab","setTab","currentAccount","toLowerCase","now","cacheBreak","setCacheBreak","relayerData","setRelayerData","accountNetworkPair","setAccountNetworkPair","isPasswordRecoveryCheckLoading","setIsPasswordRecoveryCheckLoading","isRefreshingOnly","setIsRefreshingOnly","intvl","setTimeout","clearTimeout","errMsg","privileges","recoveryLock","hasPendingReset","signer","quickAccManager","status","preRecovery","abiCoder","AbiCoder","timelock","one","two","keccak256","encode","accHash","usePasswordRecoveryCheck","isBalancesCachedCurrentNetwork","cachedBalancesByNetworks","tokensData","totalProtocols","acc","curr","protocolsData","requestOtherProtocolsRefresh","AssetsMigrationBanner","closeable","PendingRecoveryNotice","segments","onChange","hidePrivateContent","warning","condition","message","_objectWithoutProperties","source","excluded","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","BrowserRouter","createHistory","_this","props","render","React","Router","this","children","Component","HashRouter","resolveToLocation","currentLocation","normalizeToLocation","createLocation","forwardRefShim","C","forwardRef","shiftKey","LinkAnchor","forwardedRef","innerRef","navigate","rest","event","ex","defaultPrevented","button","metaKey","altKey","ctrlKey","isModifiedEvent","ref","Link","component","RouterContext","Consumer","context","invariant","location","createHref","isDuplicateNavigation","createPath","createElement","NavLink","ariaCurrent","activeClassName","activeStyle","classNameProp","exact","isActiveProp","isActive","locationProp","sensitive","strict","styleProp","toLocation","path","pathname","escapedPath","matchPath","joinClassnames","classnames","isAlreadyInitiated","createRecoveryRequest","bundle","buildRecoveryBundle","primaryKeyBackup","recoveryLockStatus","remainingTime","styleClass","remaining","ZERO_ADDRESS","assetMigrationDetector","networkId","relayerlessOnly","Promise","resolve","fetchGet","VELCRO_API_ENDPOINT","ZAPPER_API_KEY","then","velcroResponse","signer_","products","customTokens","urlCustomTokens","JSON","stringify","finalResponse","native","availableBalance","balanceRaw","rate","catch","err","Error","PERMIT_TYPE_2612","type","PERMIT_TYPE_DAI","EIP712DomainWithVersion","EIP712DomainWithoutNameNorVersion","EIP712Domain","EIP712DomainWithSalt","PERMITTABLE_COINS","version","domainType","permitType","nonceFunction","salt","ERC20PermittableInterface","Interface","AssetsMigrationSelector","signerAccount","identityAccount","setIsSelectionConfirmed","setStep","setModalButtons","hideModal","setSelectedTokensWithAllowance","setGasSpeed","setStepperSteps","hidden","selectableTokens","setSelectableTokens","selectableTokensUserInputs","setSelectableTokensUserInputs","nativeToken","setNativeToken","setIsLoading","gasData","setGasData","estimatedGasFees","setEstimatedGasFees","selectedGasSpeed","setSelectedGasSpeed","tokensAllowances","setTokenAllowances","isAddCustomTokenFormShown","setIsAddCustomTokenFormShown","isCustomTokenPending","setIsCustomTokenPending","customTokenAddress","setCustomTokenAddress","customTokenError","setCustomTokenError","customTokenInput","useRef","inputRefs","updateSelectableTokenUserInputs","callback","findIndex","updated","toggleTokenSelection","minHumanAmount","t","focus","old","selected","currentHumanAmount","humanAmount","amount","BigNumber","multipliedBy","addCustomToken","provider","getProvider","ethers","utils","isAddress","tokenContract","Contract","symbolPromise","decimalsPromise","allowancePromise","allowance","availableSignerBalancePromise","balanceOf","all","promises","signerBalance","toNumber","selectedAmount","div","gt","console","log","canCoverGasFees","speed","nativeToSpend","gasFees","signerTransactionsCost","plus","lte","getMaxTransferableNative","minus","consolidatedSelectableTokens","st","confirmTokenSelection","tokensToMigrate","error","consolidatedTokens","regularTransfersCount","nativeTransfersCount","signerTransactionsConsumption","nativeRate","gasFeeAssets","GAS_SPEEDS","forEach","gasPrice","maxPriorityFeePerGas","signerTransactionsCostUSD","allowanceResults","onAssetAmountChange","val","item","isEqualTo","isNaN","newHumanAmount","comparedTo","dividedBy","steps","tokensTitleActions","AmbireLoading","checked","element","placeholder","ROUND_DOWN","nativeAssetSymbol","values","f","AssetsMigrationPermitter","signerExtra","selectedTokensWithAllowance","setError","gasSpeed","tokensPermissions","setTokensPermissions","tokensTransfers","setTokensTransfers","tokensPendingStatus","setTokensPendingStatus","hasRefusedOnce","setHasRefusedOnce","lastRefusalError","setLastRefusalError","hasCorrectAccountAndChainId","setHasCorrectAccountAndChainId","currentGasPrice","setCurrentGasPrice","wallet","setWallet","getConsolidatedTokensPure","remapped","signing","signature","sent","pending","checkWalletConnection","isConnected","connected","readyTokensCount","count","sendToken","waitForRcpt","tokenToMigrate","sendData","encodeFunctionData","transferResult","sendTransaction","from","gasLimit","rcpt","wait","cancelMigration","completeMigration","getWallet","nextTokenToAsk","signed","initialTokensTransfers","Button","gte","AssetsMigrationNative","nativeTokenData","hasERC20Tokens","setBeforeCloseModalHandler","hasMigratedNative","setHasMigratedNative","isMigrationPending","setIsMigrationPending","nativeAmount","setNativeAmount","maxRecommendedAmount","setMaxRecommendedAmount","transactionEstimationCost","setTransactionEstimationCost","nativeHumanAmount","setNativeHumanAmount","hasModifiedAmount","setHasModifiedAmount","continueMigration","erc20TransfersCount","permittable","migrateNative","updateAmount","nativeTransactionCost","transfersTransactionCost","recommendedBN","onAmountChange","initialHumanAmount","buttons","getDisplayedButtons","AssetsMigration","setModalSteps","setNativeTokenData","setHasERC20Tokens","isSelectionConfirmed","step","stepperSteps","showCloseConfirmation","setShowCloseConfirmation","stepIndex","s","beforeCloseHandle","AssetsMigrationModal","modalButtons","modalSteps","currentStep","noLabels","linkMargin","hasSignerAssets","setHasSignerAssets","migrationMessageSeen","setMigrationMessageSeen","migrationMessageSeenStorage","setMigrationMessageSeenStorage","closeMigrationMessage","unmounted","relevantAssets","checkSignerAssets"],"mappings":"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","file":"static/js/13.fb9deefc.chunk.js","sourcesContent":["import './Balances.scss'\n\nimport { Loading } from 'components/common'\nimport { useRelayerData } from 'hooks'\nimport { GiGasPump } from 'react-icons/gi'\nimport { useHistory } from 'react-router-dom'\n\nimport networks from 'consts/networks'\n\nconst Balances = ({ portfolio, selectedNetwork, setNetwork, hidePrivateValue, relayerURL, selectedAccount, match }) => {\n    const history = useHistory()\n    const networkDetails = (network) => networks.find(({ id }) => id === network)\n    const otherBalances = portfolio.otherBalances.filter(({ network, total }) => network !== selectedNetwork.id && total.full > 0)\n    const otherBalancesLoading = Object.entries(portfolio.balancesByNetworksLoading).find(ntw => ntw[0] !== selectedNetwork.id && ntw[1])\n    const urlGetBalance = relayerURL ? `${relayerURL}/gas-tank/${selectedAccount}/getBalance` : null\n    const { data: balancesRes, isLoading } = useRelayerData({ url: urlGetBalance })\n    const gasTankBalances = balancesRes && balancesRes.length && balancesRes.map(({balanceInUSD}) => balanceInUSD).reduce((a, b) => a + b, 0)    \n    const [truncated, decimals] = gasTankBalances ? Number(gasTankBalances.toString()).toFixed(2).split('.')  : [0, 0]\n    const gasTankDetails = {\n        label: 'Gas Tank',\n        total: {\n            full: gasTankBalances ? gasTankBalances : 0.00,\n            decimals,\n            truncated\n        }\n    }\n    \n    return (\n        <div id=\"balances\">\n            { portfolio.isCurrNetworkBalanceLoading && otherBalancesLoading ? <Loading /> : (\n                <>\n                { portfolio.isCurrNetworkBalanceLoading ? <Loading /> : (\n                    <div>\n                        <span className=\"green-highlight\">$</span> { hidePrivateValue(portfolio.balance.total.truncated) }\n                        <span className=\"green-highlight\">.{ hidePrivateValue(portfolio.balance.total.decimals) }</span>\n                    </div>\n                )}\n            \n                <div id=\"other-balances\">\n                    { otherBalancesLoading ? <Loading /> : (\n                        <>\n                            { otherBalances.length ? <label>You also have</label> : null }\n                            {\n                                otherBalances.filter(({ network }) => networkDetails(network)).map(({ network, total }, i) => (\n                                    <div className=\"balance-container\" key={network}>\n                                        <div className=\"other-balance\" onClick={() => setNetwork(network)}>\n                                            <label>\n                                                <span className=\"purple-highlight\">$</span> { hidePrivateValue(total.truncated) }\n                                                <span className=\"purple-highlight\">.{hidePrivateValue(total.decimals)}</span>\n                                            </label>\n                                            on\n                                            <div className=\"network\">\n                                                <div className=\"icon\" style={{backgroundImage: `url(${networkDetails(network).icon})`}}></div>\n                                                <div className=\"name\">\n                                                    { networkDetails(network).name }\n                                                </div>\n                                            </div>\n                                        </div>\n                                        { otherBalances.length - (gasTankDetails.total.full > 0.00 ? 0 : 1) !== i ? <label>and</label> : null }\n                                    </div>\n                                ))\n                            }\n                            { gasTankDetails && (gasTankDetails.total.full > 0) && !isLoading &&\n                                <div className=\"balance-container\">\n                                    <div className=\"other-balance\" onClick={() => history.push('/wallet/gas-tank')}>\n                                        <label>\n                                            <span className=\"purple-highlight\">$</span> { hidePrivateValue(gasTankDetails.total.truncated) }\n                                            <span className=\"purple-highlight\">.{ hidePrivateValue(gasTankDetails.total.decimals) }</span>\n                                        </label>\n                                        on\n                                        <div className=\"network\">\n                                            <div className='icon-svg'><GiGasPump size={20}/></div>\n                                            <div className=\"name\">\n                                                { gasTankDetails.label }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            }\n                        </>)\n                    }\n                </div>\n            </>\n            )}\n        </div>\n    )\n}\n\nexport default Balances\n","import './ProtocolsPlaceholder.scss'\n\nimport { NavLink } from 'react-router-dom'\nimport { GiReceiveMoney } from 'react-icons/gi'\nimport { Button } from 'components/common'\nimport { MdOutlineAdd } from 'react-icons/md'\nimport { useLocalStorage } from 'hooks'\n\nconst ProtocolsPlaceholder = ({ onClickAddToken, onClickShowToken }) => {\n    const tokens = [\n        {\n            icon: 'https://storage.googleapis.com/zapper-fi-assets/tokens/ethereum/0xade00c28244d5ce17d72e40330b1c318cd12b7c3.png',\n            symbol: 'ADX',\n            balance: 170027.26,\n            balanceUSD: 138880.64\n        },\n        {\n            icon: 'https://storage.googleapis.com/zapper-fi-assets/tokens/ethereum/0x0000000000000000000000000000000000000000.png',\n            symbol: 'ETH',\n            balance: 61.77,\n            balanceUSD: 283170.08\n        },\n        {\n            icon: 'https://storage.googleapis.com/zapper-fi-assets/tokens/ethereum/0x2260fac5e5542a773aa44fbcfedf7c193bc2c599.png',\n            symbol: 'WBTC',\n            balance: 0.03,\n            balanceUSD: 2227.24\n        },\n    ]\n\n    const listHiddenTokens = useLocalStorage({ key: 'hiddenTokens'})\n    let hiddenTokensCount = 0\n    \n    if (listHiddenTokens && listHiddenTokens[0] !== null) {\n        hiddenTokensCount = listHiddenTokens[0].length\n    }\n    \n    return (\n        <div id=\"protocols-placeholder\" >\n            <div className=\"placeholder-overlay\">\n                <label>\n                    Welcome! You don't have any funds on this account.\n                </label>\n                <NavLink to=\"/wallet/deposit\">\n                    <Button small icon={<GiReceiveMoney/>}>Deposit</Button>\n                </NavLink>\n                <div className=\"add-token\">\n                    <label>You have a token that's not displayed?</label>\n                    <Button mini clear icon={<MdOutlineAdd/>} onClick={onClickAddToken}>Click here to add it</Button>\n                    {hiddenTokensCount > 0 && (<label style={{ cursor: 'pointer'}} onClick={onClickShowToken}>There are also {hiddenTokensCount} hidden tokens. Click to configure</label>)}\n                </div>\n            </div>\n            <div className=\"category\">\n                <div className=\"title\">Tokens</div>\n                <div className=\"list\">\n                    {\n                        tokens.map(({ icon, symbol, balance, balanceUSD }) => (\n                            <div className=\"token\" key={symbol}>\n                                <div className=\"icon\">\n                                    <img src={icon} alt=\"Token Icon\"/>\n                                </div>\n                                <div className=\"name\">\n                                    { symbol }\n                                </div>\n                                <div className=\"separator\"></div>\n                                <div className=\"balance\">\n                                    <div className=\"currency\">\n                                        { balance } <span className=\"symbol\">{ symbol }</span>\n                                    </div>\n                                    <div className=\"dollar\">\n                                        <span className=\"symbol\">$</span> { balanceUSD }\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default ProtocolsPlaceholder","import './Protocols.scss'\n\nimport { GiToken } from 'react-icons/gi'\nimport { AiOutlineSend } from 'react-icons/ai'\nimport { NavLink } from 'react-router-dom'\nimport { Button, Loading } from 'components/common'\nimport ProtocolsPlaceholder from './ProtocolsPlaceholder/ProtocolsPlaceholder'\nimport { useCallback, useEffect, useState } from 'react'\nimport { MdOutlineAdd, MdVisibilityOff, MdDragIndicator, MdOutlineSort } from 'react-icons/md'\nimport AddTokenModal from 'components/Modals/AddTokenModal/AddTokenModal'\nimport { useModals, useDragAndDrop, useCheckMobileScreen } from 'hooks'\nimport HideTokenModel from 'components/Modals/HideTokenModal/HideTokenModal'\nimport { getTokenIcon } from 'lib/icons'\nimport { formatFloatTokenAmount } from 'lib/formatters'\nimport { ToolTip } from 'components/common'\n\nconst Protocols = ({ portfolio, network, account, hidePrivateValue, userSorting, setUserSorting }) => {\n    const { showModal } = useModals()\n\n    const [failedImg, setFailedImg] = useState([])\n    const [isHideTokenModalOpen, setIsHideTokenModalOpen] = useState(false)\n    const { isCurrNetworkBalanceLoading, isCurrNetworkProtocolsLoading, tokens, protocols } = portfolio\n\n    const sortType = userSorting.tokens?.sortType || 'decreasing'\n\n    const isMobileScreen = useCheckMobileScreen()\n\n    const onDropEnd = (list) => {        \n        setUserSorting(\n            prev => ({\n                ...prev,\n                tokens: {\n                    sortType: 'custom',\n                    items: {\n                        ...prev.tokens?.items,\n                        [`${account}-${network.chainId}`]: list\n                    }\n                }\n            })\n        )\n    }\n\n    const {\n        dragStart,\n        dragEnter,\n        target,\n        handle,\n        dragTarget,\n        drop\n    } = useDragAndDrop(\n        'address',\n        onDropEnd)\n \n    const sortedTokens = tokens.sort((a, b) => {\n        if (sortType === 'custom' && userSorting.tokens?.items?.[`${account}-${network.chainId}`]?.length) {\n            const sorted = userSorting.tokens.items[`${account}-${network.chainId}`].indexOf(a.address) - userSorting.tokens.items[`${account}-${network.chainId}`].indexOf(b.address)\n            return sorted\n        } else {\n            const decreasing = b.balanceUSD - a.balanceUSD\n            if (decreasing === 0) return a.symbol.localeCompare(b.symbol)\n            return decreasing\n        }\n    })\n\n\n    const otherProtocols = protocols.filter(({ label }) => label !== 'Tokens')\n    const shouldShowPlaceholder = (!isCurrNetworkBalanceLoading && !tokens.length) && (!isCurrNetworkProtocolsLoading && !otherProtocols.length)\n\n    const tokenItem = (index, img, symbol, balance, balanceUSD, address, send = false, network, decimals, category, sortedTokensLength) => \n        {\n            const logo = failedImg.includes(img) ? getTokenIcon(network, address) : img\n                \n            return (<div className=\"token\" key={`token-${address}-${index}`}\n             draggable={category === 'tokens' && sortedTokensLength > 1 && sortType === 'custom' && !isMobileScreen}\n             onDragStart={(e) => { \n                if (handle.current === target.current || handle.current.contains(target.current)) dragStart(e, index)\n                else e.preventDefault();\n             }}\n             onMouseDown={(e) => dragTarget(e, index)}\n             onDragEnter={(e) => dragEnter(e, index)}\n             onDragEnd={() => drop(sortedTokens)}\n             onDragOver={(e) => e.preventDefault()}\n            >\n            {sortedTokensLength > 1 && sortType === 'custom' && !isMobileScreen && <MdDragIndicator size={20} className='drag-handle' onClick={(e) => dragStart(e, index)} id={`${index}-handle`} />}\n            <div className=\"icon\">\n                { \n                    failedImg.includes(logo) ?\n                        <GiToken size={20}/>\n                        :\n                        <img src={logo} draggable=\"false\" alt=\"Token Icon\" onError={() => setFailedImg(failed => [...failed, logo])}/>\n                }\n            </div>\n            <div className=\"name\">\n                { symbol }\n            </div>\n            <div className=\"separator\"></div>\n            <div className=\"balance\">\n                <div className=\"currency\">\n                    <span className=\"value\">{ hidePrivateValue(formatFloatTokenAmount(balance, true, decimals)) }</span>\n                    <span className=\"symbol\">{ symbol }</span>\n                </div>\n                <div className=\"dollar\">\n                    <span className=\"symbol\">$</span> { hidePrivateValue(balanceUSD.toFixed(2)) }\n                </div>\n            </div>\n            {\n                send ? \n                    <div className=\"actions\">\n                        <NavLink to={`/wallet/transfer/${address}`}>\n                            <Button small icon={<AiOutlineSend/>}>Send</Button>\n                        </NavLink>\n                    </div>\n                    :\n                    null\n            }\n        </div>)}\n\n    const openAddTokenModal = useCallback(() => showModal(<AddTokenModal network={network} account={account} portfolio={portfolio} />), [account, network, portfolio, showModal])\n    const openHideTokenModal = useCallback(() => setIsHideTokenModalOpen(true), [])\n\n    useEffect(() => {\n        if(isHideTokenModalOpen) {\n            showModal(\n                <HideTokenModel \n                    portfolio={portfolio} \n                    account={account} \n                    userSorting={userSorting}\n                    sortType={sortType}\n                    network={network} \n                    setIsHideTokenModalOpen={setIsHideTokenModalOpen} \n                />\n            )\n        }\n    }, [portfolio, isHideTokenModalOpen, showModal, account, network, sortType, userSorting])\n\n    return (\n        <div id=\"protocols-table\">\n            {\n                shouldShowPlaceholder ?\n                    <ProtocolsPlaceholder onClickAddToken={openAddTokenModal} onClickShowToken={openHideTokenModal}/>\n                    :\n                    null\n            }\n            <>\n                {\n                    isCurrNetworkBalanceLoading ?\n                        <Loading/>\n                        :\n                        !shouldShowPlaceholder && sortedTokens.length ?\n                            <div className=\"category\" key=\"category-tokens\">\n                                <div className=\"title\">\n                                    <div className=\"sort-holder\">\n                                        Tokens\n                                        {sortedTokens.length > 1 && !isMobileScreen &&  (\n                                            <div className=\"sort-buttons\">\n                                                <ToolTip label='Sorted tokens by drag and drop'>\n                                                    <MdDragIndicator color={sortType === \"custom\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\" onClick={() => setUserSorting(prev => ({\n                                                        ...prev,\n                                                        tokens: {\n                                                            ...prev.tokens,\n                                                            sortType: 'custom'\n                                                        }\n                                                    }))} />\n                                                </ToolTip>\n                                                <ToolTip label='Sorted tokens by DESC balance'>\n                                                    <MdOutlineSort color={sortType === \"decreasing\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\" onClick={() => setUserSorting(prev => ({\n                                                        ...prev,\n                                                        tokens: {\n                                                            ...prev.tokens,\n                                                            sortType: 'decreasing'\n                                                        }\n                                                    }))} />\n                                                </ToolTip>\n                                            </div>\n                                        )}\n                                    </div>\n                                    <div className=\"wrapper-btns\">\n                                        <Button mini clear icon={<MdVisibilityOff/>} onClick={() => openHideTokenModal()}>Hide Token</Button>\n                                        <Button mini clear icon={<MdOutlineAdd/>} onClick={() => openAddTokenModal()}>Add Token</Button>\n                                    </div>\n                                </div>\n                                <div className=\"list\">\n                                    { \n                                        sortedTokens.map(({ address, symbol, tokenImageUrl, balance, balanceUSD, network, decimals }, i) =>\n                                            tokenItem(i, tokenImageUrl, symbol, balance, balanceUSD, address, true, network, decimals, 'tokens', sortedTokens.length))\n                                    }\n                                </div>\n                            </div>\n                        :\n                        null\n                }\n                {\n                    isCurrNetworkProtocolsLoading ?\n                        <Loading/>\n                        :\n                            otherProtocols.map(({ label, assets }, i) => (\n                                <div className=\"category\" key={`category-${i}`}>\n                                    <div className=\"title\">{ label }</div>\n                                    <div className=\"list\">\n                                        {\n                                            assets.map(({ category, symbol, tokenImageUrl, balance, balanceUSD, address }, i) => \n                                                tokenItem(i, tokenImageUrl, symbol, balance, balanceUSD, address, category !== 'claimable', 'protocols'))\n                                        }\n                                    </div>\n                                </div>\n                            ))\n                }\n            </>\n        </div>\n    )\n}\n\nexport default Protocols","import './CollectiblesPlaceholder.scss'\n\nconst CollectiblesPlaceholder = ({ isPrivateMode, collectiblesLength }) => {\n    const collectibles = [\n        {\n            collectionName: 'Party Bone',\n            collectionImg: 'https://lh3.googleusercontent.com/ZNc-hDBHOxgioSltBcDvh5hBfWEj623dETJj2nrEC0cLbjuULbo4Ign7OnLDX9qf2XaALrkXsZCRylRqPPHqQgzJOabJg4TRq3MDhA=s2500',\n            name: 'Party Bone #7865',\n            image: 'https://lh3.googleusercontent.com/uznp2aNVNPEhVk4MhLG2Zn-JC2sVaF6PsUcpF_CpyQkgekmv4hh4zbyebsoLFLvkY8PSV6D-TR5OaMp15RhG9zQsYd_AvDCo9SEVF4Q',\n            price: 32.16\n        },\n        {\n            collectionName: 'Pudgy Penguins',\n            collectionImg: 'https://lh3.googleusercontent.com/L9PJp0pOXCscKsTpD1_6zoALxdjG5gIKHLykS_Wk5J_yk590drEqRhM1ElTEZCaWeTjFj2isfxFw2tcFKcbCPlu6-Eu5bUuxsL-x=s2500',\n            name: 'Pudgy Penguin #8675',\n            image: 'https://lh3.googleusercontent.com/J6gQQRnzsMLAOhYiN9qIhogxr2MKn17zfGf6nQFKr3WCZ34thm6H0w9izvnJysxJclsyr8c3yo0hshOaLU73aS-IgTm-CooJb1cw1S0',\n            price: 5675.00\n        },\n        {\n            collectionName: 'Art Blocks Factory',\n            collectionImg: 'https://lh3.googleusercontent.com/sr7Y19-bJwsQsxX6n8Pj5tIaNKdUEotNlfhBsYw8McKpIsYARglTORaNlGhDZ2PrH-tO1vU6tFbpamiWwIImbidhVSh4aoIh4d310Og=s2500',\n            name: 'Transitions #4267',\n            image: 'https://lh3.googleusercontent.com/9MzvH_PSYMvlJE8Cfm5d308ltY5fZx-dooEcQizKgtKZ8g05RvJvd_5LAbqVHIzaoZbM-HOBgNSV8RKvEe_1thkLcQtE4NMMx8Kp5g',\n            price: 263.46\n        },\n        {\n            collectionName: 'Sad Frogs District',\n            collectionImg: 'https://lh3.googleusercontent.com/3U8N73XLrQOQPhJBAMNi7IPR1y3GGJ2zxmyUlit4IHCJURmKFPWClgatjbYfyz9drMk6-XSQTjSFqn7tKL0ZNoRbgvUu8OdLVREA=s2500',\n            name: '1882',\n            image: 'https://lh3.googleusercontent.com/3uwrfkdhHSfWm171BOjJHp3768tbLP9TeyTh2BnvgF6S1nIRI489SFq6EGjI9AISRUeyXXufEjB34Wj0bif_vl-y5h6GesEoJaaZcJg',\n            price: 1563.59\n        },\n        {\n            collectionName: 'GLUEWAVE',\n            collectionImg: 'https://lh3.googleusercontent.com/LheZMF6AyTLPpfwABwAGZqoC0gTWrDlYloDdT2VX2u_GZRZnP-ZpDC90huElm3RXE-eU1d1YluQi8G1uVdeDdysUNLZWJte4jXk3zeY=s2500',\n            name: '000105040307070704',\n            image: 'https://lh3.googleusercontent.com/eP_F_6aa_BXuKfYq1w2aiS6UW3bp4-gByFoeKLMXYuWAkU6Xiyi7mkm31aoewCZ_eG9RAuhas8jxFwXTxAWuxq1E3ZxYg97cLUUE',\n            price: 7107.27\n        }\n    ]\n\n    return (\n        <div id=\"collectibles-placeholder\">\n            <div className=\"placeholder-text\">\n                {isPrivateMode && collectiblesLength ? 'You can\\'t see collectibles in private mode' : 'You don\\'t have any collectibles (NFTs) yet' }\n            </div>\n            <div className=\"placeholder-overlay\"></div>\n            <div id=\"collectibles\">\n                <div className='collectibles-wrapper'>\n                    {\n                        collectibles.map(({ collectionName, collectionImg, name, image, price}) => (\n                            <div className=\"collectible\" key={name}>\n                                <div className=\"artwork\" style={{backgroundImage: `url(${image})`}}/>\n                                <div className=\"info\">\n                                    <div className=\"collection\">\n                                        <div className=\"collection-icon\" style={{backgroundImage: `url(${collectionImg})`}}></div>\n                                        { collectionName }\n                                    </div>\n                                    <div className=\"details\">\n                                        <div className=\"name\">{ name }</div>\n                                        <div className=\"value\"><span className=\"purple-highlight\">$</span> { price }</div>\n                                    </div>\n                                </div>\n                            </div>\n                        ))\n                    }\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default CollectiblesPlaceholder","import './Collectibles.scss'\n\nimport { NavLink } from 'react-router-dom'\nimport CollectiblesPlaceholder from './CollectiblesPlaceholder/CollectiblesPlaceholder'\nimport { Loading } from 'components/common'\nimport { useMemo, useState, useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom/cjs/react-router-dom.min'\nimport { Button } from 'components/common'\nimport { HiOutlineChevronLeft, HiOutlineChevronRight } from 'react-icons/hi'\n\nconst Collectibles = ({ portfolio, isPrivateMode }) => {\n    const params = useParams()\n    const history = useHistory()\n    const maxCollectiblesPerPage = 15\n    const maxPages = Math.ceil(portfolio.collectibles.length / maxCollectiblesPerPage)\n    const defaultPage = useMemo(() => Math.min(Math.max(Number(params.page), 1), maxPages) || 1, [params.page, maxPages])\n    const [page, setPage] = useState(defaultPage)\n    const collectiblesList = portfolio.collectibles.slice((page - 1) * maxCollectiblesPerPage, page * maxCollectiblesPerPage)\n\n    const paginationControls = (\n        <div className='pagination-controls'>\n          <div className='pagination-title'>Page</div>\n          <Button clear mini onClick={() => page > 1 && setPage(page => page - 1)}><HiOutlineChevronLeft/></Button>\n          <div className='pagination-current'>{ page } <span>/ { maxPages }</span></div>\n          <Button clear mini onClick={() => page < maxPages && setPage(page => page + 1)}><HiOutlineChevronRight/></Button>\n        </div>\n    )\n    \n    useEffect(() => history.replace(`/wallet/dashboard/collectibles/${page}`), [page, history])\n    useEffect(() => setPage(defaultPage), [defaultPage])\n    \n    const handleUri = uri => {\n        if (!uri) return ''\n        uri = uri.startsWith('data:application/json') ? uri.replace('data:application/json;utf8,', '') : uri\n\n        if (uri.split('/')[0] === 'data:image') return uri\n        if (uri.startsWith('ipfs://')) return uri.replace(/ipfs:\\/\\/ipfs\\/|ipfs:\\/\\//g, 'https://ipfs.io/ipfs/')\n        if (uri.split('/')[2].endsWith('mypinata.cloud')) return 'https://ipfs.io/ipfs/' + uri.split('/').slice(4).join('/')\n        \n        return uri\n    }\n\n    if (portfolio.isCurrNetworkProtocolsLoading) return <Loading />;\n\n    if (!portfolio.collectibles.length || isPrivateMode) {\n        return (\n            <CollectiblesPlaceholder\n                isPrivateMode={isPrivateMode}\n                collectiblesLength={portfolio.collectibles.length}\n            />\n        );\n    }\n\n    return (\n        <div id=\"collectibles\">\n            <div className='collectibles-wrapper'>\n                {\n                    collectiblesList.map(({ network, address, collectionName, collectionImg, assets }) => (assets || []).map(({ tokenId, assetName, assetImg, balanceUSD }) => (\n                        <div className=\"collectible\" key={tokenId}>\n                            <NavLink to={`/wallet/nft/${network}/${address}/${tokenId}`}>\n                                <div className=\"artwork\" style={{backgroundImage: `url(${handleUri(assetImg)})`}}/>\n                                <div className=\"info\">\n                                    <div className=\"collection\">\n                                        <div className=\"collection-icon\" style={{backgroundImage: `url(${collectionImg})`}}></div>\n                                        <span className=\"collection-name\">{ collectionName }</span>\n                                    </div>\n                                    <div className=\"details\">\n                                        <div className=\"name\">{ assetName }</div>\n                                        <div className=\"value\"><span className=\"purple-highlight\">$</span> {balanceUSD.toFixed(2) }</div>\n                                    </div>\n                                </div>\n                            </NavLink>\n                        </div>\n                    )))\n                }\n            </div>    \n            {paginationControls}\n        </div>        \n    )\n}\n\nexport default Collectibles","import './FinalCountdown.scss'\nimport { useLayoutEffect, useState } from 'react'\nimport { RiTimerFlashLine } from 'react-icons/ri'\n\nfunction toTwoDigits(num) {\n    if (num < 10) return `0${num}`\n    return `${num}`\n}\n\nfunction getTimeDiff(diff) {\n    if (diff < 0) {\n        return {\n            days: '00',\n            hours: '00',\n            minutes: '00',\n            seconds: '00'\n        }\n    }\n\n    return {\n        days: toTwoDigits(Math.floor(diff / (1000 * 60 * 60 * 24))),\n        hours: toTwoDigits(Math.floor((diff / (1000 * 60 * 60)) % 24)),\n        minutes: toTwoDigits(Math.floor((diff / 1000 / 60) % 60)),\n        seconds: toTwoDigits(Math.floor((diff / 1000) % 60)),\n    }\n}\n\nexport default function Countdown({ endDateTime, label }) {\n\n    const [timeLeft, setTimeLeft] = useState(null)\n\n    useLayoutEffect(() => {\n        if (endDateTime) {\n\n            let interval = setInterval(\n                () => {\n                    const diff = new Date(endDateTime).getTime() - new Date().getTime()\n                    setTimeLeft(getTimeDiff(diff))\n                    if (diff < 0) {\n                        clearInterval(interval)\n                        interval = null\n                    }\n                },\n                1000\n            )\n            return () => {\n                clearInterval(interval)\n                interval = null\n            }\n        } else {\n            setTimeLeft(null)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [endDateTime])\n\n    if (!timeLeft) return null\n\n    return (\n        <div>\n            {label && <span>{label}</span>}\n            <div className='final-countdown'>\n                <RiTimerFlashLine className='timer-icon' />\n                <div className='unit-box'>\n                    <div className='value'>\n                        {timeLeft.days}\n                    </div>\n                    <div className='unit'>\n                        days\n                    </div>\n                </div>\n                <div className='value'>:</div>\n                <div className='unit-box'>\n                    <div className='value'>\n                        {timeLeft.hours}\n                    </div>\n                    <div className='unit'>\n                        hours\n                    </div>\n                </div>\n                <div className='value'>:</div>\n                <div className='unit-box'>\n                    <div className='value'>\n                        {timeLeft.minutes}\n                    </div>\n                    <div className='unit'>\n                        minutes\n                    </div>\n                </div>\n                <div className='value'>:</div>\n                <div className='unit-box'>\n                    <div className='value'>\n                        {timeLeft.seconds}\n                    </div>\n                    <div className='unit'>\n                        seconds\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import './Promotions.scss'\nimport { useCallback } from 'react'\nimport FinalCountdown from 'components/common/FinalCountdown/FinalCountdown'\nimport useLocalStorage from \"hooks/useLocalStorage\"\nimport { AiOutlineRight } from 'react-icons/ai'\nimport { MdOutlineMarkEmailUnread } from 'react-icons/md'\n\nfunction Promo({\n    id,\n    period,\n    text,\n    title,\n    resources = {},\n    togglePromo,\n    minimized\n} = {}) {\n\n    if (!text) return null\n\n    const pattern = new RegExp(/\\${{(\\w+)}}/, 'gi')\n    const split = text.split(pattern)\n    const { emojies, color, background, ...linksRes } = resources\n\n    const links = Object.entries(linksRes).reduce((anchors, [key, { label, href } = {}]) => {\n        const anc =\n            <a\n                key={key}\n                className=\"link\"\n                href={href}\n                target=\"_blank\"\n                rel=\"noreferrer noopener\">\n                {label}\n            </a>\n\n        anchors[key] = anc\n        return anchors\n    }, {})\n\n    const elmojies = Object.entries({ ...emojies }).reduce((elmos, [key, { text, size } = {}]) => {\n        const elmo = <span key={key} className='emoji' style={{ fontSize: size }}>\n            {text}\n        </span >\n\n        elmos[key] = elmo\n        return elmos\n    }, {})\n\n    return (\n        <div className={`notice ${minimized ? 'minimized' : ''}`} style={{\n            ...(background ? { backgroundColor: background } : {}),\n            ...(color ? { color } : {})\n        }}>\n            {!minimized && <div>\n                {title &&\n                    <div className='title'>\n                        {title}\n                    </div>\n                }\n                <div>\n                    {split.map(x => links[x] || elmojies[x] || x)}\n                </div>\n                {\n                    period?.to && period?.timer &&\n                    <div className='timer'>\n                        <FinalCountdown endDateTime={period.to} />\n                    </div>\n                }\n            </div>\n            }\n            {\n                !!id\n                    ? minimized\n                        ? <MdOutlineMarkEmailUnread className='close-btn' onClick={() => togglePromo(id)} />\n                        : <div><AiOutlineRight className='close-btn' onClick={() => togglePromo(id)} /></div>\n                    : null\n\n            }\n        </div>\n    )\n}\n\nexport default function Promotions({ rewardsData: { rewards: { promo }} }) {\n    const [closedPromos, setClosedPromos] = useLocalStorage({ key: 'closedPromos', defaultValue: [] })\n\n    const togglePromo = useCallback(promoId => {\n        const prevClosed = [...closedPromos]\n        const index = prevClosed.indexOf(promoId)\n\n        if (index > -1) {\n            prevClosed.splice(index, 1)\n        } else {\n            prevClosed.push(promoId)\n        }\n\n        setClosedPromos(prevClosed)\n    }, [closedPromos, setClosedPromos])\n\n    if (!promo) return null\n\n    return (\n        <Promo {...promo} togglePromo={togglePromo} minimized={closedPromos.includes(promo.id)} />\n    )\n}","const OutdatedBalancesMsg = ({ selectedAccount, selectedNetwork }) => {\n    return (\n        <div className=\"notification-hollow warning\">\n            <h4>Dashboard balances could appear incomplete or outdated.</h4>\n            <p>\n            We are currently experiencing technical difficulties with our third party services, so what you see on the dashboard may be incomplete or outdated. You can check <a href={selectedNetwork.explorerUrl+'/address/'+ selectedAccount} target='_blank' rel='noreferrer'>{selectedNetwork.explorerUrl.split('/')[2]}</a> to see your current balances. However, you can use Ambire normally with any connected dApp.\n            </p>\n        </div>\n    )\n}\n\nexport default OutdatedBalancesMsg","import './Dashboard.scss'\n\nimport { useEffect, useLayoutEffect, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport { Chart, Loading, Segments } from 'components/common'\nimport Balances from './Balances/Balances'\nimport Protocols from './Protocols/Protocols'\nimport Collectibles from './Collectibles/Collectibles'\nimport { MdOutlineInfo } from 'react-icons/md'\n\nimport Promotions from './Promotions/Promotions'\nimport AssetsMigrationBanner from 'components/Wallet/AssetsMigration/AssetsMigrationBanner'\nimport PendingRecoveryNotice from 'components/Wallet/Security/PendingRecoveryNotice/PendingRecoveryNotice'\nimport usePasswordRecoveryCheck from 'hooks/usePasswordRecoveryCheck'\nimport OutdatedBalancesMsg from './OutdatedBalancesMsg/OutdatedBalancesMsg'\n\nconst chartSegments = [\n    {\n        value: 'Tokens'\n    },\n    {\n        value: 'Protocols'\n    }\n]\n\nconst tabSegments = [\n    {\n        value: 'tokens'\n    },\n    {\n        value: 'collectibles'\n    }\n]\n\n\nexport default function Dashboard({ portfolio, selectedNetwork, selectedAccount, setNetwork, privateMode, rewardsData,  userSorting, setUserSorting, accounts, addRequest, relayerURL, useStorage, match, showSendTxns }) {\n    const history = useHistory()\n    const { tabId, page = 1 } = useParams()\n\n    const [chartTokensData, setChartTokensData] = useState([]);\n    const [chartProtocolsData, setChartProtocolsData] = useState([]);\n    const [chartType, setChartType] = useState([]);\n    const [tab, setTab] = useState(tabId || tabSegments[0].value);\n\n    const currentAccount = accounts.find(a => a.id.toLowerCase() === selectedAccount.toLowerCase())\n\n    const { hasPendingReset, recoveryLock, isPasswordRecoveryCheckLoading } = usePasswordRecoveryCheck(relayerURL, currentAccount, selectedNetwork)\n    const isBalancesCachedCurrentNetwork = portfolio.cachedBalancesByNetworks.length ? \n        portfolio.cachedBalancesByNetworks.find(({network}) => network === selectedNetwork.id) : false\n\n    useEffect(() => {\n        if (!tab || tab === tabSegments[0].value) return history.replace(`/wallet/dashboard`)\n        history.replace(`/wallet/dashboard/${tab}${tab === tabSegments[1].value ? `/${page}` : ''}`)\n    }, [tab, history, page])\n\n    useLayoutEffect(() => {\n        const tokensData = portfolio.tokens\n            .map(({ label, symbol, balanceUSD }) => ({\n                label: label || symbol,\n                value: Number(((balanceUSD / portfolio.balance.total.full) * 100).toFixed(2))\n            }))\n            .filter(({ value }) => value > 0);\n\n        const totalProtocols = portfolio.protocols.map(({ assets }) =>\n            assets\n                .map(({ balanceUSD }) => balanceUSD)\n                .reduce((acc, curr) => acc + curr, 0))\n            .reduce((acc, curr) => acc + curr, 0)\n\n        const protocolsData = portfolio.protocols\n            .map(({ label, assets }) => ({\n                label,\n                value: Number(((assets.map(({ balanceUSD }) => balanceUSD).reduce((acc, curr) => acc + curr, 0) / totalProtocols) * 100).toFixed(2))\n            }))\n            .filter(({ value }) => value > 0)\n\n        setChartTokensData(tokensData);\n        setChartProtocolsData(protocolsData)\n    }, [portfolio.balance, portfolio.tokens, portfolio.protocols]);\n\n    useEffect(() => portfolio.requestOtherProtocolsRefresh(), [portfolio])\n\n    return (\n        <section id=\"dashboard\">\n            { isBalancesCachedCurrentNetwork && (\n                <OutdatedBalancesMsg \n                    selectedNetwork={selectedNetwork}\n                    selectedAccount={selectedAccount} \n                />)\n            }\n            <Promotions rewardsData={rewardsData} />\n            {\n              <AssetsMigrationBanner\n                selectedNetwork={selectedNetwork}\n                selectedAccount={selectedAccount}\n                accounts={accounts}\n                addRequest={addRequest}\n                closeable={true}\n                relayerURL={relayerURL}\n                portfolio={portfolio}\n                useStorage={useStorage}\n              />\n            }\n            {\n              (hasPendingReset && !isPasswordRecoveryCheckLoading) && (\n                <PendingRecoveryNotice\n                  recoveryLock={recoveryLock}\n                  showSendTxns={showSendTxns}\n                  selectedAccount={currentAccount}\n                  selectedNetwork={selectedNetwork}\n                />\n              )\n            }\n            <div id=\"overview\">\n                <div id=\"balance\" className=\"panel\">\n                    <div className=\"title\">Balance</div>\n                    <div className=\"content\">\n                        <Balances\n                            portfolio={portfolio}\n                            selectedNetwork={selectedNetwork}\n                            setNetwork={setNetwork}\n                            hidePrivateValue={privateMode.hidePrivateValue}\n                            relayerURL={relayerURL}\n                            selectedAccount={selectedAccount}\n                            match={match}\n                        />\n                    </div>\n                </div>\n                <div id=\"chart\" className=\"panel\">\n                    <div className=\"title\">\n                        Balance by\n                        <Segments small defaultValue={chartSegments[0].value} segments={chartSegments} onChange={setChartType}/>\n                    </div>\n                    <div className=\"content\">\n                        {\n                            chartType === chartSegments[0].value ?\n                                portfolio.isCurrNetworkBalanceLoading ?\n                                    <Loading/>\n                                    :\n                                    privateMode.hidePrivateContent(<Chart data={chartTokensData} size={200}/>)\n                                :\n                                portfolio.isCurrNetworkProtocolsLoading ?\n                                    <Loading/>\n                                    :\n                                    privateMode.hidePrivateContent(<Chart data={chartProtocolsData} size={200}/>)\n                        }\n                    </div>\n                </div>\n            </div>\n            <div id=\"table\" className=\"panel\">\n                <div className=\"title\">\n                    Assets\n                    <Segments small defaultValue={tab} segments={tabSegments} onChange={setTab}></Segments>\n                </div>\n                <div className=\"content\">\n                    {\n                        tab === tabSegments[0].value ?\n                            <Protocols\n                                portfolio={portfolio}\n                                network={selectedNetwork}\n                                account={selectedAccount}\n                                hidePrivateValue={privateMode.hidePrivateValue}\n                                userSorting={userSorting}\n                                setUserSorting={setUserSorting}\n                            />\n                            :\n                            <Collectibles portfolio={portfolio} isPrivateMode={privateMode.isPrivateMode} />\n                    }\n                </div>\n                <div className=\"footer\">\n                    <div id=\"missing-token-notice\">\n                        <MdOutlineInfo/>\n                        <span>\n                            If you don't see a specific token that you own, please check the <a href={`${selectedNetwork.explorerUrl}/address/${selectedAccount}`} target=\"_blank\" rel=\"noreferrer\">Block Explorer</a>\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </section>\n    )\n}\n","import { useEffect, useState } from 'react'\nimport { useRelayerData } from 'hooks'\nimport { AbiCoder, keccak256 } from 'ethers/lib/utils'\n\nconst REFRESH_INTVL = 30 * 1000\n\nexport default function usePasswordRecoveryCheck(relayerURL, currentAccount, selectedNetwork) {\n\n  const [cacheBreak, setCacheBreak] = useState(() => Date.now())\n  const [relayerData, setRelayerData] = useState(null)\n\n  // for UX, avoiding banner flickering when refreshing same acc and network\n  const [accountNetworkPair, setAccountNetworkPair] = useState(null)\n  const [isPasswordRecoveryCheckLoading, setIsPasswordRecoveryCheckLoading] = useState(null)\n  const [isRefreshingOnly, setIsRefreshingOnly] = useState(null)\n\n  useEffect(() => {\n    if (Date.now() - cacheBreak > REFRESH_INTVL) setCacheBreak(Date.now())\n    const intvl = setTimeout(() => setCacheBreak(Date.now()), REFRESH_INTVL)\n    return () => clearTimeout(intvl)\n  }, [cacheBreak, currentAccount, selectedNetwork])\n\n  const url = relayerURL\n    ? `${relayerURL}/identity/${currentAccount.id}/${selectedNetwork.id}/privileges?cacheBreak=${cacheBreak}`\n    : null\n\n  const { data, errMsg, isLoading } = useRelayerData({ url })\n\n  useEffect(() => {\n\n    const privileges = data ? data.privileges : {}\n    const recoveryLock = data && data.recoveryLock\n\n    const accHash = signer => {\n      const abiCoder = new AbiCoder()\n      const { timelock, one, two } = signer\n      return keccak256(abiCoder.encode(['tuple(uint, address, address)'], [[timelock, one, two]]))\n    }\n    const hasPendingReset = privileges[currentAccount.signer.quickAccManager] && (\n      (recoveryLock && recoveryLock.status && !isLoading)\n      || (\n        privileges && currentAccount.signer.quickAccManager\n        // is or has been in recovery state\n        && currentAccount.signer.preRecovery\n        // but that's not finalized yet\n        && accHash(currentAccount.signer) !== privileges[currentAccount.signer.quickAccManager]\n      )\n    )\n\n    setRelayerData({\n      hasPendingReset,\n      errMsg,\n      recoveryLock\n    })\n\n    // Avoid flickering when refreshing only...\n    // when data is loaded\n    if (!isLoading) {\n      // if same account and network\n      if (accountNetworkPair === currentAccount?.id + selectedNetwork.id) {\n        // refresh mode only ON\n        setIsRefreshingOnly(true)\n        setIsPasswordRecoveryCheckLoading(false)\n        // else if an account or network change occurred\n      } else {\n        setAccountNetworkPair(currentAccount?.id + selectedNetwork.id)\n        // refresh mode only OFF, until isLoading is again true\n        setIsRefreshingOnly(false)\n      }\n    } else {\n      if (isRefreshingOnly) {\n        setIsPasswordRecoveryCheckLoading(false)\n      } else {\n        setIsPasswordRecoveryCheckLoading(isLoading)\n      }\n    }\n\n  }, [data, errMsg, isLoading, currentAccount, accountNetworkPair, selectedNetwork.id, isRefreshingOnly])\n\n  return {\n    data,\n    isPasswordRecoveryCheckLoading,\n    ...relayerData\n  }\n}\n","var isProduction = process.env.NODE_ENV === 'production';\nfunction warning(condition, message) {\n  if (!isProduction) {\n    if (condition) {\n      return;\n    }\n\n    var text = \"Warning: \" + message;\n\n    if (typeof console !== 'undefined') {\n      console.warn(text);\n    }\n\n    try {\n      throw Error(text);\n    } catch (x) {}\n  }\n}\n\nexport default warning;\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createBrowserHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses HTML5 history.\n */\nclass BrowserRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  BrowserRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    forceRefresh: PropTypes.bool,\n    getUserConfirmation: PropTypes.func,\n    keyLength: PropTypes.number\n  };\n\n  BrowserRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<BrowserRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { BrowserRouter as Router }`.\"\n    );\n  };\n}\n\nexport default BrowserRouter;\n","import React from \"react\";\nimport { Router } from \"react-router\";\nimport { createHashHistory as createHistory } from \"history\";\nimport PropTypes from \"prop-types\";\nimport warning from \"tiny-warning\";\n\n/**\n * The public API for a <Router> that uses window.location.hash.\n */\nclass HashRouter extends React.Component {\n  history = createHistory(this.props);\n\n  render() {\n    return <Router history={this.history} children={this.props.children} />;\n  }\n}\n\nif (__DEV__) {\n  HashRouter.propTypes = {\n    basename: PropTypes.string,\n    children: PropTypes.node,\n    getUserConfirmation: PropTypes.func,\n    hashType: PropTypes.oneOf([\"hashbang\", \"noslash\", \"slash\"])\n  };\n\n  HashRouter.prototype.componentDidMount = function() {\n    warning(\n      !this.props.history,\n      \"<HashRouter> ignores the history prop. To use a custom history, \" +\n        \"use `import { Router }` instead of `import { HashRouter as Router }`.\"\n    );\n  };\n}\n\nexport default HashRouter;\n","import { createLocation } from \"history\";\n\nexport const resolveToLocation = (to, currentLocation) =>\n  typeof to === \"function\" ? to(currentLocation) : to;\n\nexport const normalizeToLocation = (to, currentLocation) => {\n  return typeof to === \"string\"\n    ? createLocation(to, null, null, currentLocation)\n    : to;\n};\n","import React from \"react\";\nimport { __RouterContext as RouterContext } from \"react-router\";\nimport { createPath } from 'history';\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nconst LinkAnchor = forwardRef(\n  (\n    {\n      innerRef, // TODO: deprecate\n      navigate,\n      onClick,\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    const { target } = rest;\n\n    let props = {\n      ...rest,\n      onClick: event => {\n        try {\n          if (onClick) onClick(event);\n        } catch (ex) {\n          event.preventDefault();\n          throw ex;\n        }\n\n        if (\n          !event.defaultPrevented && // onClick prevented default\n          event.button === 0 && // ignore everything but left clicks\n          (!target || target === \"_self\") && // let browser handle \"target=_blank\" etc.\n          !isModifiedEvent(event) // ignore clicks with modifier keys\n        ) {\n          event.preventDefault();\n          navigate();\n        }\n      }\n    };\n\n    // React 15 compat\n    if (forwardRefShim !== forwardRef) {\n      props.ref = forwardedRef || innerRef;\n    } else {\n      props.ref = innerRef;\n    }\n\n    /* eslint-disable-next-line jsx-a11y/anchor-has-content */\n    return <a {...props} />;\n  }\n);\n\nif (__DEV__) {\n  LinkAnchor.displayName = \"LinkAnchor\";\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nconst Link = forwardRef(\n  (\n    {\n      component = LinkAnchor,\n      replace,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <Link> outside a <Router>\");\n\n          const { history } = context;\n\n          const location = normalizeToLocation(\n            resolveToLocation(to, context.location),\n            context.location\n          );\n\n          const href = location ? history.createHref(location) : \"\";\n          const props = {\n            ...rest,\n            href,\n            navigate() {\n              const location = resolveToLocation(to, context.location);\n              const isDuplicateNavigation = createPath(context.location) === createPath(normalizeToLocation(location));\n              const method = (replace || isDuplicateNavigation) ? history.replace : history.push;\n\n              method(location);\n            }\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return React.createElement(component, props);\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  const toType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.object,\n    PropTypes.func\n  ]);\n  const refType = PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.func,\n    PropTypes.shape({ current: PropTypes.any })\n  ]);\n\n  Link.displayName = \"Link\";\n\n  Link.propTypes = {\n    innerRef: refType,\n    onClick: PropTypes.func,\n    replace: PropTypes.bool,\n    target: PropTypes.string,\n    to: toType.isRequired\n  };\n}\n\nexport default Link;\n","import React from \"react\";\nimport { __RouterContext as RouterContext, matchPath } from \"react-router\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"tiny-invariant\";\nimport Link from \"./Link.js\";\nimport {\n  resolveToLocation,\n  normalizeToLocation\n} from \"./utils/locationUtils.js\";\n\n// React 15 compat\nconst forwardRefShim = C => C;\nlet { forwardRef } = React;\nif (typeof forwardRef === \"undefined\") {\n  forwardRef = forwardRefShim;\n}\n\nfunction joinClassnames(...classnames) {\n  return classnames.filter(i => i).join(\" \");\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nconst NavLink = forwardRef(\n  (\n    {\n      \"aria-current\": ariaCurrent = \"page\",\n      activeClassName = \"active\", // TODO: deprecate\n      activeStyle, // TODO: deprecate\n      className: classNameProp,\n      exact,\n      isActive: isActiveProp,\n      location: locationProp,\n      sensitive,\n      strict,\n      style: styleProp,\n      to,\n      innerRef, // TODO: deprecate\n      ...rest\n    },\n    forwardedRef\n  ) => {\n    return (\n      <RouterContext.Consumer>\n        {context => {\n          invariant(context, \"You should not use <NavLink> outside a <Router>\");\n\n          const currentLocation = locationProp || context.location;\n          const toLocation = normalizeToLocation(\n            resolveToLocation(to, currentLocation),\n            currentLocation\n          );\n          const { pathname: path } = toLocation;\n          // Regex taken from: https://github.com/pillarjs/path-to-regexp/blob/master/index.js#L202\n          const escapedPath =\n            path && path.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n\n          const match = escapedPath\n            ? matchPath(currentLocation.pathname, {\n                path: escapedPath,\n                exact,\n                sensitive,\n                strict\n              })\n            : null;\n          const isActive = !!(isActiveProp\n            ? isActiveProp(match, currentLocation)\n            : match);\n\n          let className =\n            typeof classNameProp === \"function\"\n              ? classNameProp(isActive)\n              : classNameProp;\n\n          let style =\n            typeof styleProp === \"function\" ? styleProp(isActive) : styleProp;\n\n          if (isActive) {\n            className = joinClassnames(className, activeClassName);\n            style = { ...style, ...activeStyle };\n          }\n\n          const props = {\n            \"aria-current\": (isActive && ariaCurrent) || null,\n            className,\n            style,\n            to: toLocation,\n            ...rest\n          };\n\n          // React 15 compat\n          if (forwardRefShim !== forwardRef) {\n            props.ref = forwardedRef || innerRef;\n          } else {\n            props.innerRef = innerRef;\n          }\n\n          return <Link {...props} />;\n        }}\n      </RouterContext.Consumer>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n\n  const ariaCurrentType = PropTypes.oneOf([\n    \"page\",\n    \"step\",\n    \"location\",\n    \"date\",\n    \"time\",\n    \"true\",\n    \"false\"\n  ]);\n\n  NavLink.propTypes = {\n    ...Link.propTypes,\n    \"aria-current\": ariaCurrentType,\n    activeClassName: PropTypes.string,\n    activeStyle: PropTypes.object,\n    className: PropTypes.oneOfType([PropTypes.string, PropTypes.func]),\n    exact: PropTypes.bool,\n    isActive: PropTypes.func,\n    location: PropTypes.object,\n    sensitive: PropTypes.bool,\n    strict: PropTypes.bool,\n    style: PropTypes.oneOfType([PropTypes.object, PropTypes.func])\n  };\n}\n\nexport default NavLink;\n","import { AiFillWarning } from \"react-icons/ai\"\nimport { FaCheck } from \"react-icons/fa\"\nimport buildRecoveryBundle from 'lib/recoveryBundle'\n\nconst PendingRecoveryNotice = ({ recoveryLock, showSendTxns, selectedAccount, selectedNetwork }) => {\n    const isAlreadyInitiated = recoveryLock && recoveryLock.status !== 'requestedButNotInitiated'\n    const createRecoveryRequest = async () => {\n        if (isAlreadyInitiated) return\n        const bundle = buildRecoveryBundle(\n            selectedAccount.id,\n            selectedNetwork.id,\n            selectedAccount.signer.preRecovery,\n            { signer: selectedAccount.signer, primaryKeyBackup: selectedAccount.primaryKeyBackup }\n        )\n        showSendTxns(bundle, true)\n    }\n    const recoveryLockStatus = recoveryLock ? recoveryLock.status : 'requestedButNotInitiated'\n    const remainingTime = seconds => {\n        if (seconds > 86400) return `${Math.ceil(seconds / 86400)} days`\n        else return `${Math.ceil(seconds/1440)} hours`\n    }\n    const styleClass = isAlreadyInitiated\n        ? (recoveryLockStatus === 'ready' ? 'success' : 'warning')\n        : 'warning action'\n\n    return (\n        <div className={`notification-banner notification-hollow ${styleClass}`} onClick={() => createRecoveryRequest()}>\n            {\n              recoveryLockStatus === 'ready'\n                ? <FaCheck />\n                : <AiFillWarning />\n            }\n\n            {\n                recoveryLockStatus === 'requestedButNotInitiated' ?\n                    <>Password reset requested but not initiated for {selectedNetwork.name}. Click here to initiate it.</> :\n                recoveryLockStatus === 'initiationTxnPending' ?\n                    <>Initiation transaction is currently pending. Once mined, you will need to wait {remainingTime(recoveryLock.timelock)} for the reset to be done on {selectedNetwork.name}.</> :\n                recoveryLockStatus === 'waitingTimelock' ?\n                    <>Password reset on {selectedNetwork.name} is currently pending. {remainingTime(recoveryLock.remaining)} remaining.</> :\n                recoveryLockStatus === 'ready' ?\n                    <>Password reset on {selectedNetwork.name} is now complete! You can start signing transactions with your new password!</> :\n                recoveryLockStatus === 'failed' ?\n                    <>Something went wrong while resetting your password. Please contact support at help.ambire.com</> : null\n            }\n        </div>\n    )\n}\n\nexport default PendingRecoveryNotice\n","export const ZERO_ADDRESS = '0x0000000000000000000000000000000000000000'\n","import { VELCRO_API_ENDPOINT, ZAPPER_API_KEY } from 'config'\nimport { fetchGet } from 'lib/fetch'\nimport {ZERO_ADDRESS} from 'consts/specialAddresses'\nimport networks from 'consts/networks'\n\nexport default function assetMigrationDetector({ networkId, account }) {\n  if (networks.find(({id}) => id === networkId)?.relayerlessOnly) return Promise.resolve([])\n  if (!account) return Promise.resolve([])// for web accounts\n\n  //First pass\n  return fetchGet(`${VELCRO_API_ENDPOINT}/protocols/tokens/balances?addresses[]=${account}&network=${networkId}&api_key=${ZAPPER_API_KEY}&newBalances=true&available_on_coingecko=true`)\n    .then(velcroResponse => {\n\n      const signer_ = account.toLowerCase()\n      if (!velcroResponse[signer_]) return []\n      if (!velcroResponse[signer_].products[0]) return []\n\n      const filteredAssets = velcroResponse[signer_].products[0].assets;\n\n      //Second pass to get real time data\n      const customTokens = filteredAssets.map(a => ({\n        address: a.tokens[0].address,\n        symbol: a.tokens[0].symbol,\n        decimals: a.tokens[0].decimals,\n      }))\n      const urlCustomTokens = `${VELCRO_API_ENDPOINT}/protocols/tokens/balances?addresses[]=${account}&network=${networkId}&api_key=${ZAPPER_API_KEY}&customTokens=${JSON.stringify(customTokens)}&available_on_coingecko=true`\n      return fetchGet(urlCustomTokens)\n        .then(finalResponse => {\n          const filteredAssets = finalResponse[signer_]?.products[0]?.assets\n\n          return filteredAssets.map(a => {\n            return {\n              name: a.tokens[0].symbol,\n              icon: a.tokens[0].tokenImageUrl,\n              address: a.tokens[0].address.toLowerCase(),\n              native: a.tokens[0].address === ZERO_ADDRESS,\n              decimals: a.tokens[0].decimals,\n              availableBalance: a.tokens[0].balanceRaw,\n              balanceUSD: a.tokens[0].balanceUSD,\n              rate: a.tokens[0].balanceUSD / a.tokens[0].balanceRaw\n            }\n          })\n        })\n        .catch(err => {\n          throw Error('Could not get customToken assets from velcro')\n        })\n    })\n    .catch(err => {\n      throw Error('Could not get assets from velcro')\n    })\n}\n","//Permit definitions\nimport { Interface } from 'ethers/lib/utils'\n\nexport const PERMIT_TYPE_2612 = [\n  { name: \"owner\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"value\", type: \"uint256\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"deadline\", type: \"uint256\" },\n]\n\nexport const PERMIT_TYPE_DAI = [\n  { name: \"holder\", type: \"address\" },\n  { name: \"spender\", type: \"address\" },\n  { name: \"nonce\", type: \"uint256\" },\n  { name: \"expiry\", type: \"uint256\" },\n  { name: \"allowed\", type: \"bool\" },\n]\n\nexport const EIP712DomainWithVersion = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712DomainWithoutNameNorVersion = [\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712Domain = [\n  { name: \"name\", type: \"string\" },\n  { name: \"chainId\", type: \"uint256\" },\n  { name: \"verifyingContract\", type: \"address\" },\n];\n\nexport const EIP712DomainWithSalt = [\n  { name: \"name\", type: \"string\" },\n  { name: \"version\", type: \"string\" },\n  { name: \"verifyingContract\", type: \"address\" },\n  { name: \"salt\", type: \"bytes32\" },\n]\n\nexport const PERMITTABLE_COINS = {\n  1: [\n    // Without version 2\n    { address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48', name: 'USD Coin', version: '2', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612 },\n\n    // Without version\n    { address: '0x1f9840a85d5af5bf1d1762f925bdaddc4201f984', name: 'Uniswap', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612 },\n    { address: '0xde30da39c46104798bb5aa3fe8b9e0e1f348163f', name: 'Gitcoin', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612 },\n\n    // Dai\n    { address: '0x6b175474e89094c44da98b954eedeac495271d0f', name: 'Dai Stablecoin', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_DAI },\n\n    // Spell Token\n    { address: '0x090185f2135308bad17527004364ebcc2d37e5f6', domainType: EIP712DomainWithoutNameNorVersion, permitType: PERMIT_TYPE_2612 },\n    // Magic Internet Money\n    { address: '0x99d8a9c45b2eca8864373a26d1459e3dff1e17f3', domainType: EIP712DomainWithoutNameNorVersion, permitType: PERMIT_TYPE_2612 },\n\n    // With version 1\n    { address: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', name: 'Aave Token', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612 , nonceFunction: \"_nonces\"},\n    { name: 'AdEx Loyalty', address: '0xd9a4cb9dc9296e111c66dfacab8be034ee2e1c2c', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Token', address: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Ambire Wallet Staking Token', address: '0x47cd7e91c3cbaaf266369fe8518345fc4fc12935', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'ConstitutionDAO', address: '0x7a58c0be72be218b41c608b7fe7c5bb630736c71', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aragon Network Token', address: '0xa117000000f279d81a1d3cc75430faa017fa5a2e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'AdEx Staking Token', address: '0xb6456b57f03352be48bf101b46c1752a0813491a', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'dYdX', address: '0x92d6c1e31e14520e676a687f0a93788b716beff5', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Ethereum Name Service', address: '0xc18360217d8f7ab5e7c516566761ea12ce7f9d72', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Olympus', address: '0x383518188c0c6d7730d91b2c03a03c837814a899', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: '1INCH Token', address: '0x111111111117dc0aa78b770fa6a738034120c302', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'IceToken', address: '0xf16e81dce15b08f326220742020379b855b87df9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Fei USD', address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'LUSD Stablecoin', address: '0x5f98805a4e8be255a32880fdec7f6728c6568ba0', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Balancer', address: '0xba100000625a3754423978a60c9317c58a424e3d', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave interest bearing AAVE', address: '0xffc97d72e13e01096502cb8eb52dee56f74dad7b', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniBATWETH', address: '0xa1b0edf4460cc4d8bfaa18ed871bff15e5b57eb4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniWBTCWETH', address: '0xc58f53a8adff2fb4eb16ed56635772075e2ee123', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniUSDCWETH', address: '0x391e86e2c002c70dee155eaceb88f7a3c38f5976', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing WETH', address: '0x030ba81f1c18d280636f32af80b9aad02cf0854e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing DAI', address: '0x028171bca77440897b824ca71d1c56cac55b68a3', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniWBTCUSDC', address: '0x2365a4890ed8965e564b7e2d27c38ba67fec4c6f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniCRVWETH', address: '0x0ea20e7ffb006d4cfe84df2f72d8c7bd89247db0', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniUNIWETH', address: '0x3d26dcd840fcc8e4b2193ace8a092e4a65832f9f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing GUSD', address: '0xd37ee7e4f452c6638c96536e68090de8cbcdb583', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniMKRWETH', address: '0x370adc71f67f581158dc56f539df5f399128ddf9', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing CRV', address: '0x8dae6cb04688c62d939ed9b68d32bc62e49970b1', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market USDT', address: '0x17a79792fe6fe5c95dfe95fe3fcee3caf4fe4cb7', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market UniSNXWETH', address: '0x38e491a71291cd43e8de63b7253e482622184894', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing YFI', address: '0x5165d24277cd063f5ac44efd447b27025e888f37', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing SNX', address: '0x35f6b052c598d933d69a4eec4d04c73a191fe6c2', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market USDC', address: '0xd24946147829deaa935be2ad85a3291dbf109c80', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market DAI', address: '0x79be75ffc64dd58e66787e4eae470c8a1fd08ba4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing USDT', address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing RAI', address: '0xc9bc48c72154ef3e5425641a3c747242112a46af', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing BAL', address: '0x272f97b7a56a387ae942350bbc7df5700f8a4576', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing BAT', address: '0x05ec93c0365baaeabf7aeffb0972ea7ecdd39cf1', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing USDC', address: '0xbcca60bb61934080951369a648fb03df4f96263c', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave AMM Market BptBALWETH', address: '0xd109b2a304587569c84308c55465cd9ff0317bfb', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing KNC', address: '0x39c6b3e42d6a679d7d776778fe880bc9487c2eda', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing MANA', address: '0xa685a61171bb30d4072b338c80cb7b2c865c873e', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing XSUSHI', address: '0xf256cc7847e919fac9b808cc216cac87ccf2f47a', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing TUSD', address: '0x101cc05f4a51c0319f570d5e146a8c625198e636', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n    { name: 'Aave interest bearing ENJ', address: '0xac6df26a590f08dcc95d5a4705ae8abbc88509ef', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612, nonceFunction: \"_nonces\"},\n\n  ],\n  137: [\n    //Not working, only to test UX behavior on polygon\n    { name: 'Governance OHM', address: '0xd8ca34fd379d9ca3c6ee3b3905678320f5b45195', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Frax', address: '0x45c32fa6df82ead1e2ef74d17b76547eddfaff89', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market WBTC', address: '0x5c2ed810328349100a66b82b78a1791b101c9d61', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave Matic Market WETH', address: '0x28424507fefb6f7f8e9d3860f56504e4e5f5f390', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market USDC', address: '0x1a13f4ca1d028320a707d99520abfefca3998b7f', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market AAVE', address: '0x1d2a0e5ec8e5bbdca5cb219e649b565d8e5c3360', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Synapse', address: '0xf8f9efc0db77d8881500bb06ff5d6abc3070e695', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Aave Matic Market WMATIC', address: '0x8df3aad3a84da6b69a4da8aec3ea40d9091b2ac4', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Aave Matic Market USDT', address: '0x60d55f02a771d515e077c9c2403a1ef324885cec', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Klima DAO', address: '0x4e78011ce80ee02d2c3e649fb657e45898257815', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n    { name: 'Quickswap', address: '0xb5c064f955d8e7f38fe0460c556a72987494ee17', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612},\n    { name: 'Route', address: '0x16eccfdbb4ee1a85a33f3a9b21175cd7ae753db4', domainType: EIP712Domain, permitType: PERMIT_TYPE_2612},\n\n    { address: '0x8f3cf7ad23cd3cadbd9735aff958023239c6a063', name: '(PoS) Dai Stablecoin', version: '1', salt: '0x0000000000000000000000000000000000000000000000000000000000000089', domainType: EIP712DomainWithSalt, permitType: PERMIT_TYPE_DAI, nonceFunction: 'getNonce'},\n    { address: '0x2791bca1f2de4661ed88a30c99a7a9449aa84174', name: 'USD Coin (PoS)', version: '1', salt: '0x0000000000000000000000000000000000000000000000000000000000000089', domainType: EIP712DomainWithSalt, permitType: PERMIT_TYPE_2612 },\n  ],\n  56: [\n    { name: '1INCH Token', address: '0x111111111117dc0aa78b770fa6a738034120c302', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Frax', address: '0x90c97f71e18723b0cf0dfa30ee176ab653e89f40', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'JADE', address: '0x7ad7242a99f21aa543f9650a56d141c57e4f6081', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n    { name: 'Templar Token', address: '0x19e6bfc1a6e4b042fb20531244d47e252445df01', version: '1', domainType: EIP712DomainWithVersion, permitType: PERMIT_TYPE_2612},\n\n  ]\n}\n\nexport const ERC20PermittableInterface = new Interface([\n  \"function nonces(address owner) external view returns (uint256)\",\n  \"function _nonces(address owner) external view returns (uint256)\",\n  \"function getNonce(address owner) external view returns (uint256)\",\n\n  \"function name() external view returns (string)\",\n  \"function symbol() external view returns (string)\",\n  \"function decimals() external view returns (uint)\",\n  \"function balanceOf(address) external view returns (uint)\",\n\n  //2612 permit\n  \"function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s)\",\n  //Dai permit\n  \"function permit(address holder, address spender, uint256 nonce, uint256 expiry, bool allowed, uint8 v, bytes32 r, bytes32 s)\",\n  \"function transferFrom(address from, address to, uint256 amount) view returns (bool)\",\n  \"function transfer(address to, uint256 amount) view returns (bool)\",\n  \"function approve(address spender, uint256 amount) returns (bool)\",\n  \"function allowance(address owner, address spender) view returns (uint)\"\n])\n","import './AssetsMigration.scss'\n\nimport BigNumber from 'bignumber.js'\nimport { useCallback, useEffect, useRef, useState } from 'react'\nimport assetMigrationDetector from 'lib/assetMigrationDetector'\nimport { ZERO_ADDRESS } from 'consts/specialAddresses'\nimport AmbireLoading from 'components/common/Loading/AmbireLoading'\nimport { Checkbox, TextInput, Button, Loading } from 'components/common'\nimport { GiToken } from 'react-icons/gi'\nimport { fetchGet } from 'lib/fetch'\nimport { MdClose, MdOutlineNavigateNext, MdOutlineAddCircleOutline, MdCancel } from 'react-icons/md'\nimport { Contract, ethers } from 'ethers'\nimport { ERC20PermittableInterface } from 'consts/permittableCoins'\nimport { getProvider } from 'lib/provider'\nimport { GAS_SPEEDS } from 'ambire-common/src/constants/gasSpeeds'\n\nconst TRANSFER_CONSUMPTION = 52000 // higher avg, 21000 included\n\nconst AssetsMigrationSelector = ({ signerAccount, identityAccount, network, setIsSelectionConfirmed, setStep, portfolio, relayerURL, setModalButtons, hideModal, setSelectedTokensWithAllowance, setGasSpeed, setStepperSteps, hidden }) => {\n\n  const [selectableTokens, setSelectableTokens] = useState([])\n  const [selectableTokensUserInputs, setSelectableTokensUserInputs] = useState([])\n\n  const [nativeToken, setNativeToken] = useState(null)\n\n  const [isLoading, setIsLoading] = useState(true)\n  const [failedImg, setFailedImg] = useState([])\n  const [gasData, setGasData] = useState(null)\n  const [estimatedGasFees, setEstimatedGasFees] = useState(null)\n  const [selectedGasSpeed, setSelectedGasSpeed] = useState('fast')\n  const [tokensAllowances, setTokenAllowances] = useState([])\n\n  const [isAddCustomTokenFormShown, setIsAddCustomTokenFormShown] = useState(false)\n  const [isCustomTokenPending, setIsCustomTokenPending] = useState(false)\n  const [customTokenAddress, setCustomTokenAddress] = useState('')\n  const [customTokenError, setCustomTokenError] = useState('')\n\n  const customTokenInput = useRef()\n  const inputRefs = useRef({})\n\n  // update signerTokens state helper\n  const updateSelectableTokenUserInputs = useCallback((address, callback) => {\n    const index = selectableTokensUserInputs.findIndex(a => a.address === address)\n\n    if (index !== -1) {\n      const updated = callback(selectableTokensUserInputs[index])\n\n      setSelectableTokensUserInputs([\n        ...selectableTokensUserInputs.slice(0, index),\n        updated,\n        ...selectableTokensUserInputs.slice(index + 1),\n      ])\n    }\n  }, [selectableTokensUserInputs])\n\n  // Include/Exclude token in migration\n  const toggleTokenSelection = useCallback((address, minHumanAmount = null) => {\n\n    // focusing input fields on selection\n    const index = selectableTokens\n      .sort((a, b) => a.name < b.name ? -1 : 1)\n      .findIndex(t => t.address === address)\n    inputRefs.current[index]?.focus()\n\n    updateSelectableTokenUserInputs(address, old => {\n      let updated = {\n        ...old,\n        selected: !old.selected\n      }\n      if (minHumanAmount) {\n\n        // let newHumanAmount = humanAmount.replace(/\\.?0+$/g, '')\n        const currentHumanAmount = selectableTokensUserInputs.find(t => t.address === address)?.humanAmount\n        if (minHumanAmount > currentHumanAmount) {\n          const decimals = selectableTokens.find(t => t.address === address)?.decimals\n\n          updated.amount = new BigNumber(minHumanAmount).multipliedBy(10 ** decimals).toFixed(0)\n          updated.humanAmount = minHumanAmount\n        }\n      }\n      return updated\n    })\n  }, [selectableTokens, updateSelectableTokenUserInputs, selectableTokensUserInputs])\n\n  const addCustomToken = useCallback(() => {\n\n    const provider = getProvider(network.id)\n\n    if (!ethers.utils.isAddress(customTokenAddress)) {\n      setCustomTokenError('invalid custom token address')\n      return\n    }\n\n    if (selectableTokens.find(t => t.address.toLowerCase() === customTokenAddress.toLowerCase())) {\n      setCustomTokenAddress('')\n      setIsAddCustomTokenFormShown(false)\n      return\n    }\n\n    const tokenContract = new Contract(customTokenAddress, ERC20PermittableInterface, provider)\n\n    const symbolPromise = tokenContract.symbol().catch(() => setCustomTokenError('Could not get symbol of token ' + customTokenAddress))\n    const decimalsPromise = tokenContract.decimals().catch(() => setCustomTokenError('Could not get decimals of token ' + customTokenAddress))\n    const allowancePromise = tokenContract.allowance(signerAccount, identityAccount).catch(() => setCustomTokenError('Could not get allowance for token ' + customTokenAddress))\n    const availableSignerBalancePromise = tokenContract.balanceOf(signerAccount).catch(() => setCustomTokenError('Could not get balance for token ' + customTokenAddress))\n\n    setIsCustomTokenPending(true)\n    setCustomTokenError(null)\n\n    Promise.all([\n      symbolPromise,\n      decimalsPromise,\n      allowancePromise,\n      availableSignerBalancePromise]\n    ).then((promises) => {\n\n      const [symbol, decimals, allowance, signerBalance] = promises\n\n      setIsCustomTokenPending(false)\n\n      if (symbol && decimals && allowance !== null && signerBalance !== null) {\n        setCustomTokenAddress('')\n        setIsAddCustomTokenFormShown(false)\n\n        setSelectableTokens(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              name: symbol,\n              decimals: decimals.toNumber(),\n              icon: null,\n              rate: 0,\n              native: false,\n              availableBalance: signerBalance.toString(),\n              balanceUSD: 0,\n            }\n          ]\n        })\n\n        setSelectableTokensUserInputs(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              selectedAmount: 0,\n              amount: signerBalance.toString(),\n              humanAmount: new BigNumber(signerBalance.toString()).div(10 ** decimals.toString()).toFixed(),\n              selected: signerBalance.gt(0)\n            }\n          ]\n        })\n\n        setTokenAllowances(old => {\n          return [\n            ...old,\n            {\n              address: customTokenAddress,\n              allowance: 0\n            }\n          ]\n        })\n      }\n    }).catch(err => {\n      console.log('err getting custom token data', err)\n      setIsCustomTokenPending(false)\n    })\n  }, [network, customTokenAddress, signerAccount, identityAccount, setCustomTokenError, selectableTokens])\n\n  const canCoverGasFees = useCallback((speed) => {\n    if (!estimatedGasFees) return false\n    const nativeToSpend = selectableTokensUserInputs.find(t => t.address === ZERO_ADDRESS && t.selected)?.amount || 0\n\n    return new BigNumber(estimatedGasFees.gasFees[speed].signerTransactionsCost)\n      .plus(nativeToSpend)\n      .lte(nativeToken.availableBalance || 0)\n\n  }, [selectableTokensUserInputs, estimatedGasFees, nativeToken])\n\n  const getMaxTransferableNative = useCallback((speed) => {\n    return new BigNumber(nativeToken.availableBalance).minus(estimatedGasFees.gasFees[speed].signerTransactionsCost)\n  }, [estimatedGasFees, nativeToken])\n\n  const consolidatedSelectableTokens = (selectableTokens, selectableTokensUserInputs = [], tokensAllowances = []) => {\n    return selectableTokens.map(st => {\n      return {\n        ...st,\n        ...selectableTokensUserInputs.find(t => t.address === st.address),\n        ...tokensAllowances.find(t => t.address === st.address)\n      }\n    })\n  }\n\n  // select tokens to migrate\n  const confirmTokenSelection = useCallback(async () => {\n\n    const tokensToMigrate = consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs, tokensAllowances).filter(a => a.selected)\n    if (!tokensToMigrate.length) return\n\n    setSelectedTokensWithAllowance(tokensToMigrate.map(a => {\n      return {\n        ...a,\n      }\n    }))\n\n    setIsSelectionConfirmed(true)\n    if (tokensToMigrate.find(a => a.address === ZERO_ADDRESS)) {\n      setStep(1)\n    } else {\n      setStep(2)\n    }\n\n    setGasSpeed(selectedGasSpeed)\n  }, [selectableTokens, selectableTokensUserInputs, tokensAllowances, setSelectedTokensWithAllowance, setIsSelectionConfirmed, setStep, setGasSpeed, selectedGasSpeed])\n\n  useEffect(() => {\n    if (isAddCustomTokenFormShown) {\n      customTokenInput.current.focus()\n    }\n  }, [isAddCustomTokenFormShown])\n\n  useEffect(() => {\n    setNativeToken(selectableTokens.find(t => t.native))\n  }, [selectableTokens])\n\n  // fetch selectable tokens\n  useEffect(() => {\n\n    setIsLoading(true)\n    setSelectableTokens([])\n\n    assetMigrationDetector({ networkId: network.id, account: signerAccount }).then(assets => {\n      setSelectableTokens(\n        assets.map(t => {\n          return {\n            ...t,\n          }\n        })\n      )\n\n      setSelectableTokensUserInputs(assets.map(t => {\n        return {\n          address: t.address,\n          selectedAmount: 0,\n          amount: t.availableBalance,\n          humanAmount: new BigNumber(t.availableBalance).div(10 ** t.decimals).toFixed(),\n          selected: false\n        }\n      }))\n\n      setIsLoading(false)\n    }).catch(err => {\n      console.error(err)\n    })\n  }, [signerAccount, setIsLoading, setSelectableTokens, network])\n\n  // check Identity gas fees\n  useEffect(() => {\n\n    if (!gasData) return\n\n    const consolidatedTokens = consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs, tokensAllowances)\n\n    const regularTransfersCount = consolidatedTokens.filter(t => t.selected && !t.native).length\n    const nativeTransfersCount = consolidatedTokens.filter(t => t.selected && t.native).length\n\n    const adjustedApprovalCost = network.id === 'arbitrum' ? 200000 : 0\n\n    const signerTransactionsConsumption = (regularTransfersCount * (25000 + TRANSFER_CONSUMPTION + adjustedApprovalCost)) + (nativeTransfersCount * 25000)\n\n    const nativeRate = gasData.gasFeeAssets.native / 10 ** 18 // should decimals be returned in the API?\n\n    const gasFees = {}\n    GAS_SPEEDS.forEach(speed => {\n      let gasPrice = (gasData.gasPrice[speed] + (gasData.gasPrice.maxPriorityFeePerGas ? gasData.gasPrice.maxPriorityFeePerGas[speed] * 1 : 0))\n\n      const signerTransactionsCost = signerTransactionsConsumption * gasPrice\n      const signerTransactionsCostUSD = signerTransactionsCost * nativeRate\n\n      gasFees[speed] = {\n        speed,\n        signerTransactionsCost,\n        signerTransactionsCostUSD,\n        signerTransactionsConsumption\n      }\n    })\n\n    setEstimatedGasFees({\n      regularTransfersCount,\n      nativeTransfersCount,\n      gasFees,\n    })\n\n  }, [selectableTokens, selectableTokensUserInputs, portfolio, gasData, selectedGasSpeed, tokensAllowances, network])\n\n\n  // getting gasPrice data from relayer\n  useEffect(() => {\n    fetchGet(`${relayerURL}/gasPrice/${network.id}`).then(gasData => {\n      setGasData(gasData.data)\n    }).catch(err => {\n      console.log('fetch error', err)\n    })\n  }, [relayerURL, network])\n\n\n  // getting erc20 token allowances\n  useEffect(() => {\n    const promises = selectableTokens.map(t => {\n      const provider = getProvider(network.id)\n      const tokenContract = new Contract(t.address, ERC20PermittableInterface, provider)\n\n      if (!t.native) {\n        return tokenContract.allowance(signerAccount, identityAccount)\n          .then((allowance) => {\n\n            return {\n              address: t.address,\n              allowance: allowance.toString(),\n            }\n          }).catch(err => {\n            console.log('err getting allowance', err)\n          })\n      }\n      return {\n        address: t.address,\n        allowance: 0,\n      }\n    })\n\n    Promise.all(promises).then(allowanceResults => {\n      setTokenAllowances(allowanceResults)\n    })\n\n  }, [identityAccount, network, selectableTokens, signerAccount])\n\n\n  useEffect(() => {\n    if (hidden) return\n    setModalButtons(\n      <>\n        <Button clear small icon={<MdClose/>} onClick={hideModal}>Close</Button>\n        {\n          (selectableTokensUserInputs.filter(a => a.selected).length > 0 && canCoverGasFees(selectedGasSpeed))\n            ? <Button small icon={<MdOutlineNavigateNext/>} className={'primary'}\n                      onClick={() => confirmTokenSelection()}>Move {selectableTokensUserInputs.filter(a => a.selected).length} assets</Button>\n            : <Button small icon={<MdOutlineNavigateNext/>} className={'primary disabled'}>Move assets</Button>\n        }\n      </>\n    )\n  }, [selectableTokensUserInputs, selectedGasSpeed, setModalButtons, hideModal, confirmTokenSelection, hidden, canCoverGasFees])\n\n  const onAssetAmountChange = useCallback((val, item) => updateSelectableTokenUserInputs(item.address, (old) => {\n    if (val === '') {\n      return {\n        ...old,\n        humanAmount: 0,\n        amount: 0\n      }\n    }\n    if (\n      (val.endsWith('.') && val.split('.').length === 2)\n      || (val.split('.').length === 2 && (val.endsWith('0') && new BigNumber(val).isEqualTo(old.humanAmount)))\n    ) {\n      return {\n        ...old,\n        humanAmount: val,\n      }\n    }\n\n    if (!isNaN(val)) {\n      let newHumanAmount = new BigNumber(val).toFixed(item.decimals)\n      if (new BigNumber(newHumanAmount).multipliedBy(10 ** item.decimals).comparedTo(item.availableBalance) === 1) {\n        newHumanAmount = new BigNumber(item.availableBalance).dividedBy(10 ** item.decimals).toFixed(item.decimals)\n      }\n      // trim trailing . or 0\n      newHumanAmount = newHumanAmount.replace(/\\.?0+$/g, '')\n\n      return {\n        ...old,\n        humanAmount: newHumanAmount,\n        amount: new BigNumber(newHumanAmount).multipliedBy(10 ** item.decimals).toFixed(0)\n      }\n    }\n    return old\n  }), [updateSelectableTokenUserInputs])\n\n  useEffect(() => {\n    setTimeout(() => {\n      inputRefs.current[0]?.focus()\n    }, 250)\n  }, [selectableTokens])\n\n  // Stepper\n  useEffect(() => {\n\n    const steps = ['Selection']\n\n    const native = selectableTokensUserInputs.find(a => a.address.toLowerCase() === ZERO_ADDRESS && a.selected)\n    if (native) {\n      steps.push(`Send ${selectableTokens.find(t => t.address === native.address).name}`)\n    }\n\n    if (selectableTokensUserInputs.find(a => a.address.toLowerCase() !== ZERO_ADDRESS && a.selected)) {\n\n      let tokensTitleActions = []\n      if (selectableTokensUserInputs.find(a => a.selected && a.address.toLowerCase() !== ZERO_ADDRESS)) tokensTitleActions.push('Send')\n\n      steps.push(tokensTitleActions.join(' and ') + ' tokens')\n\n    }\n\n    if (steps.length === 1) {\n      steps.push('Send tokens')\n    }\n\n    setStepperSteps(steps)\n  }, [selectableTokens, selectableTokensUserInputs, setStepperSteps, network])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n      {\n        isLoading\n          ?\n          <div className={'content-center'}>\n            <h3 className={'mb-6'}>Loading assets...</h3>\n            <AmbireLoading/>\n          </div>\n          :\n          <div>\n            {\n              selectableTokens.length === 0\n                ? <div>No assets to migrate have been found</div>\n                :\n                <div>\n                  <div className={'mb-4'}>Please select the assets you would like to migrate from your signer wallet to\n                    your Ambire wallet\n                  </div>\n                  {\n                    consolidatedSelectableTokens(selectableTokens, selectableTokensUserInputs)\n                      .sort((a, b) => a.name < b.name ? -1 : 1)\n                      .map((item, index) => (\n                        <div className='migration-asset-row' key={index}>\n                          <div className={`migration-asset-select${item.selected ? ' checked' : ''}`}\n                               onClick={() => false}>\n                            <Checkbox\n                              id={`check-${item.address}`}\n                              label={<span className={'migration-asset-select-label'}>\n                                  <span className='migration-asset-select-icon'>\n                                    {\n                                      (failedImg.includes(item.icon) || !item.icon) ?\n                                        <GiToken size={18}/>\n                                        :\n                                        <img src={item.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                                          setFailedImg(failed => [...failed, item.icon])\n                                        }}/>\n                                    }\n                                </span>\n                                <span className='migration-asset-select-name'>{item.name}</span>\n                              </span>}\n                              checked={item.selected}\n                              onChange={() => toggleTokenSelection(item.address)}\n                            />\n                          </div>\n                          <div className='migration-asset-usd'>\n                            ${((item.amount) * item.rate).toFixed(2)}\n                          </div>\n                          <div className='migration-asset-amount'>\n                            <TextInput\n                              ref={(element) => inputRefs.current[index] = element}\n                              className={'migrate-amount-input'}\n                              value={item.humanAmount}\n                              onChange={(val) => onAssetAmountChange(val, item)}\n                            />\n                          </div>\n                        </div>\n                      ))\n                  }\n                  <div className={'custom-token-row mt-2'}>\n                    {\n                      isAddCustomTokenFormShown\n                        ? <div>\n                          {\n                            isCustomTokenPending\n                              ? <div className={'custom-token-message-fetching'}>\n                                <Loading/>\n                                Fetching custom token data...\n                              </div>\n                              : <>\n                                {\n                                  customTokenError && <div className={'error'}>{customTokenError}</div>\n                                }\n                                <div>\n                                  <TextInput\n                                    className={'custom-token-input'}\n                                    placeholder={'Enter custom token address'}\n                                    value={customTokenAddress}\n                                    onChange={(val) => {\n                                      setCustomTokenAddress(val)\n                                    }}\n                                    ref={customTokenInput}\n                                  />\n                                </div>\n                                <div className={'flex-row mt-2'}>\n                                  <Button small icon={<MdCancel/>} className={'buttonHollow danger align-right'}\n                                          onClick={() => {\n                                            setIsAddCustomTokenFormShown(false)\n                                            setCustomTokenAddress('')\n                                            setCustomTokenError(null)\n                                          }}>Cancel</Button>\n                                  <Button small icon={<MdOutlineAddCircleOutline/>} className={'primary ms-4'}\n                                          onClick={() => addCustomToken()}>Add</Button>\n                                </div>\n                              </>\n                          }\n                        </div>\n                        : <Button small icon={<MdOutlineAddCircleOutline/>} className={'clear align-right'}\n                                  onClick={() => setIsAddCustomTokenFormShown(true)}\n                        >Add custom token</Button>\n                    }\n                  </div>\n                  {\n                    !canCoverGasFees(selectedGasSpeed) && selectableTokensUserInputs.filter(a => a.selected).length > 0 &&\n                    <div className={'notification-hollow warning mt-3 mb-3'}>\n                      Your Signer Wallet will not have enough fees to pay for the migration.\n                      Please transfer a maximum of <span className={'max-native-suggestion'}\n                                                         onClick={() => onAssetAmountChange(new BigNumber(getMaxTransferableNative(selectedGasSpeed)).dividedBy(10 ** nativeToken.decimals).toFixed(6, BigNumber.ROUND_DOWN), nativeToken)}>\n                        {new BigNumber(getMaxTransferableNative(selectedGasSpeed)).dividedBy(10 ** nativeToken.decimals).toFixed(6, BigNumber.ROUND_DOWN)} {network.nativeAssetSymbol}\n                      </span>\n                    </div>\n                  }\n                  {\n                    estimatedGasFees &&\n                    <div className={'gas-estimation-block mt-4'}>\n                      <div className={'gas-estimation-block-title'}>Estimated gas fee</div>\n                      <ul className={'gas-estimation-selector'}>\n                        {\n                          Object.values(estimatedGasFees.gasFees).map((f, index) => {\n                              return (<li key={index} className={f.speed === selectedGasSpeed ? 'selected' : ''}\n                                          onClick={() => setSelectedGasSpeed(f.speed)}>{f.speed}</li>)\n                            }\n                          )\n                        }\n                      </ul>\n                      <table className={'gas-estimation-details'}>\n                        <tbody>\n                        <tr>\n                          <td>\n                            Signer fee\n                            {\n                              (!!estimatedGasFees.nativeTransfersCount || !!estimatedGasFees.regularTransfersCount) &&\n                              <span className={'migration-actions'}>\n                                  <span>{estimatedGasFees.nativeTransfersCount + estimatedGasFees.regularTransfersCount} transfers</span>\n                              </span>\n                            }\n                          </td>\n                          <td\n                            className={'gas-estimation-details-amount'}>${estimatedGasFees.gasFees[selectedGasSpeed].signerTransactionsCostUSD.toFixed(2)}</td>\n                        </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  }\n                </div>\n            }\n          </div>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationSelector\n","import './AssetsMigration.scss'\nimport { ethers } from 'ethers'\nimport { useCallback, useEffect, useState } from 'react'\nimport { getWallet } from 'lib/getWallet'\nimport { FaCheck, FaHourglass } from 'react-icons/fa'\nimport Button from 'components/common/Button/Button'\n\nimport { GiToken } from 'react-icons/gi'\nimport { MdOutlineNavigateBefore, MdOutlineNavigateNext } from 'react-icons/md'\nimport { ZERO_ADDRESS } from 'consts/specialAddresses'\nimport { fetchGet } from 'lib/fetch'\nimport BigNumber from 'bignumber.js'\nimport { ERC20PermittableInterface } from 'consts/permittableCoins'\n\nconst AssetsMigrationPermitter = ({\n                                    addRequest,\n                                    identityAccount,\n                                    signer,\n                                    signerExtra,\n                                    network,\n                                    selectedTokensWithAllowance,\n                                    setError,\n                                    hideModal,\n                                    setStep,\n                                    setModalButtons,\n                                    relayerURL,\n                                    gasSpeed,\n                                    hidden,\n                                  }) => {\n\n  //storing user sign/send or rejection\n  const [tokensPermissions, setTokensPermissions] = useState([])\n\n  //storing transfer status for non permittable tokens\n  const [tokensTransfers, setTokensTransfers] = useState({})\n\n  //to be able to have UI feedback without trigerring useEffects\n  const [tokensPendingStatus, setTokensPendingStatus] = useState({})\n  //error display logic if a user has rejected one or more MM popup\n  const [hasRefusedOnce, setHasRefusedOnce] = useState(false)\n  const [lastRefusalError, setLastRefusalError] = useState(null)\n  const [failedImg, setFailedImg] = useState([])\n\n  const [hasCorrectAccountAndChainId, setHasCorrectAccountAndChainId] = useState(null)\n\n  const [currentGasPrice, setCurrentGasPrice] = useState(null)\n\n  const [wallet, setWallet] = useState(null)\n\n  //using a callback would return not up to date data + would trigger useEffect prompt loop while we do not want that\n  const getConsolidatedTokensPure = (selected, tokensPermissions = [], tokensTransfers = [], tokensPendingStatus = []) => {\n    return selected.filter(t => t.address !== ZERO_ADDRESS).map(t => {\n      let remapped = {\n        ...t,\n        signing: null,\n        signature: null,\n        sent: false,\n        pending: false,\n        allowance: 0,\n      }\n      if (tokensPermissions[t.address]) {\n        remapped.signing = tokensPermissions[t.address].signing\n        remapped.signature = tokensPermissions[t.address].signature\n      }\n\n      if (tokensTransfers[t.address]) {\n        remapped.sent = true\n      }\n\n      if (tokensPendingStatus[t.address]) {\n        remapped.pending = true\n      }\n\n      return remapped\n    })\n  }\n\n  const checkWalletConnection = useCallback(async () => {\n    return wallet?.isConnected(signer.address, network.chainId)\n      .then(connected => {\n        setHasCorrectAccountAndChainId(connected)\n        if (!connected) {\n          setError(<>Please make sure your signer wallet is unlocked, and connected with <b>{signer.address}</b> to the\n            correct chain: <b>{network.id}</b></>)\n          return false\n        }\n        return true\n      })\n      .catch(e => {\n        setError('Could not check signer connection status: ' + e.error)\n        return false\n      })\n  }, [network, setError, signer, wallet])\n\n  //number of tokens that are ready to migrate (sent / permitted)\n  const readyTokensCount = useCallback(() => {\n    let count = 0\n    getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, []).forEach(t => {\n      if (t.sent) {\n        count++\n      }\n    })\n    return count\n  }, [selectedTokensWithAllowance, tokensPermissions, tokensTransfers])\n\n  //Send MM prompt\n  const sendToken = useCallback(async (address, waitForRcpt = false) => {\n\n    if (!(await checkWalletConnection())) return\n\n    const tokenToMigrate = selectedTokensWithAllowance.find(t => t.address === address)\n    if (!tokenToMigrate) return\n\n    const sendData = ERC20PermittableInterface.encodeFunctionData('transfer', [identityAccount, new BigNumber(tokenToMigrate.amount).toFixed(0)])\n\n    //UI pending status\n    setTokensPendingStatus(old => {\n      old[address] = true\n      return { ...old }\n    })\n\n    setLastRefusalError(null)\n    const transferResult = wallet.sendTransaction({\n      from: signer.address,\n      to: address,\n      data: sendData,\n      gasLimit: 80000,\n      gasPrice: currentGasPrice,\n      chainId: network.chainId,\n    }).then(async rcpt => {\n\n      setTokensPermissions(old => {\n        old[address] = {\n          ...old[address],\n          signing: true,\n        }\n        return { ...old }\n      })\n\n      if (waitForRcpt) {\n        await rcpt.wait()\n        setTokensTransfers(old => {\n          old[address] = true\n          return { ...old }\n        })\n\n        setTokensPendingStatus(old => {\n          old[address] = false\n          return { ...old }\n        })\n\n        setTokensPermissions(old => {\n          old[address] = {\n            ...old[address],\n            signing: false,\n          }\n          return { ...old }\n        })\n      }\n\n      return true\n    }).catch(err => {\n      setTokensPendingStatus(old => {\n        old[address] = false\n        return { ...old }\n      })\n\n      if (err.message.includes('underpriced')) { // not copying the whole JSON error returned by the rpc\n        setLastRefusalError('Transaction fee underpriced')\n      } else {\n        setLastRefusalError(err.message)\n      }\n\n      setHasRefusedOnce(true)\n\n      if (!tokensPermissions[address] || (tokensPermissions[address] && tokensPermissions[address].signing !== false)) {\n        setTokensPermissions(old => {\n          old[address] = {\n            ...old[address],\n            signing: false,\n          }\n          return { ...old }\n        })\n      }\n      return false\n    })\n\n    return !!transferResult\n\n  }, [wallet, identityAccount, tokensPermissions, selectedTokensWithAllowance, currentGasPrice, network, signer, checkWalletConnection])\n\n  //going to assets selection\n  const cancelMigration = useCallback(() => {\n    setError(null)\n    setTokensTransfers([])\n    setTokensPermissions([])\n    setHasRefusedOnce(false)\n    setStep(0)\n  }, [setError, setTokensPermissions, setTokensTransfers, setStep])\n\n  //batch transactions\n  const completeMigration = useCallback(() => {\n    //reset assets migration status\n    cancelMigration()\n    hideModal()\n  }, [cancelMigration, hideModal])\n\n  useEffect(() => {\n    setWallet(getWallet({\n      signer: signer,\n      signerExtra: signerExtra,\n      chainId: network.chainId\n    }))\n  }, [network, signer, signerExtra])\n\n  // check correctness of signer wallet before starting the chained popups\n  useEffect(() => {\n    checkWalletConnection()\n  }, [checkWalletConnection])\n\n  useEffect(() => {\n    const url = `${relayerURL}/gasPrice/${network.id}`\n\n    fetchGet(url).then(gasData => {\n      let gasPrice = gasData.data.gasPrice[gasSpeed]\n      if (gasData.data.gasPrice.maxPriorityFeePerGas) {\n        gasPrice += gasData.data.gasPrice.maxPriorityFeePerGas[gasSpeed]\n      }\n      setCurrentGasPrice(gasPrice)\n    }).catch(err => {\n      setError(err.message + ' ' + url)\n    })\n\n  }, [network, relayerURL, setError, gasSpeed])\n\n  //Automatic permit ask chain\n  useEffect(() => {\n\n    //Skip initial useEffect\n    if (!hasCorrectAccountAndChainId) return\n    if (!Object.values(tokensTransfers).length) return\n    if (!currentGasPrice) return\n\n    const tokensWithPermission = getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, []).map(t => {\n      return {\n        address: t.address,\n        signed: t.signing,\n      }\n    })\n\n    const nextTokenToAsk = tokensWithPermission.find(a => a.signed === null)\n\n    if (nextTokenToAsk) {\n      //avoid MM popup losing focus when immediately running the next action\n      setTimeout(() => {\n        sendToken(nextTokenToAsk.address, true)\n      }, 150)\n    }\n  }, [selectedTokensWithAllowance, sendToken, tokensPermissions, tokensTransfers, hasCorrectAccountAndChainId, currentGasPrice])\n\n  useEffect(() => {\n    if (!selectedTokensWithAllowance.length) return\n    const initialTokensTransfers = {}\n    selectedTokensWithAllowance.forEach(t => {\n      initialTokensTransfers[t.address] = false\n    })\n    setTokensTransfers(initialTokensTransfers)\n  }, [selectedTokensWithAllowance, setTokensTransfers])\n\n  useEffect(() => {\n    if (hasRefusedOnce) {\n      setError('Every asset below needs to be sent to complete the migration' + (lastRefusalError ? ' (' + lastRefusalError + ')' : ''))\n    }\n  }, [hasRefusedOnce, setError, lastRefusalError])\n\n\n  //Clearing UI error if all the tokens are validated\n  useEffect(() => {\n    if (readyTokensCount() === selectedTokensWithAllowance.length) {\n      setError(null)\n    }\n  }, [readyTokensCount, selectedTokensWithAllowance, setError])\n\n  useEffect(() => {\n    if (hidden) return\n    setModalButtons(\n      <>\n        <Button\n          className={'clear'}\n          icon={<MdOutlineNavigateBefore/>}\n          onClick={() => cancelMigration()}\n        >Back</Button>\n        {\n          readyTokensCount() === getConsolidatedTokensPure(selectedTokensWithAllowance).length\n            ?\n            <Button\n              className={'primary'}\n              icon={<MdOutlineNavigateNext/>}\n              onClick={() => hideModal()}\n            >Close</Button>\n            :\n            <Button\n              className={'primary disabled'}\n              icon={<MdOutlineNavigateNext/>}\n            >Complete</Button>\n        }\n      </>\n    )\n  }, [cancelMigration, completeMigration, readyTokensCount, selectedTokensWithAllowance, setModalButtons, hidden, hideModal])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n      {\n        readyTokensCount() < getConsolidatedTokensPure(selectedTokensWithAllowance).length\n          ? <div\n            className='small-asset-notification mb-3 warning'>{`${getConsolidatedTokensPure(selectedTokensWithAllowance).length - readyTokensCount()} actions left to complete the migration`}</div>\n          : <div className='small-asset-notification mb-3 success'>\n            Your tokens were migrated. You can close this window\n          </div>\n      }\n      {getConsolidatedTokensPure(selectedTokensWithAllowance, tokensPermissions, tokensTransfers, tokensPendingStatus).map((item, index) => (\n        <div className='migration-asset-row' key={index}>\n          <span className='migration-asset-select-icon migration-asset-select-icon-permit'>\n            {\n              (!item.icon || failedImg.includes(item.icon)) ?\n                <GiToken size={18}/>\n                :\n                <img src={item.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                  setFailedImg(failed => [...failed, item.icon])\n                }}/>\n            }\n          </span>\n          <div className='migration-asset-name'>\n            {item.name}\n          </div>\n          <div className='migration-asset-amount'>\n            {new BigNumber(item.amount).div(10 ** item.decimals).toFixed()} <span\n            className={'migration-asset-amount-usd'}>(${((item.amount) * item.rate).toFixed(2)})</span>\n          </div>\n          <div className='separator'>\n\n          </div>\n          <div>\n            {!((item.allowance && ethers.BigNumber.from(item.allowance).gte(item.amount)) || item.sent)\n              ?\n              <>\n                {(item.pending || item.signing)\n                  ? <div className={'migration-permitted warning'}><FaHourglass/> Sending...</div>\n                  :\n                  <Button className={'button-small secondary'}\n                          onClick={() => sendToken(item.address)}>\n                    Send\n                  </Button>\n                }\n              </>\n              :\n              <div className={'migration-permitted'} onClick={() => sendToken(item.address)}><FaCheck/> Sent\n              </div>\n            }\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default AssetsMigrationPermitter\n","import './AssetsMigration.scss'\nimport { useCallback, useEffect, useState } from 'react'\nimport { getWallet } from 'lib/getWallet'\nimport { TextInput, Button, Loading } from 'components/common'\n\nimport { GiToken } from 'react-icons/gi'\nimport BigNumber from 'bignumber.js'\nimport { fetchGet } from 'lib/fetch'\nimport { MdOutlineNavigateNext, MdClose, MdOutlineNavigateBefore } from 'react-icons/md'\n\nconst AssetsMigrationNative = ({\n  identityAccount,\n  signer,\n  signerExtra,\n  network,\n  nativeTokenData,\n  setSelectedTokensWithAllowance,\n  selectedTokensWithAllowance,\n  setError,\n  setStep,\n  hasERC20Tokens,\n  hideModal,\n  relayerURL,\n  setModalButtons,\n  setBeforeCloseModalHandler,\n  gasSpeed,\n  hidden,\n}) => {\n\n  const [failedImg, setFailedImg] = useState([])\n  const [hasMigratedNative, setHasMigratedNative] = useState(false)\n  const [isMigrationPending, setIsMigrationPending] = useState(false)\n  const [nativeAmount, setNativeAmount] = useState('0')\n  const [maxRecommendedAmount, setMaxRecommendedAmount] = useState(null)\n  const [transactionEstimationCost, setTransactionEstimationCost] = useState('0')\n  const [nativeHumanAmount, setNativeHumanAmount] = useState('0')\n\n  const [hasModifiedAmount, setHasModifiedAmount] = useState(false)\n\n  const [currentGasPrice, setCurrentGasPrice] = useState(null)\n\n  let wallet\n  try {\n    wallet = getWallet({\n      signer: signer,\n      signerExtra: signerExtra,\n      chainId: network.chainId\n    })\n  } catch (err) {\n    // in case of no window.ethereum was injected from extension\n    setError('No Web3 wallet connected. Please connect a Web3 wallet and reload the page')\n  }\n\n  //going back to assets selection\n  const cancelMigration = useCallback(() => {\n    setStep(0)\n    setSelectedTokensWithAllowance([])\n  }, [setSelectedTokensWithAllowance, setStep])\n\n  const continueMigration = useCallback(() => {\n    setStep(2)\n  }, [setStep])\n\n  const erc20TransfersCount = (selectedTokensWithAllowance) => {\n    return selectedTokensWithAllowance.filter(t => t.selected && !t.permittable && !t.native).length\n  }\n\n  //Pops MM modal to send native to Identity\n  const migrateNative = useCallback(async () => {\n    if (!wallet) return\n    setError(null)\n    setIsMigrationPending(true)\n\n    if (!hasERC20Tokens) {\n      setBeforeCloseModalHandler(null)\n    }\n\n    let hasCorrectChainAndAccount = await wallet.isConnected(signer.address, network.chainId).catch(e => {\n      setError('Could not check signer connection status: ' + e.error)\n    })\n\n    if (hasCorrectChainAndAccount) {\n      wallet.sendTransaction({\n        from: signer.address,\n        to: identityAccount,\n        gasLimit: 25000 + (network.id === 'arbitrum' ? 200000 : 0),\n        gasPrice: currentGasPrice,\n        value: '0x' + new BigNumber(nativeAmount).toString(16),\n        chainId: network.chainId\n      }).then(async rcpt => {\n        await rcpt.wait()\n        setHasMigratedNative(true)\n        setIsMigrationPending(false)\n        return true\n      }).catch(err => {\n        setHasMigratedNative(false)\n        setIsMigrationPending(false)\n\n        if (err && err.message.includes('must provide an Ethereum address')) {\n          setError(`Make sure your wallet is unlocked and connected with ${signer.address}.`)\n        } else {\n          setError('Native asset migration failed: ' + err.message)\n        }\n\n        return false\n      })\n    } else {\n      setError(<>Please make sure your signer wallet is unlocked, and connected with <b>{signer.address}</b> to the correct chain: <b>{network.id}</b></>)\n      setIsMigrationPending(false)\n    }\n  }, [wallet, setError, hasERC20Tokens, network, setBeforeCloseModalHandler, signer, identityAccount, nativeAmount, currentGasPrice])\n\n  const updateAmount = useCallback((amount) => {\n    let newHumanAmount = new BigNumber(amount).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals).replace(/\\.?0+$/g, '')\n\n    setNativeHumanAmount(newHumanAmount)\n    setNativeAmount(amount)\n    setHasModifiedAmount(true)\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    const url = `${relayerURL}/gasPrice/${network.id}`\n\n    fetchGet(url).then(gasData => {\n      let gasPrice = gasData.data.gasPrice[gasSpeed]\n      if (gasData.data.gasPrice.maxPriorityFeePerGas) {\n        gasPrice += gasData.data.gasPrice.maxPriorityFeePerGas[gasSpeed]\n      }\n      const nativeTransactionCost = gasPrice * 25000\n\n      const regularTransfersCount = erc20TransfersCount(selectedTokensWithAllowance)\n      const transfersTransactionCost = regularTransfersCount * gasPrice * (25000 + 52000)\n\n      setTransactionEstimationCost(new BigNumber((nativeTransactionCost + transfersTransactionCost).toFixed(0)).toFixed(0))\n      const recommendedBN = new BigNumber(nativeTokenData.availableBalance).minus((nativeTransactionCost + transfersTransactionCost))\n      setMaxRecommendedAmount(recommendedBN.gte(0) ? recommendedBN.toFixed(0) : 0)\n      setCurrentGasPrice(gasPrice)\n    }).catch(err => {\n      setError(err.message + ' ' + url)\n    })\n\n  }, [setTransactionEstimationCost, setMaxRecommendedAmount, nativeTokenData, network, relayerURL, setError, gasSpeed, selectedTokensWithAllowance])\n\n  const onAmountChange = useCallback((val) => {\n    setHasModifiedAmount(true)\n    if (val === '') {\n      setNativeHumanAmount(0)\n      setNativeAmount(0)\n      return\n    }\n    if (\n      (val.endsWith('.') && val.split('.').length === 2)\n      || (val.split('.').length === 2 && val.endsWith('0'))\n    ) {\n      setNativeHumanAmount(val)\n      return\n    }\n\n    if (!isNaN(val)) {\n      let newHumanAmount = new BigNumber(val).toFixed(nativeTokenData.decimals)\n      if (new BigNumber(newHumanAmount).multipliedBy(10 ** nativeTokenData.decimals).comparedTo(nativeTokenData.availableBalance) === 1) {\n        newHumanAmount = new BigNumber(nativeTokenData.availableBalance).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals)\n      }\n      //trim trailing . or 0\n      newHumanAmount = newHumanAmount.replace(/\\.?0+$/g, '')\n\n      setNativeHumanAmount(newHumanAmount)\n      setNativeAmount(new BigNumber(newHumanAmount).multipliedBy(10 ** nativeTokenData.decimals).toFixed(0))\n    }\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    const initialHumanAmount = new BigNumber(nativeTokenData.amount).dividedBy(10 ** nativeTokenData.decimals).toFixed(nativeTokenData.decimals).replace(/\\.?0+$/g, '')\n    setNativeHumanAmount(initialHumanAmount)\n    setNativeAmount(nativeTokenData.amount)\n  }, [nativeTokenData])\n\n  useEffect(() => {\n    if (hidden) return\n    const getDisplayedButtons = () => {\n      let buttons = []\n      if (hasMigratedNative) {\n        if (hasERC20Tokens) {\n          buttons.push(<Button\n            icon={<MdOutlineNavigateNext/>}\n            className={'primary full'}\n            onClick={() => continueMigration()}\n          >Next</Button>)\n        } else {\n          buttons.push(<Button\n            icon={<MdClose/>}\n            className={'primary full'}\n            onClick={() => hideModal()}\n          >Close</Button>)\n        }\n      } else if (!wallet) { // will have to restart the process anyway as web3.ethereum is not injected (not to confuse with not unlocked)\n        buttons.push(<Button\n          icon={<MdClose/>}\n          className={'clear full'}\n          onClick={() => hideModal()}\n        >Close</Button>)\n      } else {\n        buttons.push(<Button\n          icon={<MdOutlineNavigateBefore/>}\n          className={'clear'}\n          onClick={() => cancelMigration()}\n          key='0'\n        >Back</Button>)\n\n        if (isMigrationPending) {\n          buttons.push(<Button\n            icon={<Loading/>}\n            className={'primary disabled'}\n            key='1'\n          >Moving {nativeTokenData.name}...</Button>)\n        } else {\n          buttons.push(<Button\n            icon={<MdOutlineNavigateNext/>}\n            className={'primary'}\n            onClick={() => migrateNative()}\n            key='1'\n          >Move {nativeTokenData.name}</Button>)\n        }\n      }\n      return buttons\n    }\n\n    setModalButtons(getDisplayedButtons())\n  }, [hasMigratedNative, hasERC20Tokens, setModalButtons, hideModal, isMigrationPending, cancelMigration, migrateNative, continueMigration, wallet, nativeTokenData, hidden])\n\n  if (hidden) return <></>\n\n  return (\n    <div>\n\n      {\n        wallet &&\n        <>\n          <div className={'migration-native-title mb-4'}>\n            <div className='migration-native-asset-icon'>\n              {\n                failedImg.includes(nativeTokenData.icon) ?\n                  <GiToken size={64}/>\n                  :\n                  <img src={nativeTokenData.icon} draggable='false' alt='Token Icon' onError={(err) => {\n                    setFailedImg(failed => [...failed, nativeTokenData.icon])\n                  }}/>\n              }\n            </div>\n            <div className='migration-native-title-asset-name'>Migrate native asset <b>{nativeTokenData.name}</b></div>\n          </div>\n\n          {\n            hasMigratedNative\n              ?\n              <>\n                <div className={'small-asset-notification success'}>Migration of your {nativeTokenData.name} was\n                  successful\n                </div>\n              </>\n              :\n              <>\n                <div className={'migration-native-row'}>\n                  <span className={'migration-native-row-key'}>\n                    Current balance\n                  </span>\n                  <span className={'migration-native-selection'}\n                        onClick={() => updateAmount(nativeTokenData.availableBalance)}>\n                    {new BigNumber(nativeTokenData.availableBalance).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                  </span>\n                </div>\n\n                <div className={'migration-native-row'}>\n                  <span className={'migration-native-row-key'}>Amount to migrate</span>\n                  {\n                    (hasModifiedAmount || (maxRecommendedAmount !== null && nativeAmount > maxRecommendedAmount))\n                      ?\n                      <TextInput\n                        className={'migrate-amount-input'}\n                        value={nativeHumanAmount}\n                        onChange={onAmountChange}\n                      />\n                      :\n                      <div>{nativeHumanAmount}</div>\n                  }\n                </div>\n\n                {\n                  maxRecommendedAmount !== null && new BigNumber(nativeAmount).gt(maxRecommendedAmount) &&\n                  <div className={'notification-hollow warning mt-4'}>\n                    <div>\n                      {\n                        !!erc20TransfersCount(selectedTokensWithAllowance)\n                          ? 'Signer transactions cost'\n                          : 'Current Transaction cost'\n                      }\n                      :\n                      ~{new BigNumber(transactionEstimationCost).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                      <span\n                        className={'migration-native-usd'}> (${new BigNumber(transactionEstimationCost).multipliedBy(nativeTokenData.rate).toFixed(2)})</span>\n                    </div>\n\n                    <div className={'mt-3 mb-3'}>\n                      {\n                        maxRecommendedAmount > 0\n                          ?\n                          <>\n                            <span>You should migrate up to </span>\n                            <span className={'migration-native-selection'} onClick={() => updateAmount(maxRecommendedAmount)}>\n                              {new BigNumber(maxRecommendedAmount).dividedBy(10 ** nativeTokenData.decimals).toFixed(6)} {nativeTokenData.name}\n                            </span>\n                            <span> because will you need funds to pay the transaction costs.</span>\n                          </>\n                          :\n                          <span>You do not have enough funds to pay the transaction fee.</span>\n                      }\n                    </div>\n                  </div>\n                }\n\n                {\n                  (isMigrationPending && hasERC20Tokens) &&\n                  <div className={'notification-hollow info mt-4'}>\n                    Waiting for the transaction to be mined before continuing migration...\n                  </div>\n                }\n                {\n                  (isMigrationPending && !hasERC20Tokens) &&\n                  <div className={'notification-hollow info mt-4'}>\n                    The amount of {nativeTokenData.name} will be updated in your wallet, once the transaction has been\n                    confirmed and mined.\n                    If you confirmed your transaction, you can already close this window\n                  </div>\n                }\n              </>\n          }\n        </>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationNative\n","import './AssetsMigration.scss'\nimport { useEffect, useState } from 'react'\nimport AssetsMigrationSelector from './AssetsMigrationSelector'\nimport AssetsMigrationPermitter from './AssetsMigrationPermitter'\nimport AssetsMigrationNative from './AssetsMigrationNative'\nimport { PERMITTABLE_COINS } from 'consts/permittableCoins'\nimport { MdClose, MdOutlineNavigateBefore } from 'react-icons/md'\nimport { Button } from 'components/common'\n\nconst AssetsMigration = ({ addRequest, selectedAccount, accounts, network, hideModal, relayerURL, portfolio, setModalButtons, setModalSteps, setBeforeCloseModalHandler }) => {\n\n  const [selectedTokensWithAllowance, setSelectedTokensWithAllowance] = useState([])\n  const [nativeTokenData, setNativeTokenData] = useState(null)\n  const [hasERC20Tokens, setHasERC20Tokens] = useState(false)\n\n  const [isSelectionConfirmed, setIsSelectionConfirmed] = useState(false)\n  const [step, setStep] = useState(0)\n  const [stepperSteps, setStepperSteps] = useState([])\n  const [error, setError] = useState(null)\n\n  const [showCloseConfirmation, setShowCloseConfirmation] = useState(false)\n\n  const [gasSpeed, setGasSpeed] = useState(null)\n\n\n  //to get signer\n  const currentAccount = accounts.find(a => a.id === selectedAccount)\n\n  //clear error and reset tokens\n  useEffect(() => {\n    if (step === 0) {\n      setError(null)\n      setSelectedTokensWithAllowance([])\n      setNativeTokenData(null)\n      setHasERC20Tokens(false)\n      setGasSpeed(null)\n      setBeforeCloseModalHandler(null)\n    }\n  }, [network, selectedAccount, step, setBeforeCloseModalHandler])\n\n  useEffect(() => {\n    if (isSelectionConfirmed) {\n      setIsSelectionConfirmed(false)\n\n      //the non permittable, promise wait all\n      setNativeTokenData(selectedTokensWithAllowance.find(t => t.native))\n      setHasERC20Tokens(!!selectedTokensWithAllowance.find(t => !t.native))\n    }\n  }, [isSelectionConfirmed, currentAccount, selectedTokensWithAllowance, network, selectedAccount])\n\n  useEffect(() => {\n    let stepIndex = step\n\n    if (step > 0 && !nativeTokenData) {\n      stepIndex -= 1\n    }\n\n    setModalSteps({\n      steps: stepperSteps.map(s => ({ name: s })),\n      stepIndex\n    })\n  }, [nativeTokenData, setModalSteps, step, stepperSteps])\n\n  useEffect(() => {\n    const beforeCloseHandle = () => {\n      setShowCloseConfirmation(true)\n      setModalButtons([\n        (<Button\n          icon={<MdOutlineNavigateBefore/>}\n          className={'clear'}\n          onClick={() => setShowCloseConfirmation(false)}\n          key='0'\n        >Back</Button>),\n        (<Button\n          icon={<MdClose/>}\n          className={'danger'}\n          onClick={() => hideModal()}\n          key='1'\n        >Close</Button>)\n      ])\n    }\n\n    if (step > 0) {\n      setBeforeCloseModalHandler(() => beforeCloseHandle)\n    }\n  }, [step, setBeforeCloseModalHandler, setModalButtons, hideModal, showCloseConfirmation])\n\n  return (\n    <div>\n      {\n        error && <div className={'mt-3 error'}>{error}</div>\n      }\n      <div id='assets-migration'>\n        {\n          showCloseConfirmation &&\n          <div className='notification-hollow warning mt-4'>\n            By closing this window, your progress will be lost. Are you sure you want to close this window?\n          </div>\n        }\n        {\n          step === 0 && <AssetsMigrationSelector\n            hidden={showCloseConfirmation}\n            signerAccount={currentAccount.signer.address}\n            identityAccount={selectedAccount}\n            network={network}\n            PERMITTABLE_COINS={PERMITTABLE_COINS}\n            setIsSelectionConfirmed={setIsSelectionConfirmed}\n            setStep={setStep}\n            portfolio={portfolio}\n            relayerURL={relayerURL}\n            setModalButtons={setModalButtons}\n            hideModal={hideModal}\n            setError={setError}\n            setSelectedTokensWithAllowance={setSelectedTokensWithAllowance}\n            setStepperSteps={setStepperSteps}\n            setGasSpeed={setGasSpeed}\n          />\n        }\n        {step === 1 && nativeTokenData &&\n          <AssetsMigrationNative\n            hidden={showCloseConfirmation}\n            signer={currentAccount.signer}\n            identityAccount={selectedAccount}\n            network={network}\n            addRequest={addRequest}\n            signerExtra={currentAccount.signerExtra}\n            setError={setError}\n            nativeTokenData={nativeTokenData}\n            hideModal={hideModal}\n            setStep={setStep}\n            relayerURL={relayerURL}\n            hasERC20Tokens={hasERC20Tokens}\n            setModalButtons={setModalButtons}\n            setSelectedTokensWithAllowance={setSelectedTokensWithAllowance}\n            selectedTokensWithAllowance={selectedTokensWithAllowance}\n            setBeforeCloseModalHandler={setBeforeCloseModalHandler}\n            gasSpeed={gasSpeed}\n          />\n        }\n        {step === 2 &&\n          <AssetsMigrationPermitter\n            hidden={showCloseConfirmation}\n            signer={currentAccount.signer}\n            identityAccount={selectedAccount}\n            network={network}\n            addRequest={addRequest}\n            PERMITTABLE_COINS={PERMITTABLE_COINS}\n            signerExtra={currentAccount.signerExtra}\n            setError={setError}\n            selectedTokensWithAllowance={selectedTokensWithAllowance}\n            hideModal={hideModal}\n            setStep={setStep}\n            setModalButtons={setModalButtons}\n            gasSpeed={gasSpeed}\n            relayerURL={relayerURL}\n          />\n        }\n      </div>\n    </div>\n  )\n}\n\nexport default AssetsMigration\n","import { useModals } from 'hooks'\nimport { Modal, Stepper } from 'components/common'\n\nimport AssetsMigration from 'components/Wallet/AssetsMigration/AssetsMigration'\nimport { useState } from 'react'\n\nconst AssetsMigrationModal = ({ addRequest, selectedAccount, selectedNetwork, accounts, relayerURL, portfolio }) => {\n  const { hideModal, setBeforeCloseModalHandler } = useModals()\n\n  const [modalButtons, setModalButtons] = useState(null)\n  const [modalSteps, setModalSteps] = useState({ steps: [], stepIndex: 0})\n\n  const getModalTitle = () => {\n    return (<div>\n      <span>Migrate Assets</span>\n      <Stepper steps={modalSteps.steps} currentStep={modalSteps.stepIndex} noLabels={false}/>\n    </div>)\n  }\n\n  return (\n    <Modal id='asset-migration-modal' title={getModalTitle()} buttons={modalButtons} >\n      <AssetsMigration\n        addRequest={addRequest}\n        selectedAccount={selectedAccount}\n        network={selectedNetwork}\n        accounts={accounts}\n        hideModal={hideModal}\n        relayerURL={relayerURL}\n        portfolio={portfolio}\n        setModalButtons={setModalButtons}\n        setModalSteps={setModalSteps}\n        setBeforeCloseModalHandler={setBeforeCloseModalHandler}\n      />\n    </Modal>\n  )\n}\n\nexport default AssetsMigrationModal\n","import './AssetsMigration.scss'\nimport assetMigrationDetector from 'lib/assetMigrationDetector'\nimport AssetsMigrationModal from 'components/Modals/AssetsMigrationModal/AssetsMigrationModal'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useModals } from 'hooks'\nimport { FaTimes } from 'react-icons/fa'\nimport { getWallet } from 'lib/getWallet'\n\nconst AssetsMigrationBanner = ({ addRequest, selectedAccount, accounts, selectedNetwork, relayerURL, portfolio, closeable = false, linkMargin = false, useStorage }) => {\n\n  const [hasSignerAssets, setHasSignerAssets] = useState(false)\n  const [migrationMessageSeen, setMigrationMessageSeen] = useState(false)\n  const { showModal } = useModals()\n  const [migrationMessageSeenStorage, setMigrationMessageSeenStorage] = useStorage({key: 'migrationSeen', defaultValue:{}})\n\n  // in the meantime that we integrate HW wallets...\n  const currentAccount = accounts.find(a => a.id === selectedAccount)\n  let wallet\n  try {\n    wallet = getWallet({\n      signer: currentAccount.signer,\n      signerExtra: currentAccount.signerExtra,\n      chainId: selectedNetwork.chainId\n    })\n  } catch (err) {\n    // in case of no window.ethereum was injected from extension\n  }\n\n  const closeMigrationMessage = useCallback(() => {\n    setMigrationMessageSeen(true)\n    setMigrationMessageSeenStorage((old) => {\n      old[selectedAccount + selectedNetwork.id] = true\n      return old\n    })\n  }, [selectedAccount, selectedNetwork, setMigrationMessageSeenStorage])\n\n  //fetching relevant assets\n  useEffect(() => {\n    let unmounted = false\n\n    setHasSignerAssets(false)\n    const checkSignerAssets = ({ networkId, identityAccount, accounts }) => {\n      const currentAccount = accounts.find(a => a.id === identityAccount)\n      if (!currentAccount.signer) return\n\n      assetMigrationDetector({ networkId: networkId, account: currentAccount.signer.address }).then(assets => {\n        if (unmounted) return\n        const relevantAssets = assets.filter(a => a.balanceUSD > 0.001)\n        setHasSignerAssets(!!relevantAssets.length)\n      }).catch(err => {\n        console.error(err)\n      })\n    }\n\n    checkSignerAssets({ identityAccount: selectedAccount, networkId: selectedNetwork.id, accounts })\n\n    return () => unmounted = true\n  }, [selectedAccount, selectedNetwork, accounts])\n\n  //checking if closable message has been seen(closed) or not\n  useEffect(() => {\n    setMigrationMessageSeen(closeable && !!migrationMessageSeenStorage[selectedAccount + selectedNetwork.id])\n  }, [closeable, selectedAccount, selectedNetwork, migrationMessageSeenStorage])\n  \n  // We either have a provider (web3) or we use a supported HW wallet\n  const supportedHWWalletTypes = ['ledger', 'trezor', 'Lattice']\n  const shouldShow = wallet?.provider|| (currentAccount.signerExtra && supportedHWWalletTypes.includes(currentAccount.signerExtra.type))\n  if (!shouldShow) return (<></>)\n\n  return (\n    (hasSignerAssets && !migrationMessageSeen) &&\n    <div className={'migration-banner'}>\n      <div className='migration-banner-message'>\n        <div>We detected that your signer account has tokens that can be transferred to your Ambire account. We recommend doing this in order to maximize your $WALLET rewards.</div>\n        <span className={'link' + (linkMargin ? ' link-margin' : '')} onClick={() => {\n          showModal(<AssetsMigrationModal\n            addRequest={addRequest}\n            selectedNetwork={selectedNetwork}\n            selectedAccount={selectedAccount}\n            accounts={accounts}\n            relayerURL={relayerURL}\n            portfolio={portfolio}\n          />)\n        }}>Click here to migrate those tokens</span>\n      </div>\n      {\n        closeable &&\n        <div className={'migration-banner-close'}><FaTimes onClick={() => closeMigrationMessage()}/></div>\n      }\n    </div>\n  )\n}\n\nexport default AssetsMigrationBanner\n"],"sourceRoot":""}