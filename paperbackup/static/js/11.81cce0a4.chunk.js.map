{"version":3,"sources":["components/Plugins/GnosisSafeApps/GnosisSafeApps.js","components/Wallet/TopBar/Accounts/Accounts.js","components/Wallet/TopBar/Networks/Networks.js","lib/dappsUtils.js","components/Wallet/TopBar/DApps/DApps.js","components/Wallet/TopBar/Links/Links.js","hooks/useDynamicModals.js","components/Wallet/TopBar/WalletTokenButton/WalletTokenButton.js","components/Wallet/TopBar/TopBar.js","components/Wallet/GasIndicator/GasIndicator.js","components/Wallet/SideBar/SideBar.js","components/Wallet/DappsCatalog/DappsCatalog.js","components/Wallet/Wallet.js","lib/icons.js","lib/formatters.js","lib/lattice.js","components/Modals/SelectSignerAccountModal/SelectSignerAccountModal.js","components/Modals/EarnDetailsModal/EarnDetailsModal.js","components/Modals/PermissionsModal/PermissionsModal.js","components/Modals/InputModal/InputModal.js","components/Modals/ResetPasswordModal/ResetPasswordModal.js","components/Modals/AddTokenModal/AddTokenModal.js","components/Modals/LatticeModal/LatticeModal.js","components/Modals/UnsupportedDAppsModal/UnsupportedDAppsModal.js","components/Modals/HideTokenModal/HideTokenModal.js","components/Modals/AddAddressModal/AddAddressModal.js","components/Modals/AddCustomDappModal/AddCustomDappModal.jsx","components/Modals/GasTankBalanceByTokensModal/GasTankBalanceByTokensModal.js","components/Modals/WalletTokenModal/MultiplierBadges.js","components/Modals/WalletTokenModal/WalletTokenModal.js","hooks/useAmbireEarnDetails.js","components/Modals/AmbireEarnDetailsModal/AmbireEarnDetailsModal.js","components/Modals/GuardarianDepositProviderModal/useGuardarian.js","components/Modals/GuardarianDepositProviderModal/GuardarianDepositProviderModal.js","lib/validations/importedAccountValidations.js","lib/recoveryBundle.js","resources/dapps.svg","components/Modals/PaperBackupModal/SubComponents/SeedWordsList.js","components/Modals/PaperBackupModal/SubComponents/UnlockAccount.js","components/Modals/PaperBackupModal/SubComponents/VerifySeedWords.js","components/Modals/PaperBackupModal/PaperBackupModal.js","components/Modals/PaperImportModal/SubComponents/ImportSeedWordsForm.js","components/Modals/PaperImportModal/SubComponents/SetSeedWordsPassword.js","components/Modals/PaperImportModal/PaperImportModal.js","lib/permissions.js","lib/popupHelper.js","components/Plugins/GnosisSafeApps/GnosisSafeAppIframe.js","components/Modals/WalletTokenModal/UnbondModal/assets/circle.svg","components/Modals/WalletTokenModal/UnbondModal/UnbondModal.js"],"names":["dapps","id","name","url","logo","desc","GnosisSafeApps","network","selectedAcc","gnosisConnect","gnosisDisconnect","showModal","useModals","splitUrl","window","location","hash","split","passedDapp","length","find","d","slice","useState","selectedApp","setSelectedApp","useLocalStorage","key","defaultValue","customPlugins","setCustomPlugins","reinitUrl","href","addPlugin","useCallback","newDapp","customId","Date","now","newPlugins","removeCustomPlugin","filter","x","inputModal","InputModal","title","inputs","label","placeholder","validate","value","onClose","useEffect","className","mini","icon","onClick","map","dapp","index","red","style","backgroundImage","GnosisSafeAppIframe","removeApp","Accounts","accounts","selectedAddress","onSelectAcc","onRemoveAccount","hidePrivateValue","userSorting","setUserSorting","addToast","useToasts","logoutWarning","setLogoutWarning","closed","setClosed","isMobileScreen","useCheckMobileScreen","sortType","useDragAndDrop","list","prev","items","dragStart","dragEnter","dragTarget","target","handle","drop","sortedAccounts","sort","a","b","indexOf","shortenedAddress","address","isActive","toIcon","seed","blockies","toDataURL","walletType","signerExtra","type","copyAddress","navigator","clipboard","writeText","open","onOpen","color","cursor","i","email","signer","draggable","onDragStart","e","current","contains","preventDefault","onMouseDown","onDragEnter","onDragEnd","onDragOver","onSelectAccount","to","small","Networks","setNetwork","allNetworks","dappsCatalog","dapModeTopBar","networks","sortedNetworks","currHideNet","n","hide","networksItems","concat","disabled","currentDappData","includes","displayDraggableHeader","onChange","draggableHeader","canOpenInIframe","fetchCaught","method","res","canBeLoaded","resp","ok","DApps","connections","connect","disconnect","isWcConnecting","history","useHistory","isClipboardGranted","setClipboardGranted","checkPermission","checkClipboardPermission","status","readClipboard","readText","content","startsWith","uri","prompt","isLegacyWC","bridge","test","wcTitle","src","alt","onConnectionClick","push","encodeURIComponent","badge","isLoading","rel","size","session","isOffline","peerMeta","icons","endsWith","Links","linksViewed","setLinksViewed","useDynamicModal","component","props","watchProps","opts","useContext","ModalContext","showDynamicModal","updateModal","previousWatchProps","useRef","JSON","stringify","WalletTokenButton","rewardsData","account","addRequest","relayerURL","useRelayerData","claimableWalletToken","useClaimableWalletToken","accountId","totalLifetimeRewards","rewards","walletUsdPrice","currentClaimStatus","pendingTokensTotal","isRewardsDataLoading","errMsg","loading","showWalletTokenModal","WalletTokenModal","error","border","TopBar","privateMode","isPrivateMode","togglePrivateMode","isMenuOpen","setMenuOpen","routeMatch","useRouteMatch","isDappMode","toggleSideBarOpen","loadCurrentDappData","dappModeTopBar","useMemo","accountIcon","visualEnv","process","REACT_APP_VISUAL_ENV","URL","document","pathname","networkIconsById","connectionType","providedBy","iconUrl","DAPPS_ICON","secondary","GAS_COST_ERC20_TRANSFER","ACTION_GAS_COSTS","c","gas","AMBIRE_OVERHEAD_COST","GasIndicator","selectedNetwork","match","gasData","setGasData","cacheBreak","setCacheBreak","intvl","setTimeout","clearTimeout","relayerlessOnly","unmounted","fetchGet","then","data","catch","err","console","log","nativeAssetSymbol","Number","gasFeeAssets","native","toLocaleString","minimumFractionDigits","gasPrice","maxPriorityFeePerGas","toFixed","SideBar","portfolio","sidebarRef","balanceFontSize","setBalanceFontSize","sideBarOpen","toggleDappMode","dappModeSidebar","resizeBalance","balanceFontSizes","charLength","balance","total","truncated","closest","Object","keys","reduce","Math","abs","onDappsClick","ref","clear","isCurrNetworkBalanceLoading","fontSize","decimals","activeClassName","CONNECTION_TYPE_LABEL","CATEGORY_LABEL","DappsCatalog","dappUrl","useOneTimeQueryParam","addCustomDapp","loadDappFromUrl","toggleFavorite","favorites","filteredCatalog","onCategorySelect","categoryFilter","search","onSearchChange","categories","removeCustomDapp","dappUrlFromLink","setDappUrlsFromLink","sortFiltered","filteredItems","item","supported","getNetworkTooltipContent","NETWORKS","an","onFavoriteClick","stopPropagation","openDapp","custom","forceInternal","fetch","onRemoveCustomClick","openCustomDappModal","_ev","AddCustomDappModal","loaded","tryAutoLoad","getManifestFromDappUrl","manifest","isWalletPlugin","featured","AMBIRE_ICON_HOT","description","htmlContent","reverse","category","Transfer","lazy","Dashboard","Swap","Earn","Security","Transactions","Collectible","CrossChain","OpenSea","Deposit","Gas","Wallet","usePermissions","isNoticationsGranted","arePermissionsLoaded","modalHidden","useLocation","walletContainer","dapModeSidebar","isLoggedIn","advancedModeList","setAdvancedModeList","redisplayPermissionsModal","setRedisplayPermissionsModal","routes","path","selectedAccount","useStorage","showSendTxns","addressBook","onAddAccount","eligibleRequests","setSendTxnState","setGasTankState","gasTankState","LoggedInGuard","handlePermissionsModal","relayerIdentityURL","areBlockedPermissions","isFirefox","showCauseOfPermissions","showCauseOfEmail","emailConfRequired","showCauseOfBackupOptout","backupOptout","permissionsModal","PermissionsModal","isCloseBtnShown","isBackupOptout","showThankYouPage","isMobile","platform","disableClose","scrollTimeout","scrollTo","top","behavior","unsupported","unsupportedDApps","UnsupportedDAppsModal","onContinue","fallback","exact","customIcons","zapperStorageTokenIcons","getTokenIcon","networkId","addr","toLowerCase","net","formatFloatTokenAmount","amount","useGrouping","maximumFractionDigits","isNaN","parseFloat","min","undefined","max","crypto","require","HARDENED_OFFSET","getAddressesReqOpts","startPath","latticeInit","commKey","clientConfig","privKey","Client","latticeConnect","client","deviceId","Promise","resolve","reject","isPaired","errConnect","latticePair","secret","pair","hasActiveWallet","errPair","latticeGetAddresses","getAddresses","Error","errGetAddresses","latticeSignMessage","dataMsg","protocol","payload","ethers","utils","hexlify","signerPath","signOptsMsg","currency","sign","signedTx","signedMsg","sig","r","s","v","toString","errSignMessage","latticeSignMessage712","message","reqData","latticeSignTransaction","txn","chainId","nonce","unsignedTxObj","gasLimit","from","txData","useEIP155","signOpts","serializedSigned","serialize","errSignTxn","SelectSignerAccountModal","signersToChoose","onSignerAddressClicked","explorerUrl","onCloseBtnClicked","hideModal","currentPage","setCurrentPage","pages","acc","val","idx","floor","formatAddress","prevBtnDisabled","nextBtnDisabled","onAddressClicked","prevState","iconAfter","EarnDetailsModal","buttons","toastErrorMessage","setModalHidden","isEmailConfirmed","setEmailConfirmed","isEmailResent","setEmailResent","isJsonBackupDownloaded","setIsJsonBackupDownloaded","resendTimeLeft","setResendTimeLeft","days","ceil","accountPresets","quickAccTimelock","isAccountNotConfirmed","buttonDisabled","sendConfirmationEmail","success","checkEmailConfirmation","identity","emailConfirmed","meta","isConfirmed","requestNotificationsPermission","askForPermission","requestClipboardPermission","emailConfirmationInterval","setInterval","clearInterval","handleDoneOrIgnoreBtnsClicked","openThankYouPage","resendInterval","checked","copiedAcc","cloudBackupOptout","fileName","fileType","blob","Blob","createElement","download","createObjectURL","clickEvt","MouseEvent","view","bubbles","cancelable","dispatchEvent","remove","downloadFile","modalCloseHandler","isDisabled","setDisabled","inputsFields","input","createRef","onInput","isFormValid","every","values","ResetPassword","setLoading","setType","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordConfirm","setNewPasswordConfirm","passwordsMustMatchWarning","setPasswordsMustMatchWarning","passwordsLengthWarning","setPasswordsLengthWarning","radios","primaryKeyBackup","checkboxes","changePassword","fromEncryptedJson","parse","wallet","encrypt","encryptionOpts","signMessage","fetchPost","resetPassword","extraEntropy","random","performance","firstKeyWallet","createRandom","quickAccManager","timelock","one","two","preRecovery","bundle","buildRecoveryBundle","preRecoveryPrimaryKeyBackup","select","validateForm","arePasswordsMatching","areFieldsNotEmpty","isLengthValid","areCheckboxesChecked","modalButtons","autocomplete","peakPassword","ERC20Interface","Interface","ERC20ABI","AddTokenModal","extraTokens","onAddExtraToken","onRemoveExtraToken","tokenDetails","setTokenDetails","showError","setShowError","symbol","isValidAddress","provider","getProvider","tokenContract","Contract","all","balanceOf","formatUnits","balanceRaw","tokenImageUrl","tokenStandard","toUpperCase","removeToken","randomBytes","LatticeModal","addresses","setDeviceId","isSecretFieldShown","setIsSecretFieldShown","promiseResolve","setPromiseResolve","inputSecretRef","focus","connectToDevice","enteredSecret","textTransform","inputSecret","handleInputSecret","advancedMode","setAdvancedMode","Token","token","button","HideTokenModel","setIsHideTokenModalOpen","setOnClose","hiddenTokens","onAddHiddenToken","onRemoveHiddenToken","tokens","sortedTokens","tempTokens","decreasing","balanceUSD","localeCompare","Map","close","isHidden","unhideToken","hideToken","AddAddressModal","uDAddress","setUDAddress","ensAddress","setEnsAddress","timer","getUDomain","resolveUDomain","unstoppableDomainsChain","isFound","inputType","domain","uDAddr","ensAddr","resolveENSDomain","isUDField","isDappInCatalog","setName","setUrl","setDescription","setIconUrl","setConnectionType","urlErr","setUrlErr","urlInfo","setUrlInfo","iconUrlInfo","setIconUrlInfo","networksInfo","setNetworksInfo","setNetworks","inputValidation","setInputValidation","isAppAlreadyExists","setIsAppAlreadyExists","addDapp","getDappId","onUrlInput","urlInputStr","normalizedDappUrl","getNormalizedUrl","isValidUrl","isInCatalog","onRadioChange","isValidCustomDappData","errors","width","height","onError","row","updated","splice","GasTankBalanceByTokensModal","balanceInUSD","MultiplierBadges","badges","multiplierBadges","isUnlocked","multipliers","active","multiplier","link","backgroundColor","borderColor","isUnbondModalVisible","setIsUnbondModalVisible","stakedAmount","useStakedWalletToken","vestingEntry","claimableNow","disabledReason","claimDisabledReason","claimEarlyRewards","claimVesting","claimableNowUsd","mintableVestingUsd","shouldDisplayMintableVesting","walletTokenAPYPercentage","adxTokenAPYPercentage","xWALLETAPYPercentage","UnbondModal","isVisible","text","mintableVesting","end","start","ZERO","BigNumber","ZERO_ADDR","PRECISION","POOL_SHARES_TOKEN_DECIMALS_MUL","STAKING_POOL_EVENT_TYPES","ethProvider","useAmbireEarnDetails","tokenLabel","getAdexToStakingTransfersLogs","useConstants","WALLET_ADDR","stakingTokenAddress","details","setDetails","setIsLoading","getStats","xWalletContract","stakingPoolAbi","walletContract","tokenAddress","tokenAbi","fromBlockHardcoded","shareValue","totalSupply","lockedShares","getLogs","fromBlock","filters","LogLeave","LogWithdraw","LogRageLeave","sharesTotalSupply","balanceShares","allEnterWalletTransferLogs","leaveLogs","withdrawLogs","rageLeaveLogs","sharesTokensTransfersInLogs","sharesTokensTransfersOutLogs","userShare","isZero","mul","div","toNumber","adexToStakingTransfersLogs","enterWalletTokensByTxHash","result","byHash","transactionHash","sharesTokensTransfersIn","interface","parseLog","args","blockNumber","shares","sharesTokensTransfersOut","txns","event","shareTokensEnterMintByHash","shareTokensTransfersInByTxHash","sharesTokensTransfersInFromExternal","userEnters","sharesMintEvent","adexTokenTransfersLog","parsedWalletLog","walletAmount","userWithdraws","unlocksAt","maxTokens","receivedTokens","userRageLeaves","parsedLog","withdrawTx","unbondingCommitmentWorth","walletValue","canWithdraw","userLeaves","leavesPendingToUnlock","leavesReadyToWithdraw","leavesPendingToUnlockTotalMax","add","leavesPendingToUnlockTotalWallet","leavesReadyToWithdrawTotalMax","leavesReadyToWithdrawTotalWallet","leavePendingToUnlockOrReadyToWithdraw","latestLog","getBlock","timestamp","remainingTime","MAX_SAFE_INTEGER","allLeaveLogs","allWithdrawLogs","allRageLeaveLogs","allEnterSharesTokensTransfersInLogs","allEnters","walletTokenTransfersLog","allWithdraws","allRageLeaves","allLeaves","allLogs","withWalletAmount","events","forEach","transferLog","bestShareValue","totalSharesOutTransfers","totalSharesOutTransfersWalletValue","totalSharesInTransfers","totalSharesInTransfersWalletValue","depositsWalletTotal","rageLeavesWithdrawnWalletTotal","rageLeavesReceivedWalletTotal","withdrawsWalletTotal","totalLockedSharesCheck","eq","balanceSharesAvailable","sub","lt","currentBalanceWalletAvailable","currentBalanceWallet","currentBalanceSharesWalletValue","hasInsufficentBalanceForUnbondCommitments","insufficientSharesAmoutForCurrentUnbonds","currentBalanceWalletAtCurrentShareValue","totalInTokenValue","totalOutTokenValue","totalRewards","hasActiveUnbondCommitments","stakings","stakingEvent","withTimestamp","stats","userDataLoaded","poolShare","allTimeRewards","totalDeposit","totalWithdraws","pendingToUnlock","readyToWithdraw","getData","AmbireEarnDetailsModal","apy","msToDaysHours","OFF_RAMP_FIAT","NETWORK_MAPPING","DEFAULT_CRYPTO","NATIVE_ADDRESS","repeat","useGuardarian","initMode","walletAddress","FIAT_CURRENCIES_URL","CRYPTO_CURRENCIES_URL","offRampFiats","setFrom","setTo","mode","setMode","setAmount","cryptoCurrencies","setCryptoCurrencies","onRampFiats","setOnRampFiats","marketInfo","setMarketInfo","estimateInfo","setEstimateInfo","cryptoList","t","payment_methods","some","pm","withdrawal_enabled","ticker","logo_url","deposit_enabled","bt","token_contract","fiatList","f","genMarketInfoUrl","fromTo","genEstimateUrl","unloaded","genTxnUrl","GuardarianDepositProviderModal","guardarian","sendTransactionLoading","setSendTransactionLoading","getCurrentTokenFromBalance","nt","validationMsg","marketData","userAmount","marketMin","marketMax","currToken","switchMode","prevMode","redirect_url","popupCenter","format","w","h","searchable","changeFrom","from_currency","estimated_exchange_rate","to_currency","changeTo","NUMBER_STRING_REGEX","NEEDED_KEYS","validateImportedAccountProps","validateAccountProps","isValidTimeLock","salt","isValidSalt","identityFactoryAddr","baseIdentityAddr","getAddress","hexDataLength","fileSizeValidator","file","code","IDENTITY_INTERFACE","newValues","abiCoder","AbiCoder","newQuickAccHash","keccak256","encode","Bundle","encodeFunctionData","recoveryMode","SeedWordsList","words","setModalSteps","onWordsWrittenDown","stepIndex","word","full","UnlockAccount","setMnemonic","setError","setModalButtons","passphrase","setPassphrase","textFieldRef","currentAccount","onUnlock","keyBackup","mnemonic","phrase","password","VerifySeedWords","wordIndex","setWordIndex","selectedWordFeedback","setSelectedWordFeedback","animationNextWord","setAnimationNextWord","randNum","asciiNumStr","charCodeAt","finalNum","getWordChoices","correctWord","shuffledWordsList","wordsStream","selected","correct","selectWord","selectedWord","selectedIndex","PaperBackupModal","setBeforeCloseModalHandler","steps","modalSteps","useLayoutEffect","currentStep","noLabels","ImportSeedWordsForm","foundAddress","setFoundAddress","setWallet","newAccount","retrievedIdentity","setRetrievedIdentity","currentWord","setCurrentWord","setWords","previewDeletionIndex","setPreviewDeletionIndex","modifyingIndex","setModifyingIndex","possibleRetrievedIdentities","setPossibleRetrievedIdentities","networkFetchError","setNetworkFetchError","validateWord","pastedWords","sanitizedPastedWords","trim","sanitized","onTextFieldChange","previewDeletion","cancelPreviewDeletion","deleteWord","modifyWord","validateModification","onValidate","fromMnemonic","join","validateSeedWords","checkMatchingIdentity","signature","identities","pickPossibleIdentity","existing","renderRetrievedIdentityFeedback","onKeyDown","onMouseEnter","onMouseLeave","Array","SetSeedWordsPassword","passphrase2","setPassphrase2","validatedFile","PaperImportModal","checkPermissions","onPrompt","permissions","query","allowWithoutGesture","state","Notification","requestPermission","dualScreenLeft","screenLeft","screenX","dualScreenTop","screenTop","screenY","innerWidth","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","availWidth","left","newWindow","setHash","iframeRef","app","onLoad","display","root","getElementById","createPortal","animationData","AnimationData","background","speed","loop","autoplay","Circle","danger"],"mappings":"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","file":"static/js/11.81cce0a4.chunk.js","sourcesContent":["import { MdOutlineAdd, MdRemove } from 'react-icons/md'\nimport './GnosisSafeApps.scss'\nimport GnosisSafeAppIframe from './GnosisSafeAppIframe'\nimport { useLocalStorage } from 'hooks'\nimport InputModal from 'components/Modals/InputModal/InputModal'\nimport { Button } from 'components/common'\n\nimport { useModals } from 'hooks'\nimport { useCallback, useState, useEffect } from 'react'\n\nconst dapps = [{\n  id: 'localhost',\n  name: 'LocalTest',\n  url: 'http://localhost:3002',\n  logo: 'http://localhost:3002/logo-test.png',\n  desc: 'Local dapp test with some lorem ipsum stuff'\n},\n{\n  id: 'txbuilder',\n  name: 'TxBuilder',\n  url: 'https://safe-apps.dev.gnosisdev.com/tx-builder/',\n  logo: 'https://safe-apps.dev.gnosisdev.com/tx-builder/logo.svg',\n  desc: 'Local dapp test with some lorem ipsum stuff'\n},\n{\n  name: 'ParaSwap',\n  url: 'https://paraswap.io',\n  logo: 'https://paraswap.io/paraswap.svg',\n  desc: 'ParaSwap allows dApps and traders to get the best DEX liquidity by aggregating multiple markets and offering the best rates'\n},\n{\n  name: '0xPlasma Finance',\n  url: 'https://apy.plasma.finance',\n  logo: 'https://apy.plasma.finance/logo.svg',\n  desc: 'Cross-chain DeFi & DEX aggregator, farming, asset management, fiat on-ramp'\n},\n  {\n    id: 'mew',\n    name: 'MEW',\n    url: 'https://www.myetherwallet.com/wallet/sign',\n    logo: 'https://www.myetherwallet.com/wallet/sign/logo.svg',\n    desc: 'MEW as dapp'\n  },\n  {\n    id: 'opensea',\n    name: 'Opensea',\n    url: 'https://opensea-temp.ambire.com/staging/',\n    logo: 'https://opensea.io/static/images/logos/opensea.svg',\n    desc: 'Opensea NFT Marketplace'\n  },\n]\n\nexport default function GnosisSafeApps({\n  network,\n  selectedAcc,\n  gnosisConnect,\n  gnosisDisconnect\n}) {\n  const { showModal } = useModals()\n\n  //getting initial dapp(if any)\n  const splitUrl = window.location.hash.split('/')\n  const passedDapp = splitUrl.length > 2 ? dapps.find(d => d.id === splitUrl.slice(-1)[0]) : null\n\n  const [selectedApp, setSelectedApp] = useState(null)\n  const [customPlugins, setCustomPlugins] = useLocalStorage({ key: 'gnosisCustomApps', defaultValue: [] })\n\n  const modalInputs = [\n    { label: 'Name', placeholder: 'Plugin name', validate: value => !!value },\n    { label: 'URL', placeholder: 'https://plugyourpluginifyouwantplug', validate: value => !!value }\n  ]\n\n  const reinitUrl = () => {\n    window.location.href = '/#/wallet/gnosis/plugins'\n  }\n\n  const addPlugin = useCallback((name, url) => {\n    const newDapp = { name, url, customId: Date.now()  }\n    const newPlugins = [...customPlugins, newDapp]\n    setCustomPlugins(newPlugins)\n    setSelectedApp(newDapp)\n    reinitUrl()\n  }, [customPlugins, setCustomPlugins])\n\n  const removeCustomPlugin = useCallback((customId) => {\n    const newPlugins = [...customPlugins.filter(x => x.customId !== customId)]\n    setCustomPlugins(newPlugins)\n  }, [customPlugins, setCustomPlugins])\n\n  const inputModal =\n    <InputModal\n      title=\"Add New Address\"\n      inputs={modalInputs}\n      onClose={([name, url]) => addPlugin(name, url)}>\n    </InputModal>\n\n  const showInputModal = () => showModal(inputModal)\n\n  // loading url initial dapp\n  useEffect(() => {\n      if (passedDapp) {\n        setSelectedApp(passedDapp)\n      }\n    }\n  , [passedDapp])\n\n  return (\n    <div id=\"plugin-gnosis-container\">\n      <ul id=\"dapps-container\" className={selectedApp ? 'small-thumbs' : ''}>\n        <li className='add-plugin'>\n          <Button mini icon={<MdOutlineAdd />} onClick={showInputModal}>Add plugin</Button>\n        </li>\n        {[...dapps, ...customPlugins].map((dapp, index) => (\n          <li\n            key={index}\n            onClick={() => {\n              setSelectedApp(dapp);\n              reinitUrl()\n            }}\n            className={(selectedApp && dapp.url === selectedApp.url) ? 'selected' : ''}\n          >\n            {dapp.customId && <Button className='remove-btn' mini red icon={<MdRemove />} onClick={() => removeCustomPlugin(dapp.customId)} />}\n            <div className=\"logo-container\" style={{ backgroundImage: `url(${dapp.logo})` }}></div>\n            <div className=\"dapp-name\">{dapp.name}</div>\n            <div className=\"dapp-desc\">{dapp.desc}</div>\n          </li>\n        ))}\n      </ul>\n      {selectedApp &&\n        <GnosisSafeAppIframe\n          network={network}\n          selectedApp={selectedApp}\n          selectedAcc={selectedAcc}\n          removeApp={removeCustomPlugin}\n          gnosisConnect={gnosisConnect}\n          gnosisDisconnect={gnosisDisconnect}\n\n        />\n      }\n    </div>\n  )\n}\n","import './Accounts.scss'\n\nimport { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { AiOutlinePlus } from 'react-icons/ai'\nimport { MdOutlineContentCopy, MdLogout, MdOutlineClose, MdOutlineCheck } from 'react-icons/md'\nimport { MdDragIndicator, MdOutlineSort } from 'react-icons/md'\n\nimport * as blockies from 'blockies-ts';\nimport { DropDown, Button } from 'components/common';\nimport { useToasts } from 'hooks/toasts';\nimport { useDragAndDrop, useCheckMobileScreen } from 'hooks'\nimport { ToolTip } from 'components/common'\n\nconst Accounts = ({ accounts, selectedAddress, onSelectAcc, onRemoveAccount, hidePrivateValue, userSorting, setUserSorting }) => {\n    const { addToast } = useToasts()\n    const [logoutWarning, setLogoutWarning] = useState(false)\n    const [closed, setClosed] = useState(false)\n\n    const isMobileScreen = useCheckMobileScreen()\n\n    const sortType = userSorting.accounts?.sortType || 'default'\n\n    const onDropEnd = (list) => {        \n        setUserSorting(\n            prev => ({\n                ...prev,\n                accounts: {\n                    sortType: 'custom',\n                    items: list\n                }\n            })\n        )\n    }\n    \n    const {\n        dragStart,\n        dragEnter,\n        dragTarget,\n        target,\n        handle,\n        drop\n    } = useDragAndDrop('id', onDropEnd)\n\n    const sortedAccounts = [...accounts].sort((a, b) => {\n        if (sortType === 'custom' && userSorting.accounts?.items?.length) {\n            const sorted = userSorting.accounts.items.indexOf(a.id) - userSorting.accounts.items.indexOf(b.id)\n            return sorted\n        } else {\n            const sorted = accounts.indexOf(a.id) - accounts.indexOf(b.id)\n            return sorted\n        }\n    })\n\n    const shortenedAddress = address => address.slice(0, 5) + '...' + address.slice(-3)\n    const isActive = id => id === selectedAddress ? 'active' : ''\n    const toIcon = seed => blockies.create({ seed }).toDataURL()\n    const toIconBackgroundImage = seed => ({ backgroundImage: `url(${toIcon(seed)})`})\n    const walletType = signerExtra => {\n        if (signerExtra && signerExtra.type === 'ledger') return 'Ledger'\n        else if (signerExtra && signerExtra.type === 'trezor') return 'Trezor'\n        else return 'Web3'\n    }\n    const copyAddress = async address => {\n        await navigator.clipboard.writeText(address)\n        addToast('Copied to clipboard!')\n    }\n\n    const onSelectAccount = (id) => {\n        onSelectAcc(id)\n        setClosed(true)\n    }\n\n    return (\n        <DropDown id=\"accounts\" icon={toIcon(selectedAddress)} title={hidePrivateValue(shortenedAddress(selectedAddress))} open={closed} onOpen={() => setClosed(false)}>\n          <div className=\"list\">\n            {!isMobileScreen && <div className=\"sort-buttons\">\n                <ToolTip label='Sorted accounts by drag and drop'>\n                    <MdDragIndicator color={sortType === \"custom\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\"\n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        accounts: {\n                            ...prev.accounts,\n                            sortType: 'custom'\n                        }\n                    }))} />\n                </ToolTip>\n                <ToolTip label='Sorted accounts by default'>\n                    <MdOutlineSort color={sortType === \"default\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\"\n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        accounts: {\n                            ...prev.accounts,\n                            sortType: 'default'\n                        }\n                    }))} />\n                </ToolTip>\n            </div>}\n            {\n              sortedAccounts.map(({ id, email, signer, signerExtra }, i) => \n                logoutWarning !== id ?\n                    <div\n                        className={`account ${isActive(id)}`}\n                        key={id}\n                        draggable={sortedAccounts.length > 1 && sortType === 'custom' && !isMobileScreen}\n                        onDragStart={(e) => {                \n                            if (handle.current === target.current || handle.current.contains(target.current)) dragStart(e, i)\n                            else e.preventDefault();\n                         }}\n                        onMouseDown={(e) => dragTarget(e, i)}\n                        onDragEnter={(e) => dragEnter(e, i)}\n                        onDragEnd={(e) => drop(sortedAccounts)}\n                        onDragOver={(e) => e.preventDefault()}\n                    >\n                        <div className=\"inner\" onClick={() => onSelectAccount(id)}>\n                            {sortedAccounts.length > 1 && sortType === 'custom' && !isMobileScreen && <MdDragIndicator className='drag-handle' id={`${i}-handle`} />}\n                            <div className=\"icon\" style={toIconBackgroundImage(id)}></div>\n                            <div className=\"details\">\n                                <div className=\"address\">{ id }</div>\n                                <label>{ email ? `Email/Password account (${email})` : `${walletType(signerExtra)} (${shortenedAddress(signer.address)})` }</label>\n                            </div>\n                        </div>\n                        <div className=\"buttons\">\n                            <div className=\"button\" onClick={() => copyAddress(id)}>\n                                <MdOutlineContentCopy/>\n                            </div>\n                            <div className=\"button\" onClick={() => setLogoutWarning(id)}>\n                                <MdLogout/>\n                            </div>\n                        </div>\n                    </div>\n                    :\n                    <div id=\"confirm-delete-account\" className={`account ${isActive(id)}`} key={id}>\n                        <div className=\"message\">\n                            Are you sure you want to log out from this account ?\n                        </div>\n                        <div className=\"buttons\">\n                            <div className=\"button danger\" onClick={() => {\n                                setLogoutWarning(false)\n                                onRemoveAccount(id)\n                            }}>\n                                <MdOutlineCheck/>\n                            </div>\n                            <div className=\"button\" onClick={() => setLogoutWarning(false)}>\n                                <MdOutlineClose/>\n                            </div>\n                        </div>\n                    </div>\n              )\n            }\n          </div>\n          <div id=\"add-account\">\n            <NavLink to=\"/add-account\">\n              <Button icon={<AiOutlinePlus/>} small>Add Account</Button>\n            </NavLink>\n          </div>\n        </DropDown>\n    )\n}\n\nexport default Accounts","import { Select } from 'components/common';\nimport { useDragAndDrop, useCheckMobileScreen } from 'hooks';\nimport { ToolTip } from 'components/common';\nimport { MdDragIndicator, MdOutlineSort } from 'react-icons/md';\n\nconst Networks = ({\n    network,\n    setNetwork,\n    allNetworks,\n    userSorting,\n    setUserSorting,\n    dappsCatalog,\n    dapModeTopBar\n  }) => {\n    const sortType = userSorting.networks?.sortType || 'default'\n\n    const onDropEnd = (list) => {        \n        setUserSorting(\n            prev => ({\n                ...prev,\n                networks: {\n                    sortType: 'custom',\n                    items: list\n                }\n            })\n        )\n    }\n\n    const isMobileScreen = useCheckMobileScreen()\n    const {\n        dragStart,\n        dragEnter,\n        dragTarget,\n        handle,\n        target,\n        drop\n    } = useDragAndDrop('value', onDropEnd)\n\n    const sortedNetworks = [...allNetworks].sort((a, b) => {\n        if (sortType === 'custom' && userSorting?.networks?.items?.length) {\n            const sorted = userSorting.networks.items.indexOf(a.id) - userSorting.networks.items.indexOf(b.id)\n            return sorted\n        } else {\n            const sorted = allNetworks.indexOf(a.id) - allNetworks.indexOf(b.id)\n            return sorted\n        }\n    })\n    const currHideNet = sortedNetworks.filter(n => network.id === n.id && network.hide)\n    const networksItems = sortedNetworks.filter(n => !n.hide).concat(currHideNet).map(({ id, name, icon }) => ({\n      label: name,\n      value: id,\n      icon,\n      disabled: dapModeTopBar && !dappsCatalog?.currentDappData?.networks?.includes(id)\n    }))\n   \n    return (\n        <Select\n            defaultValue={network.id}\n            draggable={sortType === 'custom' && !isMobileScreen ? true : false}\n            dragEnter={dragEnter}\n            drop={drop}\n            dragStart={(e, index) => {                \n                if (handle.current === target.current || handle.current.contains(target.current)) dragStart(e, index)\n                else e.preventDefault();\n             }}\n            dragTarget={dragTarget}\n            items={networksItems}\n            displayDraggableHeader={!isMobileScreen}\n            onChange={({ value }) => setNetwork(value)}\n            draggableHeader={<div className='sort-buttons'>\n                <ToolTip label='Sorted networks by drag and drop'>\n                    <MdDragIndicator color={sortType === \"custom\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\" \n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        networks: {\n                            ...prev.networks,\n                            sortType: 'custom'\n                        }\n                    }))} />\n                </ToolTip>\n                <ToolTip label='Sorted networks by default'>\n                    <MdOutlineSort color={sortType === \"default\" ? \"#80ffdb\" : \"\"} cursor=\"pointer\" \n                    onClick={() => setUserSorting(prev => ({\n                        ...prev,\n                        networks: {\n                            ...prev.networks,\n                            sortType: 'default'\n                        }\n                    }))} />\n                </ToolTip>\n            </div>}\n        />\n    );\n};\n\nexport default Networks;  \n","import { fetchCaught } from 'lib/fetch'\n\nexport const canOpenInIframe = async (url) => {\n    const res = await fetchCaught(url, { method: 'HEAD' })\n  \n    // NOTE: looks like it enough to open it in iframe \n    // It fails for cors and x-frame-options\n    const canBeLoaded = res?.resp?.ok\n\n    return canBeLoaded\n  }","import './DApps.scss'\n\nimport React, { useState, useCallback } from 'react'\nimport { FiHelpCircle } from 'react-icons/fi'\nimport { BiTransferAlt } from 'react-icons/bi'\nimport { MdBrokenImage } from 'react-icons/md'\nimport { AiOutlineDisconnect } from 'react-icons/ai'\nimport { DropDown, ToolTip, Button } from \"components/common\"\nimport { checkClipboardPermission } from 'lib/permissions'\nimport { MdOutlineWarning } from 'react-icons/md'\nimport { canOpenInIframe } from 'lib/dappsUtils'\nimport { useHistory } from 'react-router-dom'\n\nconst DApps = ({ connections, connect, disconnect, isWcConnecting }) => {\n    const history = useHistory()\n    const [isClipboardGranted, setClipboardGranted] = useState(false)\n\n    const checkPermission = async () => {\n        const status = await checkClipboardPermission()\n        setClipboardGranted(status)\n        return status\n    }\n\n    const readClipboard = useCallback(async () => {\n        if (isClipboardGranted) {\n            const content = await navigator.clipboard.readText()\n            if (content.startsWith('wc:')) connect({ uri: content })\n        } else {\n            const uri = prompt('Enter WalletConnect URI')\n            if (uri) connect({ uri })\n        }\n    }, [connect, isClipboardGranted])\n\n    const isLegacyWC = ({ bridge }) => /https:\\/\\/bridge.walletconnect.org/g.test(bridge)\n\n    const wcTitle = (<div className='ddWcTitle'><img src='./resources/walletconnect.svg' alt='wc-logo'/>WalletConnect</div>)\n\n    const onConnectionClick = useCallback( async (url) => {\n        const canOpen = await canOpenInIframe(url)\n        if(canOpen) {\n            history.push(`/wallet/dapps?dappUrl=${encodeURIComponent(url + `?${Date.now()}`)}`)\n        } else {\n            window.open(url, '_blank')\n        }\n    }, [history])\n\n    return (\n        <DropDown id=\"dApps\" title={wcTitle} badge={connections.length} onOpen={() => checkPermission()} isLoading={isClipboardGranted && isWcConnecting}>\n            <div id=\"connect-dapp\">\n                <div className=\"heading\">\n                    <Button small icon={<BiTransferAlt />} disabled={isClipboardGranted} onClick={readClipboard}>\n                        Connect dApp\n                    </Button>\n                    <a href='https://help.ambire.com/hc/en-us/articles/4410889965842' target='_blank' rel='noreferrer'>\n                        <FiHelpCircle size={30} />\n                    </a>\n                </div>\n                {isClipboardGranted ? (\n                    <label>\n                        Automatic connection enabled, just copy a WalletConnect URL and\n                        come back to this tab.\n                    </label>\n                ) : null}\n            </div>\n            <div className='dappList'>\n                {connections.map(({ session, uri, isOffline }) => (\n                  <div className=\"item dapps-item\" key={session.key}>\n                      <div className=\"icon\">\n                          <div className=\"icon-overlay\" style={{backgroundImage: `url(${session.peerMeta.icons.filter(x => !x.endsWith('favicon.ico'))[0]})`}}/>\n                          <MdBrokenImage/>\n                      </div>\n                      <span onClick={() => onConnectionClick(session.peerMeta.url)}>\n                          <div className=\"details\">\n                              {\n                                  isLegacyWC(session) ?\n                                    <ToolTip className=\"session-warning\" label=\"dApp uses legacy WalletConnect bridge which is unreliable and often doesn't work. Please tell the dApp to update to the latest WalletConnect version.\">\n                                        <MdOutlineWarning/>\n                                    </ToolTip>\n                                    :\n                                    null\n                              }\n                              {\n                                  isOffline ?\n                                    <ToolTip className=\"session-error\" label=\"WalletConnect connection may be offline. Check again later. If this warning persist try to disconnect and connect WalletConnect.\">\n                                        <AiOutlineDisconnect />\n                                    </ToolTip>\n                                    :\n                                    null\n                              }\n                              <div className=\"name\">{session.peerMeta.name}</div>\n                          </div>\n                      </span>\n                      <div className=\"separator\"></div>\n                      <button onClick={() => disconnect(uri)}>Disconnect</button>\n                  </div>\n                ))}\n            </div>\n        </DropDown>\n    )\n}\n\nexport default DApps\n","import './Links.scss'\n\nimport { DropDown } from \"components/common\"\nimport { MdChatBubbleOutline, MdMenuBook, MdOutlineHelpOutline, MdOutlineLightbulb } from \"react-icons/md\";\nimport { BsDiscord, BsTelegram, BsTwitter } from \"react-icons/bs\";\nimport useLocalStorage from \"hooks/useLocalStorage\";\n\nconst Links = () => {\n    const [linksViewed, setLinksViewed] = useLocalStorage({ key: 'linksViewed', defaultValue: false })\n\n    const onOpen = () => {\n        setLinksViewed(true)\n    }\n\n    return (\n        <DropDown id=\"help-dropdown\" className={`${linksViewed ? 'viewed' : ''}`} title={<MdOutlineHelpOutline/>} onOpen={onOpen}>\n            <a className=\"item\" href='https://help.ambire.com/hc/en-us/categories/4404980091538-Ambire-Wallet' target=\"_blank\" rel=\"noreferrer\">\n                <MdMenuBook/> Help Center\n            </a>\n            <a className=\"item\" href=\"https://help.ambire.com/hc/en-us/requests/new\" target=\"_blank\" rel=\"noreferrer\">\n                <MdChatBubbleOutline/> Report an issue\n            </a>\n            <a className=\"item\" href=\"https://discord.gg/nMBGJsb\" target=\"_blank\" rel=\"noreferrer\">\n                <BsDiscord/> Discord\n            </a>\n            <a className=\"item\" href=\"https://twitter.com/AmbireWallet\" target=\"_blank\" rel=\"noreferrer\">\n                <BsTwitter/> Twitter\n            </a>\n            <a className=\"item\" href=\"https://t.me/AmbireOfficial\" target=\"_blank\" rel=\"noreferrer\">\n                <BsTelegram/> Telegram\n            </a>\n            <a className=\"item\" href=\"https://www.ambire.com/Ambire%20ToS%20and%20PP%20(26%20November%202021).pdf\" target=\"_blank\" rel=\"noreferrer\">\n                <MdOutlineLightbulb/> ToS\n            </a>\n        </DropDown>\n    )\n}\n\nexport default Links\n","import { useContext, useEffect, useRef } from \"react\"\nimport { ModalContext } from \"components/ModalProvider/ModalProvider\"\n\nconst useDynamicModal = (component, props, watchProps = {}, opts) => {\n    const { showDynamicModal, updateModal } = useContext(ModalContext)\n    const previousWatchProps = useRef(watchProps)\n\n    useEffect(() => {\n        if (JSON.stringify(previousWatchProps.current) !== JSON.stringify(watchProps)) {\n            updateModal(watchProps)\n            previousWatchProps.current = watchProps\n        }\n    }, [watchProps, updateModal])\n\n    return () => showDynamicModal(component, { ...props, ...watchProps }, opts)\n}\n\nexport default useDynamicModal","import useDynamicModal from \"hooks/useDynamicModals\";\nimport { Button, ToolTip } from \"components/common\";\nimport WalletTokenModal from \"components/Modals/WalletTokenModal/WalletTokenModal\";\nimport useClaimableWalletToken from 'ambire-common/src/hooks/useClaimableWalletToken'\n\nconst WalletTokenButton = ({ rewardsData, account = {}, network, hidePrivateValue, addRequest, relayerURL, useRelayerData }) => {\n    const claimableWalletToken = useClaimableWalletToken({\n        relayerURL,\n        useRelayerData,\n        accountId: account.id,\n        network,\n        addRequest,\n        totalLifetimeRewards: rewardsData.rewards.totalLifetimeRewards,\n        walletUsdPrice: rewardsData.rewards.walletUsdPrice,\n      })\n    const { currentClaimStatus, pendingTokensTotal } = claimableWalletToken\n    const { isLoading: isRewardsDataLoading, errMsg } = rewardsData\n    const isLoading = isRewardsDataLoading || currentClaimStatus.loading\n\n    const showWalletTokenModal = useDynamicModal(WalletTokenModal, { claimableWalletToken, accountId: account.id }, { rewards: rewardsData.rewards })\n\n    return (\n        !isLoading && (errMsg || currentClaimStatus.error) ?\n            <ToolTip label=\"WALLET rewards are not available without a connection to the relayer\">\n                <Button small border disabled onClick={showWalletTokenModal}>Unavailable</Button>\n            </ToolTip>\n            :\n            <Button small border disabled={isLoading} onClick={showWalletTokenModal}>{ isLoading ? '...' : hidePrivateValue(pendingTokensTotal) } WALLET</Button>\n    )\n}\n\nexport default WalletTokenButton\n","import \"./TopBar.scss\";\n\nimport React, { useState, useMemo } from \"react\";\nimport { NavLink, useRouteMatch } from \"react-router-dom\";\nimport { MdOutlineArrowForward, MdOutlineClose, MdOutlineMenu, MdRemoveRedEye, MdVisibilityOff, MdMenu, MdExitToApp, MdInfo } from \"react-icons/md\";\nimport Accounts from \"./Accounts/Accounts\";\nimport Networks from \"./Networks/Networks\";\nimport { networkIconsById } from \"consts/networks\";\nimport DApps from \"./DApps/DApps\";\nimport * as blockies from 'blockies-ts';\nimport Links from \"./Links/Links\";\nimport WalletTokenButton from \"./WalletTokenButton/WalletTokenButton\";\nimport { Button, ToolTip } from 'components/common';\nimport DAPPS_ICON from 'resources/dapps.svg';\n\nconst TopBar = ({\n  useRelayerData,\n  relayerURL,\n  connections,\n  connect,\n  disconnect,\n  isWcConnecting,\n  onSelectAcc,\n  onRemoveAccount,\n  selectedAcc,\n  accounts,\n  network,\n  setNetwork,\n  allNetworks,\n  rewardsData,\n  privateMode: { isPrivateMode, togglePrivateMode, hidePrivateValue },\n  addRequest,\n  userSorting,\n  setUserSorting,\n  dappsCatalog\n}) => {\n  const [isMenuOpen, setMenuOpen] = useState(false)\n  const routeMatch = useRouteMatch('/wallet/dapps')\n\n  const { isDappMode, toggleSideBarOpen, currentDappData, loadCurrentDappData } = dappsCatalog\n\n  const dappModeTopBar = useMemo(() => isDappMode && routeMatch && currentDappData, [currentDappData, isDappMode, routeMatch])\n\n  const account = accounts.find(({ id }) => id === selectedAcc)\n  const accountIcon = blockies.create({ seed: account ? account.id : null }).toDataURL()\n\n  const visualEnv =\n    (process.env.REACT_APP_VISUAL_ENV === 'dev')\n      ? 'dev' : (\n        new URL(document.URL).pathname.startsWith('/staging/')\n      ) ? 'staging' : null\n\n  return (\n    <div id=\"topbar\" className={(visualEnv ? ('visual-env visual-env-' + visualEnv) : '') + (dappModeTopBar ? ' dapp-mode' : '')}>\n      {\n        visualEnv &&\n        <div className='env-bar' >\n          {visualEnv === 'dev' && <>Development mode</>}\n          {visualEnv === 'staging' && <>Staging mode</>}\n        </div>\n      }\n      <div id=\"mobile-menu\" onClick={() => setMenuOpen(!isMenuOpen)}>\n        <div className=\"icon\" style={{ backgroundImage: `url(${accountIcon})` }}></div>\n        <MdOutlineArrowForward />\n        <div className=\"icon\" style={{ backgroundImage: `url(${networkIconsById[network.id]})` }}></div>\n        <div id=\"menu-button\">\n          {isMenuOpen ? <MdOutlineClose /> : <MdOutlineMenu />}\n        </div>\n      </div>\n\n      {dappModeTopBar ?\n        <div className='dapp-menu'>\n          <div className='dapp-menu-btns'>\n            <ToolTip label='Open Ambire Wallet menu'>\n              <Button className='ambire-menu-btn' border mini icon={<MdMenu size={23} />}\n                onClick={() => toggleSideBarOpen()}\n              ></Button>\n            </ToolTip>\n            <div className='dapp-data'>\n              <ToolTip label={`Connected with ${currentDappData?.connectionType} -  see/find out more on our blog`}>\n                {/* TODO: update the blogpost link */}\n                <a className=\"info-btn\" href={'https://blog.ambire.com/connect-to-any-dapp-with-ambire-wallet-and-walletconnect-c1bc096a531e'}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <MdInfo size={23} />\n                </a>\n              </ToolTip>\n              <ToolTip label={`Connected to ${currentDappData?.name} with Ambire Wallet`}>\n                <a href={currentDappData?.providedBy?.url || currentDappData?.url}\n                  target=\"_blank\"\n                  rel=\"noreferrer noopener\">\n                  <img className='dapp-logo' src={currentDappData?.iconUrl || DAPPS_ICON} alt={currentDappData?.name} />\n                </a>\n              </ToolTip>\n              <ToolTip label={`Exit from ${currentDappData?.name}`}>\n                <Button\n                  className='dapp-exit-btn'\n                  secondary mini\n                  icon={<MdExitToApp size={15} />}\n                  onClick={() => loadCurrentDappData(null)}\n                >Exit</Button>\n              </ToolTip>\n            </div>\n          </div>\n        </div>\n        :\n        <NavLink to={'/wallet/dashboard'}>\n          <div id=\"logo\" />\n          <div id=\"icon\" />\n        </NavLink>\n      }\n\n      <div className={`container ${isMenuOpen ? 'open' : ''}`}>\n        {selectedAcc && <WalletTokenButton\n          useRelayerData={useRelayerData}\n          relayerURL={relayerURL}\n          rewardsData={rewardsData}\n          account={account}\n          network={network}\n          hidePrivateValue={hidePrivateValue}\n          addRequest={addRequest}\n        />}\n        {isPrivateMode ? <MdVisibilityOff cursor=\"pointer\" size={28} onClick={togglePrivateMode} /> : <MdRemoveRedEye cursor=\"pointer\" size={28} onClick={togglePrivateMode} />}\n        <DApps connections={connections} connect={connect} disconnect={disconnect} isWcConnecting={isWcConnecting} />\n        <Accounts accounts={accounts} selectedAddress={selectedAcc} onSelectAcc={onSelectAcc} onRemoveAccount={onRemoveAccount} hidePrivateValue={hidePrivateValue} userSorting={userSorting} setUserSorting={setUserSorting} />\n        <Networks setNetwork={setNetwork} network={network} allNetworks={allNetworks} userSorting={userSorting}\n          setUserSorting={setUserSorting} dappsCatalog={dappsCatalog} dapModeTopBar={dappModeTopBar} />\n        <Links />\n      </div>\n    </div>\n  );\n};\n\nexport default TopBar;\n","import './GasIndicator.scss'\nimport { GiGasPump } from 'react-icons/gi'\nimport networks from 'consts/networks'\nimport { useEffect, useState } from 'react'\nimport { fetchGet } from 'lib/fetch'\nimport { ACTION_GAS_COSTS, AMBIRE_OVERHEAD_COST} from 'ambire-common/src/constants/actionGasCosts'\nimport { Link } from 'react-router-dom'\n\nconst GAS_COST_ERC20_TRANSFER = ACTION_GAS_COSTS.find(c => c.name === 'ERC20: Transfer').gas + AMBIRE_OVERHEAD_COST\n\nconst GasIndicator = ({ selectedNetwork, relayerURL, match }) => {\n  const [gasData, setGasData] = useState(null)\n  const [cacheBreak, setCacheBreak] = useState(() => Date.now())\n\n  useEffect(() => {\n    if ((Date.now() - cacheBreak) > 5 * 1000) setCacheBreak(Date.now())\n    const intvl = setTimeout(() => setCacheBreak(Date.now()), 60 * 1000)\n    return () => clearTimeout(intvl)\n  }, [cacheBreak])\n\n  useEffect(() => {\n    if (selectedNetwork.relayerlessOnly) return \n    let unmounted = false\n    const url = `${relayerURL}/gasPrice/${selectedNetwork.id}?cacheBreak=${cacheBreak}`\n\n    fetchGet(url).then(gasData => {\n      if (unmounted) return\n\n      setGasData(gasData.data)\n    }).catch(err => {\n      if (unmounted) return\n      console.log('fetch error', err)\n    })\n    return () => unmounted = true\n  }, [relayerURL, selectedNetwork, cacheBreak])\n\n  if (gasData) {\n    return (<div className={'gas-info'}>\n            <span className={'native-price'}>\n                {networks.find(n => n.id === selectedNetwork.id)?.nativeAssetSymbol}: {(Number(gasData.gasFeeAssets.native)).toLocaleString('en-US', {\n              minimumFractionDigits: 2\n            })}\n            </span>\n            <Link to={match.url + \"/gas-tank\"}>\n              <span className={'gas-price'}>\n                <GiGasPump/> ${((gasData.gasPrice && gasData.gasPrice.maxPriorityFeePerGas ? (gasData.gasPrice.maxPriorityFeePerGas['medium'] + gasData.gasPrice['medium']) : gasData.gasPrice['medium']) * GAS_COST_ERC20_TRANSFER / 10 ** 18 * gasData.gasFeeAssets.native).toFixed(2)}\n              </span>\n            </Link>\n    </div>)\n  }\n  return null\n}\n\nexport default GasIndicator\n","import './SideBar.scss'\n\nimport { NavLink, useRouteMatch  } from 'react-router-dom'\nimport { MdDashboard, MdLock, MdCompareArrows, MdHelpCenter, MdClose } from 'react-icons/md'\nimport { AiOutlineAppstoreAdd } from 'react-icons/ai'\nimport { GiReceiveMoney, GiGasPump } from 'react-icons/gi'\nimport { BsCurrencyExchange } from 'react-icons/bs'\nimport { BsPiggyBank } from 'react-icons/bs'\nimport { BiTransfer } from 'react-icons/bi'\nimport { CgArrowsExchangeV } from 'react-icons/cg'\nimport { Loading, Button } from 'components/common'\nimport { useCallback, useEffect, useRef, useState, useMemo } from 'react'\nimport GasIndicator from 'components/Wallet/GasIndicator/GasIndicator'\n\nconst helpCenterUrl = 'https://help.ambire.com/hc/en-us/categories/4404980091538-Ambire-Wallet'\n\nconst SideBar = ({ match, portfolio, hidePrivateValue, relayerURL, selectedNetwork, dappsCatalog }) => {\n  const sidebarRef = useRef()\n  const [balanceFontSize, setBalanceFontSize] = useState(0)\n  const { isDappMode, sideBarOpen, toggleSideBarOpen, toggleDappMode } = dappsCatalog\n  const routeMatch = useRouteMatch('/wallet/dapps')\n\n  const dappModeSidebar = useMemo(() => isDappMode && routeMatch, [isDappMode, routeMatch])\n\n    const resizeBalance = useCallback(() => {\n        const balanceFontSizes = {\n            3: '2em',\n            5: '1.5em',\n            7: '1.3em',\n            9: '1.2em',\n            11: '1em',\n        }\n\n        const charLength = portfolio.balance.total.truncated.length\n        const closest = Object.keys(balanceFontSizes).reduce((prev, current) => Math.abs(current - charLength) < Math.abs(prev - charLength) ? current : prev)\n        setBalanceFontSize(balanceFontSizes[closest])\n    }, [portfolio.balance.total])\n\n    useEffect(() => resizeBalance(), [resizeBalance])\n\n  const onDappsClick = useCallback(() => {\n    if(dappModeSidebar) {\n      toggleDappMode()\n    }\n  }, [dappModeSidebar, toggleDappMode])  \n\n  return (\n    <div id=\"sidebar\" className={(dappModeSidebar ? 'dapp-mode' : '') + (sideBarOpen ? ' open' : '') } ref={sidebarRef}>\n      {/* NOTE: click outside not working because of the iframe - ths is simpler than adding event listeners to the dapps ifeame  */}\n      {dappModeSidebar && sideBarOpen && <div className='outside-handler' onClick={() => toggleSideBarOpen()}></div> }\n      {dappModeSidebar &&\n      <div className='ambire-logo'>\n        <div className=\"logo\" />\n        <div className=\"icon\" />\n        <Button  clear icon={<MdClose size={23} />} mini border\n          onClick={() => toggleSideBarOpen()}\n        ></Button>\n      </div>\n      }     \n      <div className=\"balance\">\n        <label>Balance</label>\n        {portfolio.isCurrNetworkBalanceLoading ? (\n          <div className={'loaderContainer'}>\n            <Loading />\n          </div>\n        ) : (\n          <div\n            className=\"balanceDollarAmount\"\n            style={{ fontSize: balanceFontSize }}\n          >\n            <span className=\"dollarSign highlight\">$</span>\n            {hidePrivateValue(portfolio.balance.total.truncated)}\n            <span className=\"highlight\">\n              .{hidePrivateValue(portfolio.balance.total.decimals)}\n            </span>\n          </div>\n        )}\n        <div>\n          <GasIndicator \n            relayerURL={relayerURL} selectedNetwork={selectedNetwork} match={match}/>\n        </div>\n      </div>\n      <nav>\n        <NavLink to={match.url + \"/dashboard\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <MdDashboard/>Dashboard\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/deposit\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <GiReceiveMoney/>Deposit\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/transfer\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BiTransfer/>Transfer\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/swap\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BsCurrencyExchange/>Swap\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/dapps\"} activeClassName=\"selected\">\n          <div className=\"item\" onClick={onDappsClick}>\n            <AiOutlineAppstoreAdd />dApps\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/gas-tank\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <GiGasPump/>Gas Tank\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/cross-chain\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <CgArrowsExchangeV/>Cross-Chain\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/earn\"} activeClassName=\"selected\">\n          <div className=\"item\">\n              <BsPiggyBank/>Earn\n          </div>\n        </NavLink>\n        <NavLink to={match.url + \"/transactions\"} activeClassName=\"selected\">\n          <div className=\"item\">\n                <MdCompareArrows/>Transactions\n          </div>\n        </NavLink>\n        {/* Temporarily commented OpenSea tab. */}\n        {/* <NavLink to={match.url + \"/opensea\"} activeClassName=\"selected\">\n          <div className=\"item\">\n            <div className='opensea-icon'/>OpenSea\n          </div>\n        </NavLink> */}\n        <NavLink to={match.url + \"/security\"} activeClassName=\"selected\">\n          <div className=\"item\">\n            <MdLock/>Security\n          </div>\n        </NavLink>\n        <div className=\"separator\"></div>\n        <a href={helpCenterUrl} target=\"_blank\" rel=\"noreferrer\">\n          <div className=\"item\" id=\"help-center\">\n            <MdHelpCenter/>Help Center\n          </div>\n        </a>\n      </nav>\n    </div>\n  )\n}\n\nexport default SideBar\n","import NETWORKS from 'consts/networks'\nimport { TextInput, ToolTip } from 'components/common'\nimport GnosisSafeAppIframe from 'components/Plugins/GnosisSafeApps/GnosisSafeAppIframe'\nimport './DappsCatalog.scss'\nimport { useCallback, Fragment, useEffect, useState } from 'react'\nimport { MdInfo, MdSearch, MdDelete, MdBuildCircle } from 'react-icons/md'\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai'\nimport { Button } from 'components/common'\nimport DAPPS_ICON from 'resources/dapps.svg'\nimport AMBIRE_ICON_HOT from 'resources/icon.png'\nimport AddCustomDappModal from 'components/Modals/AddCustomDappModal/AddCustomDappModal'\nimport { useModals } from 'hooks'\nimport { fetch } from 'lib/fetch'\nimport { canOpenInIframe, getManifestFromDappUrl } from 'ambire-common/src/services/dappCatalog'\nimport { useOneTimeQueryParam } from 'hooks/oneTimeQueryParam'\nimport { useHistory } from 'react-router-dom'\n\nconst CONNECTION_TYPE_LABEL = {\n  'walletconnect': 'WalletConnect'\n}\n\nconst CATEGORY_LABEL = {\n  'walletconnect': 'WalletConnect'\n}\n\nconst DappsCatalog = ({ network, dappsCatalog, selectedAcc, gnosisConnect, gnosisDisconnect }) => {\n  const dappUrl = useOneTimeQueryParam('dappUrl')\n  const { addCustomDapp, loadDappFromUrl, isDappMode, currentDappData, toggleFavorite, favorites, filteredCatalog, onCategorySelect, categoryFilter, search, onSearchChange, categories, loadCurrentDappData, removeCustomDapp } = dappsCatalog\n  const { showModal } = useModals()\n  const [dappUrlFromLink, setDappUrlsFromLink] = useState('')\n  const history = useHistory()\n\n  useEffect(() => {\n    setDappUrlsFromLink(dappUrl)\n  }, [dappUrl])\n\n  const sortFiltered = useCallback((filteredItems) => {\n    return filteredItems.map(item => {\n      return {\n        ...item,\n        supported: !item.networks?.length || !!item.networks?.find(supported => supported === network.id)\n      }\n    }).sort((a, b) => {\n      return b.supported - a.supported\n    })\n  }, [network])\n\n  const getNetworkTooltipContent = useCallback((networks) => {\n    return (\n      <div className='tooltipNetworks'>\n        {\n          networks?.map((n) => {\n            const network = NETWORKS.find(an => an.id === n)\n            if (network) {\n              return (\n                <div key={network.id} className='tooltipNetwork'>\n                  <span className='tooltipNetwork-icon'\n                    style={{ backgroundImage: `url(${network.iconUrl})` }}>\n                  </span>\n                  <span>\n                    {network.name}\n                  </span>\n                </div>\n              )\n            }\n            return null\n          }\n          ).filter(n => n)\n        }\n      </div>\n    )\n  }, [])\n\n  const onFavoriteClick = useCallback((e, item) => {\n    toggleFavorite(item)\n    e.stopPropagation()\n  }, [toggleFavorite])\n\n  const openDapp = useCallback(async (item) => {\n    if ((item.connectionType === 'gnosis' && (!item.custom)) || item.forceInternal || await canOpenInIframe(fetch, item.url)) {\n      loadCurrentDappData(item)\n    } else {\n      window.open(item.url, '_blank')\n    }\n  }, [loadCurrentDappData])\n\n  const onRemoveCustomClick = useCallback((e, item) => {\n    e.stopPropagation()\n    e.preventDefault()\n    removeCustomDapp(item)\n  }, [removeCustomDapp])\n\n  const openCustomDappModal = useCallback((_ev, dappUrl) => {\n    showModal(<AddCustomDappModal dappsCatalog={dappsCatalog} dappUrl={dappUrl} />)\n  }, [dappsCatalog, showModal])\n\n  useEffect(() => {\n    if (!dappUrlFromLink) return\n\n    if (!selectedAcc) {\n      // TODO: Handle global query param\n      history.push(`/add-account?dappUrl=${dappUrlFromLink}`)\n    }\n\n    const loaded = loadDappFromUrl(dappUrlFromLink)\n    setDappUrlsFromLink('')\n\n    if (loaded) {\n      return\n    } else {\n      async function tryAutoLoad() {\n        const manifest = await getManifestFromDappUrl(fetch, dappUrlFromLink)\n        if (manifest && manifest.isWalletPlugin) {\n          addCustomDapp(manifest)\n        } else {\n          openCustomDappModal(null, dappUrlFromLink)\n        }\n      }\n\n      tryAutoLoad()\n        .catch(e => {\n          console.error('tryAutoLoad:', e);\n        })\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dappUrlFromLink, loadDappFromUrl, selectedAcc])\n\n  return (\n    <section id='dappCatalog'>\n      {isDappMode && currentDappData ?\n        <GnosisSafeAppIframe\n          className='dapp-iframe'\n          network={network}\n          selectedApp={currentDappData}\n          selectedAcc={selectedAcc}\n          // removeApp={removeCustomPlugin}\n          gnosisConnect={gnosisConnect}\n          gnosisDisconnect={gnosisDisconnect}\n        />\n        :\n        <Fragment>\n          <div className='filter-section'>\n            <div className='input-icon'>\n              <TextInput value={search} onChange={onSearchChange} placeholder='Search filter' icon={<MdSearch />} />\n            </div>\n            <div className='categories'>\n              {categories.map(c => {\n                return <span\n                  key={c.name}\n                  className={`category category-${c.name}${categoryFilter?.name === c.name ? ' selected' : ''}`}\n                  onClick={() => onCategorySelect(c)}>{CATEGORY_LABEL[c.name] || c.name}</span>\n              })}\n            </div>\n          </div>\n\n          <div className='catalogItems'>\n            <div className={`catalogItem add-custom-dapp`} >\n              <div className='tools'>\n                <ToolTip label={`Click here to see how create dApp for Ambire Wallet catalog`}>\n                  <a className=\"info-btn\" href={'https://github.com/AmbireTech/wallet-dapp-catalog#readme'}\n                    target=\"_blank\"\n                    rel=\"noreferrer noopener\">\n                    <MdBuildCircle size={23} />\n                  </a>\n                </ToolTip>\n                <img className='custom-dapp' src={DAPPS_ICON} alt='add custom dapps' />\n              </div>\n              <div className='custom-dapp-icon-wrapper'>\n                <img className='custom-dapp-icon' src={DAPPS_ICON} alt='add custom dapps icon' />\n              </div>\n              <Button border mini onClick={openCustomDappModal}>Add custom dApp</Button>\n            </div>\n            {\n              sortFiltered(filteredCatalog).map(item => {\n                return <div className={`catalogItem${item.supported ? '' : ' not-supported'}`}\n                  onClick={() => item.supported && openDapp(item)}\n                  key={item.id}\n                >\n\n                  <div className='tools'>\n                    {item.featured &&\n                      <ToolTip label={`Hot dApp`}>\n                        <img className='icon hot-dapp' src={AMBIRE_ICON_HOT} alt='hot dApp icon' />\n                      </ToolTip>\n                    }\n                    {item.custom &&\n                      <ToolTip label={`Remove ${item.name} from your catalog`}>\n                        <MdDelete className='icon remove-dapp' onClick={(e) => onRemoveCustomClick(e, item)} />\n                      </ToolTip>\n                    }\n                    {item.custom &&\n                      <img className='custom-dapp icon' src={DAPPS_ICON} alt='custom dapp icon' />\n                    }\n                    <ToolTip label={`${favorites[item.url] ? 'Remove' : 'Add'} ${item.name} ${favorites[item.url] ? 'from' : 'to'} favorites`}>\n                      <span className={`favorite${favorites[item.url] ? ' selected' : ''}`} onClick={(e) => onFavoriteClick(e, item)}> {\n                        favorites[item.url]\n                          ? <AiFillStar className='icon' /> :\n                          <AiOutlineStar className='icon' />\n\n                      }</span>\n                    </ToolTip>\n                  </div>\n\n                  <div className='base-info'>\n                    <div className='logoSplit'>\n                      <div className='logo'>\n                        <img src={item.iconUrl || DAPPS_ICON} alt={item.name} />\n                      </div>\n                      <div className='content'>\n                        <span className='title'>{item.name}</span>\n                      </div>\n                    </div>\n                    <div className='description'>{item.description}</div>\n                  </div>\n\n                  <div>\n\n                    {!item.supported &&\n                      <div className='tag-row unsupported'>\n                        <span className='tag unsupported'>{network.id} unsupported</span>\n                      </div>\n                    }\n\n                    <div className='aligned-tag-rows'>\n                      {\n                        !!item.networks?.length &&\n                        <ToolTip htmlContent={getNetworkTooltipContent(item.networks)} >\n                          <div className='tag-row network-tag-row'>\n                            {/* NOTE: remove reverse if there is way to match the design without flex-direction: row-reverse; */}\n                            {\n                              item.networks?.length > 3 &&\n                              <span className='tag network-tag network-tag-more'>...</span>\n                            }\n                            {\n                              item.networks?.slice(0, 3).reverse().map((n) => {\n                                const network = NETWORKS.find(an => an.id === n)\n                                if (network) {\n                                  return <span key={network.id} className='tag network-tag'\n                                    style={{ backgroundImage: `url(${network.icon})` }}></span>\n                                }\n                                return null\n                              })\n                            }\n                          </div>\n                        </ToolTip>\n                      }\n\n                      <div className='tag-row tag-types'>\n                        <span className={`tag type-tag type-tag-${item.category}`}>{CONNECTION_TYPE_LABEL[item.category] || item.category}</span>\n                      </div>\n                    </div>\n                  </div>\n\n                </div>\n              })\n            }\n          </div>\n\n          {\n            !filteredCatalog.length &&\n            <div className='no-dapp-found'>No dApp found in our list matching your criteria</div>\n          }\n\n          <div className='info-wc'>\n            <MdInfo /> Note: any dApp that supports WalletConnect can be connected as well\n          </div>\n        </Fragment>\n      }\n    </section>\n  )\n}\n\nexport default DappsCatalog\n","import \"./Wallet.scss\"\n\nimport { lazy, Suspense, useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { Switch, Route, Redirect, useLocation, useRouteMatch } from \"react-router-dom\"\nimport PluginGnosisSafeApps from 'components/Plugins/GnosisSafeApps/GnosisSafeApps'\nimport { useModals, usePermissions, useLocalStorage } from 'hooks'\n\nimport { isFirefox } from 'lib/isFirefox'\nimport unsupportedDApps from 'ambire-common/src/constants/unsupportedDApps'\n// Components\nimport TopBar from \"./TopBar/TopBar\"\nimport PermissionsModal from \"components/Modals/PermissionsModal/PermissionsModal\"\nimport UnsupportedDAppsModal from \"components/Modals/UnsupportedDAppsModal/UnsupportedDAppsModal\"\nimport SideBar from \"./SideBar/SideBar\"\nimport { Loading } from \"components/common\"\nimport DappsCatalog from \"./DappsCatalog/DappsCatalog\"\n// Pages\nconst Transfer = lazy(() => import(\"./Transfer/Transfer\"))\nconst Dashboard = lazy(() => import(\"./Dashboard/Dashboard\"))\nconst Swap = lazy(() => import(\"./Swap/Swap\"))\nconst Earn = lazy(() => import(\"./Earn/Earn\"))\nconst Security = lazy(() => import(\"./Security/Security\"))\nconst Transactions = lazy(() => import('./Transactions/Transactions'))\nconst Collectible = lazy(() => import(\"./Collectible/Collectible\"))\nconst CrossChain = lazy(() => import(\"./CrossChain/CrossChain\"))\nconst OpenSea = lazy(() => import(\"./OpenSea/OpenSea\"))\nconst Deposit = lazy(() => import(\"./Deposit/Deposit\"))\nconst Gas = lazy(() => import(\"./Gas/Gas\"))\n\nexport default function Wallet(props) {\n  const { showModal } = useModals()\n  const { isClipboardGranted, isNoticationsGranted, arePermissionsLoaded, modalHidden } = usePermissions()\n  const { pathname } = useLocation()\n  const walletContainer = useRef()\n  const { isDappMode } = props.dappsCatalog\n  const routeMatch = useRouteMatch('/wallet/dapps')\n\n  const dapModeSidebar = useMemo(() => isDappMode && routeMatch, [isDappMode, routeMatch])\n\n  const isLoggedIn = useMemo(() => props.accounts.length > 0, [props.accounts])\n  const [advancedModeList, setAdvancedModeList] = useLocalStorage({ key: 'dAppsAdvancedMode', defaultValue: [] })\n  const [redisplayPermissionsModal, setRedisplayPermissionsModal] = useState(false)\n\n  const routes = [\n    {\n      path: '/dashboard/:tabId?/:page?',\n      component: <Dashboard\n        portfolio={props.portfolio}\n        selectedNetwork={props.network}\n        selectedAccount={props.selectedAcc}\n        accounts={props.accounts}\n        setNetwork={props.setNetwork}\n        privateMode={props.privateMode}\n        rewardsData={props.rewardsData}\n        addRequest={props.addRequest}\n        relayerURL={props.relayerURL}\n        useStorage={props.useStorage}\n        userSorting={props.userSorting}\n        setUserSorting={props.setUserSorting}\n        match={props.match}\n        showSendTxns={props.showSendTxns}\n      />\n    },\n    {\n      path: '/deposit',\n      component: <Deposit\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={props.network}\n        accounts={props.accounts}\n        addRequest={props.addRequest}\n        relayerURL={props.relayerURL}\n        portfolio={props.portfolio}\n        useStorage={props.useStorage}\n      />\n    },\n    {\n      path: '/transfer/:tokenAddressOrSymbol?',\n      component: <Transfer\n        portfolio={props.portfolio}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={{...props.network}}\n        addRequest={props.addRequest}\n        accounts={props.accounts}\n        addressBook={props.addressBook}\n        relayerURL={props.relayerURL}\n      />\n    },\n    {\n      path: '/cross-chain',\n      component: <CrossChain\n        addRequest={props.addRequest}\n        selectedAccount={props.selectedAcc}\n        portfolio={props.portfolio}\n        network={props.network}\n        relayerURL={props.relayerURL}\n      />\n    },\n    {\n      path: '/earn',\n      component: <Earn\n        portfolio={props.portfolio}\n        selectedNetwork={{ ...props.network }}\n        selectedAcc={props.selectedAcc}\n        rewardsData={props.rewardsData}\n        addRequest={props.addRequest}\n      />\n    },\n    {\n      path: '/security',\n      component: <Security\n        relayerURL={props.relayerURL}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={props.network}\n        accounts={props.accounts}\n        addRequest={props.addRequest}\n        showSendTxns={props.showSendTxns}\n        onAddAccount={props.onAddAccount}\n      />\n    },\n    {\n      path: '/transactions/:page?',\n      component: <Transactions\n        relayerURL={props.relayerURL}\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={props.network}\n        addRequest={props.addRequest}\n        eligibleRequests={props.eligibleRequests}\n        showSendTxns={props.showSendTxns}\n        setSendTxnState={props.setSendTxnState}\n      />\n    },\n    {\n      path: '/swap',\n      component: <Swap\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    },\n    {\n      path: '/dapps',\n      component: <DappsCatalog\n        network={props.network}\n        dappsCatalog={props.dappsCatalog}\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n      />\n    },\n    {\n      path: '/opensea',\n      component: <OpenSea\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    },\n    {\n      path: '/nft/:network/:collectionAddr/:tokenId',\n      component: <Collectible\n        selectedAcc={props.selectedAcc}\n        selectedNetwork={{...props.network}}\n        addRequest={props.addRequest}\n        accounts={props.accounts}\n        addressBook={props.addressBook}\n      />\n    },\n    {\n      path: '/gnosis/plugins/:plugin?',\n      component: <PluginGnosisSafeApps\n        gnosisConnect={props.gnosisConnect}\n        gnosisDisconnect={props.gnosisDisconnect}\n        selectedAcc={props.selectedAcc}\n        network={props.network}\n      />\n    },\n    {\n      path: '/gas-tank',\n      component: <Gas\n        selectedNetwork={{...props.network}}\n        relayerURL={props.relayerURL}\n        portfolio={props.portfolio}\n        selectedAccount={props.selectedAcc}\n        userSorting={props.userSorting}\n        setUserSorting={props.setUserSorting}\n        setGasTankState={props.setGasTankState}\n        gasTankState={props.gasTankState}\n      />\n    }\n  ]\n\n  const LoggedInGuard = () => (\n    !isLoggedIn ? <Redirect to=\"/add-account\"/> : null\n  )\n\n  const handlePermissionsModal = useCallback(async () => {\n    const account = props.accounts.find(({ id }) => id === props.selectedAcc)\n    if (!account) return\n\n    const relayerIdentityURL = `${props.relayerURL}/identity/${account.id}`\n\n    const areBlockedPermissions = arePermissionsLoaded\n      && ((!isFirefox() && !isClipboardGranted) || !isNoticationsGranted)\n    const showCauseOfPermissions = areBlockedPermissions && !modalHidden\n    const showCauseOfEmail = !!account.emailConfRequired\n    const showCauseOfBackupOptout = account.backupOptout\n\n    const permissionsModal = <PermissionsModal\n      relayerIdentityURL={relayerIdentityURL}\n      account={account}\n      onAddAccount={props.onAddAccount}\n      isCloseBtnShown={!showCauseOfBackupOptout}\n      isBackupOptout={!showCauseOfBackupOptout}\n      setRedisplayPermissionsModal={setRedisplayPermissionsModal}\n      showThankYouPage={props.showThankYouPage}\n    />\n\n    const isMobile = navigator.platform.includes('Android') || navigator.platform.includes('iOS')\n    if ((showCauseOfEmail || showCauseOfPermissions || showCauseOfBackupOptout) && !isMobile) showModal(permissionsModal, { disableClose: true })\n  }, [props.accounts, props.relayerURL, props.onAddAccount, props.showThankYouPage, props.selectedAcc, arePermissionsLoaded, isClipboardGranted, isNoticationsGranted, modalHidden, showModal])\n\n  useEffect(() => handlePermissionsModal(), [handlePermissionsModal])\n\n  useEffect(() => {\n    if (redisplayPermissionsModal) {\n      handlePermissionsModal()\n      setRedisplayPermissionsModal(false)\n    }\n  }, [handlePermissionsModal, redisplayPermissionsModal])\n\n  useEffect(() => {\n    const scrollTimeout = setTimeout(() => walletContainer.current && walletContainer.current.scrollTo({ top: 0, behavior: 'smooth' }), 0)\n    return () => clearTimeout(scrollTimeout)\n  }, [pathname])\n\n  useEffect(() => {\n    const unsupported = props.connections\n      .filter(({ session }) => session && session.peerMeta && unsupportedDApps.includes(session.peerMeta.url) && !advancedModeList.includes(session.peerMeta.url))\n\n    if (unsupported.length) showModal(<UnsupportedDAppsModal connections={unsupported} disconnect={props.disconnect} advancedModeList={advancedModeList} onContinue={setAdvancedModeList} />)\n  }, [props.connections, props.disconnect, showModal, advancedModeList, setAdvancedModeList])\n\n  return (\n    <div id=\"wallet\">\n      <SideBar match={props.match} portfolio={props.portfolio} hidePrivateValue={props.privateMode.hidePrivateValue} relayerURL={props.relayerURL} selectedNetwork={props.network} dappsCatalog={props.dappsCatalog} />\n      <TopBar {...props} />\n\n      <div id=\"wallet-container\" className={dapModeSidebar ? 'dapp-mode' : ''} ref={walletContainer}>\n        <div id=\"wallet-container-inner\">\n          <Suspense fallback={<Loading />}>\n            <Switch>\n              {\n                routes.map(({ path, component }) => (\n                  <Route exact path={props.match.url + path} key={path}>\n                    <LoggedInGuard/>\n                      { component ? component : null }\n                  </Route>\n                ))\n              }\n              <Route path={props.match.url + '/*'}>\n                <Redirect to={props.match.url + '/dashboard'} />\n              </Route>\n              <Route path={props.match.url}>\n                <LoggedInGuard/>\n              </Route>\n            </Switch>\n          </Suspense>\n        </div>\n      </div>\n    </div>\n  );\n}\n","const customIcons = {\n    '0xb468a1e5596cfbcdf561f21a10490d99b4bb7b68': 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/5a/Jeff_Sessions_with_Elmo_and_Rosita_%28cropped%29.jpg/220px-Jeff_Sessions_with_Elmo_and_Rosita_%28cropped%29.jpg', // TEST Polygon ELMO token,\n    '0x88800092ff476844f74dc2fc427974bbee2794ae': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/ambire_logo_white_bg_250x250.png', // Ambire Wallet Token\n    '0x47cd7e91c3cbaaf266369fe8518345fc4fc12935': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/xwallet_250x250.png', //xWallet\n    '0xb6456b57f03352be48bf101b46c1752a0813491a': 'https://raw.githubusercontent.com/AmbireTech/adex-brand/master/logos/vaporwave-adex-2.png', // ADX-STAKING\n    '0xd9a4cb9dc9296e111c66dfacab8be034ee2e1c2c': 'https://raw.githubusercontent.com/AmbireTech/adex-brand/master/logos/ADX-loyalty%40256x256.png', // ADX-LOYALTY\n    '0xec3b10ce9cabab5dbf49f946a623e294963fbb4e': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/xwallet_250x250.png', // Polygons test xWallet\n    '0xe9415e904143e42007865e6864f7f632bd054a08': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/logos/Ambire_logo_250x250.png', // Polygons test Wallet\n    '0xade00c28244d5ce17d72e40330b1c318cd12b7c3': 'https://raw.githubusercontent.com/AmbireTech/ambire-brand/main/official-logos/Ambire-AdEx/Ambire_AdEx_Symbol_color_white_bg.png' //ADX-TOKEN\n}\n\nconst zapperStorageTokenIcons = 'https://storage.googleapis.com/zapper-fi-assets/tokens'\n\nexport function getTokenIcon(networkId = '', address = '') {\n    const addr = address.toLowerCase()\n    const net = networkId.toLowerCase()\n    return customIcons[addr] || `${zapperStorageTokenIcons}/${net}/${addr}.png`\n}\n","export function formatFloatTokenAmount(amount, useGrouping = true, maximumFractionDigits = 18) {\n    if (isNaN(amount) || isNaN(parseFloat(amount)) || !(typeof amount === 'number' || typeof amount === 'string')) return amount\n\n    try {\n        const minimumFractionDigits = Math.min(2, maximumFractionDigits || 0)\n        return ((typeof amount === 'number') ? amount : parseFloat(amount))\n            .toLocaleString(undefined,\n                {\n                    useGrouping,\n                    maximumFractionDigits: Math.max(minimumFractionDigits, maximumFractionDigits),\n                    minimumFractionDigits\n                })\n    } catch (err) {\n        console.error(err)\n        return amount\n    }\n}\n\n// Round a floating point number to a specific decimal places, i.e. 1.156 => 1.16\nexport function roundFloatingNumber(number, places = 2) {\n  const decimals = Math.pow(10, places)\n\n  return Math.round((number + Number.EPSILON) * decimals) / decimals\n}\n","import { Client } from 'gridplus-sdk'\nimport { ethers } from 'ethers'\nimport { serialize } from '@ethersproject/transactions'\n\nconst crypto = require('crypto')\nconst HARDENED_OFFSET = 0x80000000\n\nconst getAddressesReqOpts = {\n    startPath: [\n        HARDENED_OFFSET + 44,\n        HARDENED_OFFSET + 60,\n        HARDENED_OFFSET,\n        0,\n        0,\n    ],\n    n: 10,\n}\n\nconst latticeInit = commKey => {\n    const clientConfig = {\n        name: 'Ambire Wallet',\n        crypto: crypto,\n        privKey: commKey,\n    }\n\n    return new Client(clientConfig)\n}\n\nconst latticeConnect = async(client, deviceId) => {\n    return await new Promise((resolve, reject) => {\n        client.connect(deviceId, (err, isPaired) => {\n            if (err) {\n                reject(`Lattice connect: ${err} Or check if the DeviceID is correct.`)\n                return\n            }\n            \n            resolve({ isPaired: !!isPaired, errConnect: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { isPaired: false, errConnect: err }\n    })\n}\n\nconst latticePair = async(client, secret) => {\n    return await new Promise((resolve, reject) => {\n        client.pair(secret, (err, hasActiveWallet) => {\n            if (err) {\n                reject(`Lattice connect: ${err}`)\n                return\n            }\n            \n            resolve({ hasActiveWallet, errPair: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { hasActiveWallet: false, errPair: err }\n    })\n}\n\nconst latticeGetAddresses = async client => {\n    return await new Promise((resolve, reject) => {\n        client.getAddresses(getAddressesReqOpts, (err, res) => {\n            if (err) {\n                reject(`Lattice get addresses: ${err}`)\n                return\n            }\n\n            if (!res) throw new Error('Lattice could not get the addresses.')\n\n            resolve({res, errGetAddresses: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { res: null, errGetAddresses: err }\n    })\n}\n\nconst latticeSignMessage = async(client, hash) => {\n    const dataMsg = {\n        protocol: 'signPersonal',\n        payload: ethers.utils.hexlify(hash),\n        signerPath: [HARDENED_OFFSET+44, HARDENED_OFFSET+60, HARDENED_OFFSET, 0, 0],\n    }\n\n    const signOptsMsg = {\n        currency: 'ETH_MSG',\n        data: dataMsg,\n    }\n\n    \n    return await new Promise((resolve, reject) => {\n        client.sign(signOptsMsg, (err, signedTx) => {\n            if (err) {\n                reject(err)\n                return\n            }\n\n            if (!signedTx) throw new Error('Lattice could not sign the message.')\n            \n            resolve({ signedMsg: '0x' + signedTx.sig.r + signedTx.sig.s + signedTx.sig.v[0].toString(16), errSignMessage: false })  \n        })\n    }).catch(err => {\n        console.error(err)\n        return { signedMsg: null, errSignMessage: err }\n    })\n}\n\nconst latticeSignMessage712 = async(client, message) => {\n    const reqData = {\n        currency: 'ETH_MSG',\n        data: {\n          signerPath: [HARDENED_OFFSET+44, HARDENED_OFFSET+60, HARDENED_OFFSET, 0, 0],\n          protocol: 'eip712', // You must use this string to specify this protocol\n          payload: message\n        }\n      }\n\n    return await new Promise((resolve, reject) => {\n        client.sign(reqData, (err, signedTx) => {\n            if (err) {\n                reject(err)\n                return\n            }\n\n            if (!signedTx) throw new Error('Lattice could not sign the message.')\n            \n            resolve({ signedMsg: '0x' + signedTx.sig.r + signedTx.sig.s + signedTx.sig.v[0].toString(16), errSignMessage: false })  \n        })\n    }).catch(err => {\n        console.error(err)\n        return { signedMsg: null, errSignMessage: err }\n    })\n}\n\nconst latticeSignTransaction = async(client, txn, chainId) => {\n    const { to, data, gas, gasPrice, nonce, value = 0 } = txn\n    const unsignedTxObj = {\n        ...txn,\n        gasLimit: txn.gasLimit || txn.gas,\n        chainId\n    }\n    delete unsignedTxObj.from\n    delete unsignedTxObj.gas\n\n    const txData = {\n        nonce,\n        gasLimit: gas || txn.gasLimit,\n        gasPrice,\n        to,\n        value,\n        data: data || '',\n        // -- m/44'/60'/0'/0/0\n        signerPath: [HARDENED_OFFSET+44, HARDENED_OFFSET+60, HARDENED_OFFSET, 0, 0],\n        chainId,\n        useEIP155: true,\n    }\n\n    const signOpts = {\n        currency: 'ETH',\n        data: txData,\n    }\n\n    \n    return await new Promise((resolve, reject) => {\n        client.sign(signOpts, (err, signedTx) => {\n            if (err) {\n                reject(err)\n                return\n            }\n\n            if (!signedTx) throw new Error('Lattice could not sign the message.')\n            \n            delete unsignedTxObj.v\n            const serializedSigned = serialize(unsignedTxObj, {\n                r: '0x' + signedTx.sig.r,\n                s: '0x' + signedTx.sig.s,\n                v: signedTx.sig.v[0].toString(16)\n            })\n            \n            resolve({ serializedSigned, errSignTxn: false })\n        })\n    }).catch(err => {\n        console.error(err)\n        return { serializedSigned: null, errSignTxn: err }\n    })\n}\n\nexport { \n    latticeInit,\n    latticeConnect,\n    latticePair,\n    latticeGetAddresses,\n    latticeSignMessage,\n    latticeSignMessage712,\n    latticeSignTransaction\n }\n","import './SelectSignerAccountModal.scss'\n\nimport { useState } from 'react'\nimport { useModals } from 'hooks'\nimport { Modal, Button } from 'components/common'\nimport { HiOutlineExternalLink } from 'react-icons/hi'\nimport { MdKeyboardArrowLeft, MdKeyboardArrowRight } from 'react-icons/md'\n\nconst SelectSignerAccountModal = ({\n  signersToChoose,\n  onSignerAddressClicked,\n  selectedNetwork = { explorerUrl: 'https://etherscan.io' },\n  description = '',\n  isCloseBtnShown = true,\n  onCloseBtnClicked\n}) => {\n  const { hideModal } = useModals()\n  const [currentPage, setCurrentPage] = useState(0)\n\n  const paginate = (arr, size) => {\n    return arr.reduce((acc, val, i) => {\n      let idx = Math.floor(i / size)\n      let page = acc[idx] || (acc[idx] = [])\n      page.push(val)\n\n      return acc\n    }, [])\n  }\n\n  let pages = []\n  const pageSize = 5\n\n  pages = paginate(signersToChoose, pageSize)\n\n  const nextPage = () => {\n    if (currentPage === pages.length - 1) return\n    setCurrentPage(prevState => prevState + 1)\n  }\n\n  const prevPage = () => {\n    if (currentPage === 0) return\n    setCurrentPage(prevState => prevState - 1)\n  }\n\n  const formatAddress = addr => {\n    return addr.slice(0, 5) + '...' + addr.slice(addr.length - 4, addr.length)\n  }\n\n  const prevBtnDisabled = currentPage === 0\n  const nextBtnDisabled = currentPage === pages.length - 1\n\n  const onAddressClicked = (addr, index) => {\n    onSignerAddressClicked({\n      address: addr,\n      index: index,\n    })\n\n    hideModal()\n  }\n\n  return (\n    <Modal id=\"select-signer-modal\" title=\"Select a signer account\" isCloseBtnShown={isCloseBtnShown} onClose={onCloseBtnClicked}> \n      <div className=\"intro\">{description}</div>\n      <div className=\"loginSignupWrapper chooseSigners\">\n        <ul id=\"signersToChoose\">\n          {signersToChoose\n            ? pages[currentPage].map((addr, index) => (\n                <li\n                  key={addr}\n                  className={!(index % 2) ? ' odd-rows-bg' : ''}\n                  onClick={() =>\n                    onAddressClicked(addr, currentPage * pageSize + index)\n                  }\n                >\n                  <span className=\"index-row\">\n                    {currentPage * pageSize + index + 1}\n                  </span>\n                  <span>\n                    {formatAddress(addr)}\n                  </span>\n                  <a\n                    href={selectedNetwork.explorerUrl + '/address/' + addr}\n                    target='_blank'\n                    rel='noreferrer'\n                    onClick={e => e.stopPropagation()}\n                  >\n                    <HiOutlineExternalLink size={25} />\n                  </a>\n                </li>\n              ))\n            : null}\n        </ul>\n        <div className=\"pages\">\n          {currentPage + 1}/{pages.length}\n        </div>\n        <div className=\"buttons\">\n          <Button disabled={prevBtnDisabled} icon={<MdKeyboardArrowLeft/>} small clear type=\"button\" onClick={prevPage}>\n            Previous page\n          </Button>\n          <Button disabled={nextBtnDisabled} iconAfter={<MdKeyboardArrowRight/>} small clear type=\"button\" onClick={nextPage}>\n            Next page\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  )\n}\n\nexport default SelectSignerAccountModal\n","import './EarnDetailsModal.scss'\n\nimport { MdClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { Modal, Button } from 'components/common'\n\nconst EarnDetailsModal = ({ title = 'Details', description = '' }) => {\n    const { hideModal } = useModals()\n    const buttons = (<Button clear small icon={<MdClose />} onClick={hideModal}>Close</Button>)\n   \n    return (\n        <Modal id=\"wallet-more-details-modal\" title={title} buttons={buttons}>\n            <p>{description}</p>\n        </Modal>\n    )\n}\n\nexport default EarnDetailsModal\n","import './PermissionsModal.scss'\n\nimport { useState, useEffect, useCallback } from 'react'\nimport { MdCheck, MdClose, MdOutlineCheck } from 'react-icons/md'\nimport { useModals, usePermissions } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { askForPermission } from 'lib/permissions'\nimport { Modal, Toggle, Button, Checkbox, ToolTip } from 'components/common'\nimport { isFirefox } from 'lib/isFirefox'\nimport { fetchGet } from 'lib/fetch'\nimport { AiOutlineReload } from 'react-icons/ai'\nimport {\n    BsFileEarmarkArrowDownFill,\n    BsFileEarmarkTextFill,\n} from 'react-icons/bs'\nimport { PaperBackupModal } from 'components/Modals'\nimport accountPresets from 'ambire-common/src/constants/accountPresets'\n\nconst toastErrorMessage = name => `You blocked the ${name} permission. Check your browser permissions tab.`\n\nconst PermissionsModal = ({ relayerIdentityURL, account, onAddAccount, isCloseBtnShown, isBackupOptout, setRedisplayPermissionsModal, showThankYouPage }) => {\n    const { hideModal, showModal } = useModals()\n    const { isNoticationsGranted, isClipboardGranted, modalHidden, setModalHidden } = usePermissions()\n    const { addToast } = useToasts()\n    const [isEmailConfirmed, setEmailConfirmed] = useState(false)\n    const [isEmailResent, setEmailResent] = useState(false)\n    const [isJsonBackupDownloaded, setIsJsonBackupDownloaded] = useState(isBackupOptout)\n    const [resendTimeLeft, setResendTimeLeft] = useState(60000)\n\n    setRedisplayPermissionsModal(false)\n\n    const days = Math.ceil(accountPresets.quickAccTimelock / 86400)\n    const areBlockedPermissions = (!isFirefox() && !isClipboardGranted) || !isNoticationsGranted\n    const isAccountNotConfirmed = account.emailConfRequired && !isEmailConfirmed\n    const buttonDisabled = isAccountNotConfirmed || (!modalHidden && areBlockedPermissions)\n    const sendConfirmationEmail = async () => {\n        try {\n            const response = await fetchGet(relayerIdentityURL + '/resend-verification-email')\n            if (!response.success) throw new Error('Relayer did not return success.')\n\n            addToast('Verification email sent!')\n            setEmailResent(true)\n        } catch(e) {\n            console.error(e)\n            addToast('Could not resend verification email.' + e.message || e, { error: true })\n            setEmailResent(false)\n        }\n    }\n\n    const checkEmailConfirmation = useCallback(async () => {\n        try {\n            const identity = await fetchGet(relayerIdentityURL)\n            if (identity) {\n                const { emailConfirmed } = identity.meta\n                const isConfirmed = !!emailConfirmed\n                setEmailConfirmed(isConfirmed)\n\n                if (isConfirmed && account.emailConfRequired) {\n                    onAddAccount({\n                        ...account,\n                        emailConfRequired: false\n                    })\n                }\n            }\n        } catch(e) {\n            console.error(e);\n            addToast('Could not check email confirmation.', { error: true })\n        }\n    }, [relayerIdentityURL, account, onAddAccount, addToast])\n\n    const requestNotificationsPermission = async () => {\n        const status = await askForPermission('notifications')\n        if (!status) addToast(toastErrorMessage('Notifications'), { error: true })\n    }\n\n    const requestClipboardPermission = async () => {\n        const status = await askForPermission('clipboard-read')\n        if (!status) addToast(toastErrorMessage('Clipboard'), { error: true })\n    }\n\n    useEffect(() => {\n        !isEmailConfirmed && checkEmailConfirmation()\n        const emailConfirmationInterval = setInterval(() => !isEmailConfirmed && checkEmailConfirmation(), 3000)\n        return () => clearInterval(emailConfirmationInterval)\n    }, [isEmailConfirmed, checkEmailConfirmation])\n\n    const handleDoneOrIgnoreBtnsClicked = () => {\n        hideModal()\n        if (showThankYouPage) openThankYouPage()\n    }\n\n    const handleOnClose = () => {\n        if (showThankYouPage) openThankYouPage()\n    }\n    const openThankYouPage = () => window.open(\"https://www.ambire.com/thankyou\", \"_blank\")\n\n    const buttons = isJsonBackupDownloaded ? (<>\n        <Button clear small icon={<MdClose/>} disabled={isAccountNotConfirmed} onClick={handleDoneOrIgnoreBtnsClicked}>Ignore</Button>\n        <Button small icon={<MdCheck/>} disabled={buttonDisabled} onClick={handleDoneOrIgnoreBtnsClicked}>Done</Button>\n    </>) : (<>\n        <Button clear small icon={<MdClose/>} disabled={true} onClick={handleDoneOrIgnoreBtnsClicked}>Ignore</Button>\n        <Button small icon={<MdCheck/>} disabled={true} onClick={handleDoneOrIgnoreBtnsClicked}>Done</Button>\n    </>)\n\n    const downloadFile = ({ data, fileName, fileType }) => {\n        const blob = new Blob([data], { type: fileType })\n\n        const a = document.createElement('a')\n        a.download = fileName\n        a.href = window.URL.createObjectURL(blob)\n        const clickEvt = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true,\n        })\n        a.dispatchEvent(clickEvt)\n        a.remove()\n    }\n\n    const handlePaperBackupClicked = () => {\n        showModal(<PaperBackupModal\n          selectedAccount={account}\n          accounts={[account]}\n          onAddAccount={onAddAccount}\n          modalCloseHandler={() => {\n            setRedisplayPermissionsModal(true)\n          }}\n        />)\n    }\n\n    const handleExportClicked = () => {\n        setIsJsonBackupDownloaded(true)\n        let copiedAcc = { ...account }\n        console.log('copiedAcc',copiedAcc)\n        if (typeof copiedAcc.emailConfRequired !== 'undefined') delete copiedAcc.emailConfRequired\n        if (typeof copiedAcc.backupOptout !== 'undefined') delete copiedAcc.backupOptout\n        if (typeof copiedAcc.cloudBackupOptout !== 'undefined') delete copiedAcc.cloudBackupOptout\n\n        downloadFile({\n            data: JSON.stringify(copiedAcc),\n            fileName: `${copiedAcc.id}.json`,\n            fileType: 'text/json',\n        })\n\n        onAddAccount({\n            ...account,\n            backupOptout: false\n        })\n    }\n\n    useEffect(() => {\n        const resendInterval = setInterval(() => setResendTimeLeft(resendTimeLeft => resendTimeLeft > 0 ? resendTimeLeft - 1000 : 0), 1000)\n        return () => clearTimeout(resendInterval)\n    }, [])\n\n    return (\n        <Modal id=\"permissions-modal\" title=\"We need a few things 🙏\" buttons={buttons} isCloseBtnShown={isCloseBtnShown} onClose={handleOnClose}>\n            {\n                account.email ?\n                    <div className=\"permission\">\n                    <div className=\"details\">\n                        <div className=\"name\">Email Verification</div>\n                        <div className=\"description\">\n                            <b>Confirming your email is mandatory so that we can make sure your account can be recovered in case access is lost.</b>\n                            &nbsp;We already sent an email, please check your inbox.\n                        </div>\n                    </div>\n                    <div className=\"status\">\n                        {\n                            !isEmailConfirmed ?\n                                <label>Waiting for<br/>your confirmation</label>\n                                :\n                                <span className=\"check-icon\"><MdOutlineCheck/></span>\n                        }\n                        {\n                            !isEmailConfirmed && !isEmailResent ?\n                                <ToolTip label={`Will be available in ${resendTimeLeft / 1000} seconds`} disabled={resendTimeLeft === 0}>\n                                    <Button mini clear icon={<AiOutlineReload/>} disabled={resendTimeLeft !== 0} onClick={sendConfirmationEmail}>Resend</Button>\n                                </ToolTip>\n                                :\n                                null\n                        }\n                    </div>\n                </div>\n                :\n                null\n            }\n            <div className=\"permission\">\n                <div className=\"details\">\n                    <div className=\"name\">Notifications Permission</div>\n                    <div className=\"description\">\n                        Needed to draw your attention to Ambire Wallet when there is a transaction signing request.<br/>\n                        You can also click the notifications to go directly to the Ambire tab.<br/>\n                        We do not send any other notifications.\n                    </div>\n                </div>\n                <Toggle checked={isNoticationsGranted} onChange={() => requestNotificationsPermission()}/>\n            </div>\n            <div className={`permission ${isFirefox() ? 'disabled' : ''}`}>\n                <div className=\"details\">\n                    <div className=\"name\">Clipboard Permission { isFirefox() ? <span className=\"unavailable\">(Unavailable in Firefox)</span> : null }</div>\n                    <div className=\"description\">\n                        Needed so that dApps can be connected automatically just by copying their WalletConnect URL.\n                    </div>\n                    {\n                        isFirefox() ?\n                            <div className=\"unavailable\">\n                                Without this, you can still use Ambire, but you will have to paste URLs manually\n                            </div> : null\n                    }\n                </div>\n                <Toggle checked={isClipboardGranted} onChange={() => requestClipboardPermission()}/>\n            </div>\n            {!isBackupOptout && <div className=\"permission\">\n                <div className=\"details\">\n                    <div className=\"name\">Download a backup</div>\n                    <div className=\"description\">\n                        In case you forget your password or lose your backup, <br/>\n                        you will have to wait {days} days and pay the recovery fee to restore access to your account.\n                    </div>\n                </div>\n                <div className=\"status\">\n                    {isJsonBackupDownloaded ?\n                        (<span className=\"check-icon\"><MdOutlineCheck/></span>) :\n                        (\n                            <div className='export-buttons'>\n                                <Button small onClick={handleExportClicked} icon={<BsFileEarmarkArrowDownFill />}>JSON Export</Button>\n                                <Button small onClick={handlePaperBackupClicked} icon={<BsFileEarmarkTextFill />}>Paper Export</Button>\n                            </div>\n                        )\n                    }\n                </div>\n            </div>}\n            {isAccountNotConfirmed\n                ? (<></>)\n                // Not gonna show this at all if the email is not confirmed\n                : (<Checkbox\n                    label=\"I understand, do not show this again.\"\n                    checked={modalHidden}\n                    onChange={({ target }) => setModalHidden(target.checked)}/>)\n            }\n            {\n                !isBackupOptout ? <p className=\"download-backup\">You have to download a backup of you profile before you can continue</p> : null\n            }\n        </Modal>\n    )\n}\n\nexport default PermissionsModal\n","import './InputModal.scss'\n\nimport { createRef, useState } from 'react'\nimport { MdCheck, MdClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { Modal, TextInput, Button } from \"components/common\"\n\nconst InputModal = ({ title, inputs, onClose }) => {\n    const { hideModal } = useModals()\n    const [isDisabled, setDisabled] = useState(true)\n\n    const inputsFields = inputs.map(input => ({ ...input, ref: createRef() }))\n\n    const onInput = () => {\n        const isFormValid = inputsFields\n            .map(({ ref, validate }) => ref.current.value && (validate ? validate(ref.current.value) : true))\n            .every(v => v === true)\n        setDisabled(!isFormValid)\n    }\n\n    const onConfirm = () => {\n        const values = inputsFields.map(({ ref }) => ref.current.value)\n        onClose && onClose(values)\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear small icon={<MdClose/>} onClick={hideModal}>Cancel</Button>\n        <Button small icon={<MdCheck/>} disabled={isDisabled} onClick={onConfirm}>Confirm</Button>\n    </>\n\n    return (\n        <Modal id=\"input-modal\" title={title} buttons={buttons}>\n            {\n                inputsFields.map(({ id, label, placeholder, ref }) => (\n                    <TextInput key={id || label} label={label} placeholder={placeholder} onInput={onInput} ref={ref}/>\n                ))\n            }\n        </Modal>\n    )\n}\n\nexport default InputModal ","import './ResetPasswordModal.scss'\n\nimport { Wallet } from 'ethers'\nimport { id } from 'ethers/lib/utils'\nimport { useState, useMemo, createRef, useEffect, useCallback } from 'react'\nimport { Modal, Radios, Checkbox, Button, ToolTip, Loading, PasswordInput } from 'components/common'\nimport { MdOutlineCheck, MdOutlineClose, MdOutlineHelpOutline } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport accountPresets from 'ambire-common/src/constants/accountPresets'\nimport { fetchPost } from 'lib/fetch'\nimport buildRecoveryBundle from 'lib/recoveryBundle'\n\nconst ResetPassword = ({ account, selectedNetwork, relayerURL, onAddAccount, showSendTxns }) => {\n    const { hideModal } = useModals()\n    const { addToast } = useToasts()\n\n    const [isLoading, setLoading] = useState(false)\n    const [type, setType] = useState(null)\n    const [oldPassword, setOldPassword] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [newPasswordConfirm, setNewPasswordConfirm] = useState('')\n    const [disabled, setDisabled] = useState(true)\n\n    const [passwordsMustMatchWarning, setPasswordsMustMatchWarning] = useState(false)\n    const [passwordsLengthWarning, setPasswordsLengthWarning] = useState(false)\n    \n    const radios = useMemo(() => [\n        {\n            label: 'Change the password on this device and Ambire Cloud. Best if you just want to routinely change the password.',\n            value: 'change',\n            disabled: !account.primaryKeyBackup\n        },\n        {\n            label: 'Reset the key and password: takes 3 days. Chose this if you\\'ve forgotten the old password.',\n            value: 'reset'\n        }\n    ], [account.primaryKeyBackup])\n\n    const checkboxes = useMemo(() => ([\n        [\n            {\n                label: \n                    <>\n                        I understand the following: the new password will be required for subsequent logins, but places where you're already logged in will work with the old password until you re-login.\n                        <ToolTip\n                            label=\"This is because, for security reasons, the encrypted key is retrieved only when logging in, so we have no way of forcing every device to update it.\n                            If you want to disable access for other devices, consider the next option.\">\n                            <MdOutlineHelpOutline/>\n                        </ToolTip>\n                    </>,\n                ref: createRef()\n            }\n        ],\n        [\n            {\n                label: <>\n                    I understand I am only changing the password on the {selectedNetwork.name} network.\n                    <ToolTip\n                        label=\"You will be able to trigger the change for other networks by switching the network\">\n                        <MdOutlineHelpOutline/>\n                    </ToolTip>\n                </>,\n                ref: createRef()\n            },\n            {\n                label: 'I understand I need to wait for 3 days for the change to be finalized.',\n                ref: createRef()\n            }\n        ]\n    ]), [selectedNetwork.name])\n\n    const onRadioChange = value => {\n        setType(value)\n        setOldPassword('')\n        setNewPassword('')\n        setNewPasswordConfirm('')\n        setPasswordsMustMatchWarning(false)\n        setPasswordsLengthWarning(false)\n    }\n\n    const changePassword = async () => {\n        setLoading(true)\n        // let react do one tick of rerendering before we block on .encrypt/.signMessage\n        await new Promise(resolve => setTimeout(resolve))\n\n        try {\n            const wallet = await Wallet.fromEncryptedJson(JSON.parse(account.primaryKeyBackup), oldPassword)\n            const primaryKeyBackup = JSON.stringify(await wallet.encrypt(newPassword, accountPresets.encryptionOpts))\n            const sig = await wallet.signMessage(JSON.stringify({ primaryKeyBackup }))\n            const resp = await fetchPost(`${relayerURL}/identity/${account.id}/modify`, { primaryKeyBackup, sig })\n\n            if (resp.success) {\n                onAddAccount({ ...account, primaryKeyBackup })\n                addToast('You password was successfully updated')\n                setLoading(false)\n                hideModal()\n            } else {\n                throw new Error(`Unable to update account: ${resp.message || 'unknown error'}`)\n            }\n        } catch(e) {\n            console.error(e)\n            addToast('Changing password error: '+(e.message || e), { error: true })\n        }\n\n        setLoading(false)\n    }\n\n    const resetPassword = async () => {\n        setLoading(true)\n        // let react do one tick of rerendering before we block on .encrypt/.signMessage\n        await new Promise(resolve => setTimeout(resolve))\n\n        try {\n            // @TODO: move extraEntropy to a util\n            const extraEntropy = id(account.email + ':' + Date.now() + ':' + Math.random() + ':' + (typeof performance === 'object' && performance.now()))\n            const firstKeyWallet = Wallet.createRandom({ extraEntropy })\n\n            const { quickAccManager, quickAccTimelock, encryptionOpts } = accountPresets\n            const signer = {\n                quickAccManager,\n                timelock: quickAccTimelock,\n                one: firstKeyWallet.address,\n                two: account.signer.two,\n                preRecovery: account.signer\n            }\n\n            const primaryKeyBackup = JSON.stringify(await firstKeyWallet.encrypt(newPassword, encryptionOpts))\n\n            const bundle = buildRecoveryBundle(account.id, selectedNetwork.id, signer.preRecovery, { signer, primaryKeyBackup })\n            hideModal()\n            showSendTxns(bundle, true)\n            onAddAccount({\n                ...account,\n                primaryKeyBackup,\n                signer,\n                preRecoveryPrimaryKeyBackup: account.primaryKeyBackup\n            }, { select: true })\n        } catch(e) {\n            console.error(e);\n            addToast('Reset password error: ' + (e.message || e), { error: true })\n        }\n\n        setLoading(false)\n    }\n\n    const validateForm = useCallback(() => {\n        const arePasswordsMatching = newPassword === newPasswordConfirm\n        let areFieldsNotEmpty = false\n        let isLengthValid = false\n        let areCheckboxesChecked = false\n        \n        if (type === 'change') {\n            areFieldsNotEmpty = oldPassword.length && newPassword.length && newPasswordConfirm.length\n            isLengthValid = oldPassword.length >= 8 && newPassword.length >= 8 && newPasswordConfirm.length >= 8\n            areCheckboxesChecked = checkboxes[0].every(({ ref }) => ref.current && ref.current.checked)\n        }\n\n        if (type === 'reset') {\n            areFieldsNotEmpty = newPassword.length && newPasswordConfirm.length\n            isLengthValid = newPassword.length >= 8 && newPasswordConfirm.length >= 8\n            areCheckboxesChecked = checkboxes[1].every(({ ref }) => ref.current && ref.current.checked)\n        }\n\n        setDisabled(!isLengthValid || !arePasswordsMatching || !areCheckboxesChecked)\n\n        if (areFieldsNotEmpty) {\n            setPasswordsLengthWarning(!isLengthValid)\n            setPasswordsMustMatchWarning(!arePasswordsMatching)\n        } else {\n            setPasswordsLengthWarning(false)\n            setPasswordsMustMatchWarning(false)\n        }\n    }, [checkboxes, type, oldPassword, newPassword, newPasswordConfirm])\n\n    useEffect(() => validateForm(), [isLoading, validateForm, oldPassword, newPassword, newPasswordConfirm])\n\n    const modalButtons = <>\n        <Button icon={<MdOutlineClose/>} clear onClick={() => hideModal()}>Cancel</Button>\n        <Button icon={<MdOutlineCheck/>} disabled={disabled} onClick={() => type === 'change' ? changePassword(): resetPassword()}>Confirm</Button>\n    </>\n\n    return (\n        <Modal id=\"reset-password-modal\" title=\"Reset Password\" buttons={modalButtons}>\n            {\n                isLoading ?\n                    <div id=\"loading-overlay\">\n                        <Loading/>\n                    </div>\n                    :\n                    null\n            }\n            <Radios radios={radios} onChange={onRadioChange}/>\n            {\n                type === 'change' ?\n                    <form>\n                        <PasswordInput autocomplete=\"current-password\" placeholder=\"Old Password\" onInput={value => setOldPassword(value)}/>\n                        <PasswordInput peakPassword autocomplete=\"new-password\" placeholder=\"New Password\" onInput={value => setNewPassword(value)}/>\n                        <PasswordInput autocomplete=\"new-password\" placeholder=\"Confirm New Password\" onInput={value => setNewPasswordConfirm(value)}/>\n                        {\n                            checkboxes[0].map(({ label, ref }, i) => (\n                                <Checkbox key={`checkbox-${i}`} ref={ref} label={label} onChange={() => validateForm()}/>\n                            ))\n                        }\n                    </form> : null\n            }\n            {\n                type === 'reset' ?\n                    <form>\n                        <PasswordInput peakPassword autocomplete=\"new-password\" placeholder=\"New Password\" onInput={value => setNewPassword(value)}/>\n                        <PasswordInput autocomplete=\"new-password\" placeholder=\"Confirm New Password\" onInput={value => setNewPasswordConfirm(value)}/>\n                        {\n                            checkboxes[1].map(({ label, ref }, i) => (\n                                <Checkbox key={`checkbox-${i}`} ref={ref} label={label} onChange={() => validateForm()}/>\n                            ))\n                        }\n                    </form> : null\n            }\n            <div id=\"warnings\">\n                {\n                    passwordsMustMatchWarning ?\n                        <div className=\"warning\">Passwords must match</div> : null\n                }\n                {\n                    passwordsLengthWarning ?\n                        <div className=\"warning\">Password length must be greater than 8 characters</div> : null\n                }\n            </div>\n        </Modal>\n    )\n}\n\nexport default ResetPassword","import './AddTokenModal.scss'\n\nimport { Contract } from 'ethers';\nimport { formatUnits, Interface } from 'ethers/lib/utils';\nimport ERC20ABI from 'adex-protocol-eth/abi/ERC20'\nimport { isValidAddress } from 'ambire-common/src/services/address';\nimport { Button, Loading, Modal, TextInput } from 'components/common'\nimport { useState } from 'react';\nimport { useToasts } from 'hooks/toasts';\nimport { MdOutlineAdd, MdOutlineClose, MdOutlineRemove } from 'react-icons/md';\nimport { useModals } from 'hooks';\nimport { getProvider } from 'lib/provider'\nimport { getTokenIcon } from 'lib/icons'\n\nconst ERC20Interface = new Interface(ERC20ABI)\n\nconst AddTokenModal = ({ network, account, portfolio }) => {\n    const { addToast } = useToasts()\n    const { hideModal } = useModals()\n\n    const { extraTokens, onAddExtraToken, onRemoveExtraToken } = portfolio\n\n    const [loading, setLoading] = useState(false)\n    const [tokenDetails, setTokenDetails] = useState(null)\n    const [showError, setShowError] = useState(false)\n\n    const disabled = !tokenDetails || !(tokenDetails.symbol && tokenDetails.decimals)\n\n    const onInput = async address => {\n        setTokenDetails(null)\n\n        if (!isValidAddress(address)) return \n        setLoading(true)\n        setShowError(false)\n\n        try {\n            const provider = getProvider(network.id)\n            const tokenContract = new Contract(address, ERC20Interface, provider)\n            \n            const [balanceOf, name, symbol, decimals] = await Promise.all([\n                tokenContract.balanceOf(account),\n                tokenContract.name(),\n                tokenContract.symbol(),\n                tokenContract.decimals()\n            ])\n\n            const balance = formatUnits(balanceOf, decimals)\n            setTokenDetails({\n                account,\n                address: address.toLowerCase(),\n                network: network.id,\n                balance,\n                balanceRaw: balanceOf.toString(),\n                tokenImageUrl: getTokenIcon(network.id, address),\n                name,\n                symbol,\n                decimals\n            })\n        } catch(e) {\n            console.error(e)\n            addToast('Failed to load token info', { error: true })\n            setShowError(true)\n        }\n\n        setLoading(false)\n    }\n\n    const addToken = () => {\n        onAddExtraToken(tokenDetails)\n        hideModal()\n    }\n\n    const removeToken = address => {\n        onRemoveExtraToken(address)\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n        <Button icon={<MdOutlineAdd/>} disabled={disabled} onClick={addToken}>Add</Button>\n    </>\n    const tokenStandard = network.id === 'binance-smart-chain' ? 'a BEP20' : (\n        network.id === 'ethereum'\n            ? 'an ERC20'\n            : 'a valid'\n    )\n\n    return (\n        <Modal id=\"add-token-modal\" title=\"Add Token\" buttons={buttons}>\n            <TextInput\n                label=\"Token Address\"\n                placeholder=\"0x...\"\n                onInput={value => onInput(value)}\n            />\n            {\n                showError ? \n                    <div className=\"validation-error\">\n                        The address you entered does not appear to correspond to {tokenStandard} token on { network.name }.\n                    </div>\n                    :\n                    null\n            }\n            {\n                loading ?\n                    <Loading/>\n                    :\n                        !showError && tokenDetails ? \n                            <div className=\"token-details\">\n                                <div className=\"info\">\n                                    <div className=\"icon\" style={{backgroundImage: `url(${tokenDetails.icon})`}}/>\n                                    <div className=\"name\">\n                                        { tokenDetails.name } <span>({ tokenDetails.symbol }) {tokenDetails.network.toUpperCase()}</span>\n                                    </div>\n                                </div>\n                                <div className=\"balance\">\n                                    Balance: <span>{ tokenDetails.balance }</span> <b>{ tokenDetails.symbol }</b>\n                                </div>\n                            </div>\n                            :\n                            null\n            }\n            <div className=\"extra-tokens-list\">\n                {\n                    extraTokens.map(({ address, name, symbol, tokenImageUrl, network }) => (\n                        <div className=\"extra-token\" key={address}>\n                            <div className=\"info\">\n                                <div className=\"icon\" style={{ backgroundImage: `url(${tokenImageUrl})` }}/>\n                                <div className=\"name\">{ name } <span>({ symbol }) {network.toUpperCase()}</span></div>\n                            </div>\n                            <div className=\"actions\">\n                                <Button mini clear onClick={() => removeToken(address)}>\n                                    <MdOutlineRemove/>\n                                </Button>\n                            </div>\n                        </div>\n                    ))\n                }\n            </div>\n        </Modal>\n    )\n}\n\nexport default AddTokenModal","import './LatticeModal.scss'\n\nimport { Modal, Button, TextInput, Loading } from 'components/common'\nimport { useState, useEffect, useRef } from 'react'\nimport { useToasts } from 'hooks/toasts'\nimport { latticeInit, \n    latticeConnect, \n    latticePair, \n    latticeGetAddresses \n} from 'lib/lattice'\nimport crypto from 'crypto'\n\nconst SECRET_LENGTH = 8\nconst DEVICE_ID_LENGTH = 6\nconst commKey = crypto.randomBytes(32).toString('hex')\n\nconst LatticeModal = ({ addresses }) => {\n    const { addToast } = useToasts()\n    const [isLoading, setLoading] = useState(false)\n    const [deviceId, setDeviceId] = useState('')\n    const [isSecretFieldShown, setIsSecretFieldShown] = useState(false)\n    const [promiseResolve, setPromiseResolve] = useState(null)\n    const inputSecretRef = useRef(null)\n    \n    useEffect(()=> {\n        if (isSecretFieldShown) inputSecretRef.current.focus()\n    }, [isSecretFieldShown])\n\n    const client = latticeInit(commKey)\n\n    const connectToDevice = async () => {\n        setLoading(prevState => !prevState)\n\n        const { isPaired, errConnect } = await latticeConnect(client, deviceId)\n        if (errConnect) {\n            setLoading(prevState => !prevState)\n            addToast(`Lattice: ${errConnect} Or check if the Device ID is correct.`, { error: true })\n            return\n        }\n\n        if (!isPaired) {\n            setIsSecretFieldShown(prevState => !prevState)\n\n            const enteredSecret = await new Promise((resolve, reject) => { setPromiseResolve(() => resolve) })\n            if (enteredSecret !== '') { \n                setIsSecretFieldShown(prevState => !prevState)\n\n                const { hasActiveWallet, errPair } = await latticePair(client, enteredSecret)\n                if (errPair) {\n                    setLoading(prevState => !prevState)\n                    addToast(errPair, { error: true })\n                    return\n                }\n\n                if (!hasActiveWallet)  {\n                    addToast('Lattice has no active wallet!')\n                    return\n                }\n\n                const { res, errGetAddresses } = await latticeGetAddresses(client)\n                if (errGetAddresses) {\n                    setLoading(prevState => !prevState)\n                    addToast(errGetAddresses, {error: true})\n                    return\n                }\n\n                if (!!res) {\n                    addresses({ addresses: res, deviceId, commKey, isPaired: true })\n                    setLoading(false)\n                } \n            }\n        } else {\n            const { res, errGetAddresses } = await latticeGetAddresses(client)\n            if (errGetAddresses) {\n                setLoading(false)\n                addToast(`Lattice: ${errGetAddresses}`, { error: true })\n                return \n            }\n\n            if (!!res) {\n                addresses({ addresses: res, deviceId, commKey, isPaired: true })\n                setLoading(false)\n            }\n        }\n    }\n\n    const handleInputSecret = e => {\n        const inputSecret = e.toUpperCase()\n        \n        if (inputSecret.length === SECRET_LENGTH) {\n            promiseResolve(inputSecret)\n        } \n    }\n\n    const handleInputDeviceId = e => {\n        if (e.length === DEVICE_ID_LENGTH) {\n            setDeviceId(e)\n        }\n    }\n\n    return (\n        <Modal title=\"Connect to Lattice Device\">\n            <div id=\"grid-plus\">\n                <div>\n                    <p>\n                        The device ID is listed on your Lattice under{' '}\n                        <strong>Settings</strong>.\n                    </p>\n                    <h4>Device ID</h4>\n                    <TextInput\n                        disabled={isSecretFieldShown}\n                        placeholder=\"Enter the device ID\"\n                        onInput={value => handleInputDeviceId(value)}\n                    />\n                    {isSecretFieldShown && (\n                        <>\n                            <h4>Secret</h4>\n                            <TextInput\n                                ref={inputSecretRef}\n                                placeholder=\"Enter secret\"\n                                style={{ textTransform:'uppercase' }}\n                                onInput={value => handleInputSecret(value)}\n                            />\n                        </>\n                    )}\n                    {(isLoading && !isSecretFieldShown) ? (\n                        <>\n                            <h3>It may takes a while.</h3>\n                            <h3>Please wait...</h3>\n                        </>\n                    ) : (\n                        <></>\n                    )}\n                    <div className=\"buttons\">\n                        {!isLoading ? (\n                            <Button onClick={connectToDevice}>\n                                Connect to Wallet\n                            </Button>\n                        ) : (\n                            <Button disabled>\n                                <Loading />\n                            </Button>\n                        )}\n                    </div>\n                </div>\n            </div>\n        </Modal>\n    )\n}\n\nexport default LatticeModal\n","import { Button, Checkbox, Modal, DAppIncompatibilityWarningMsg } from 'components/common'\nimport { useModals } from 'hooks'\nimport { useState } from 'react'\nimport { MdBrokenImage, MdClose } from 'react-icons/md'\nimport './UnsupportedDAppsModal.scss'\n\nconst UnsupportedDAppsModal = ({ connections, disconnect, advancedModeList, onContinue }) => {\n    const { hideModal } = useModals()\n    const [advancedMode, setAdvancedMode] = useState(false)\n\n    const handleCancel = () => {\n        connections.map(({ uri }) => disconnect(uri))\n        hideModal()\n    }\n\n    const handleContinue = () => {\n        onContinue([\n            ...advancedModeList,\n            ...connections.map(({ session }) => session.peerMeta.url)\n        ])\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdClose/>} onClick={handleCancel}>Cancel</Button>\n        <Button disabled={!advancedMode} onClick={handleContinue}>Continue</Button>\n    </>\n\n    return (\n        <Modal\n            id=\"unsupported-dapps\"\n            title=\"Unsupported dApps\"\n            buttons={buttons}\n            isCloseBtnShown={false}\n        >\n            <div className='message'>\n                These dApps does not fully support smart wallets and/or WalletConnect:\n            </div>\n\n            <div className='dapps-list'>\n                {\n                    connections.map(({ session }, i) => (\n                        <a className='dapp' key={`dapp-${i}`} href={session.peerMeta.url} target=\"_blank\" rel=\"noreferrer\">\n                            <div className='icon' style={{ backgroundImage: `url(${session.peerMeta.icons[0]})` }}>\n                                <MdBrokenImage/>\n                            </div>\n                            <div className='name'>{ session.peerMeta.name }</div>\n                        </a>\n                    ))\n                }\n            </div>\n            <DAppIncompatibilityWarningMsg/>\n            <div className='message'>\n                For more information on why these dApps do not support Ambire, please read <a href='https://help.ambire.com/hc/en-us/articles/4415496135698-Which-dApps-are-supported-by-Ambire-Wallet-' target='_blank' rel='noreferrer'>this article</a>.\n\t    </div>\n            <div className='separator'/>\n\n            <div className='advanced-mode'>\n                <label className='advanced-mode-label'>Advanced mode:</label>\n                <Checkbox label=\"I know what I'm doing and I accept the risks\" checked={advancedMode} onChange={({ target }) => setAdvancedMode(target.checked)}/>\n            </div>\n        </Modal>\n    )\n}\n\nexport default UnsupportedDAppsModal\n","import './HideTokenModal.scss'\n\nimport { Button, Modal } from 'components/common'\nimport {\n  MdOutlineClose,\n  MdVisibilityOff as VisibleIcon,\n  MdRemoveRedEye as HiddenIcon\n} from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { useEffect, useMemo } from 'react'\n\nconst Token = ({ token, button }) => (\n  <div className=\"extra-token\" key={token.address}>\n    <div className=\"info\">\n      <div className=\"icon\" style={{ backgroundImage: `url(${token.tokenImageUrl})` }} />\n      <div className=\"name\">\n        <span>\n          {token.symbol} ({token.network.toUpperCase()})\n        </span>\n      </div>\n    </div>\n    {button}\n  </div>\n)\n\nconst HideTokenModel = ({ portfolio, account, network, userSorting, sortType, setIsHideTokenModalOpen }) => {\n  const { hideModal, setOnClose } = useModals()\n  const { hiddenTokens, onAddHiddenToken, onRemoveHiddenToken, tokens } = portfolio\n\n  const hideToken = (token) => onAddHiddenToken(token)\n\n  const unhideToken = (token) => onRemoveHiddenToken(token.address)\n\n  const sortedTokens = useMemo(() => {\n    const tempTokens = tokens.concat(hiddenTokens).sort((a, b) => {\n      if (sortType === 'custom' && userSorting.tokens?.items?.[`${account}-${network.chainId}`]?.length) {\n        const sorted = userSorting.tokens.items[`${account}-${network.chainId}`].indexOf(a.address) - userSorting.tokens.items[`${account}-${network.chainId}`].indexOf(b.address)\n        return sorted\n      } else {\n        const decreasing = b.balanceUSD - a.balanceUSD\n        if (decreasing === 0) return a.symbol.localeCompare(b.symbol)\n        return decreasing\n      }\n    })\n\n    return [...new Map(tempTokens.map(token => [token.address, token])).values()]\n  }, [tokens, hiddenTokens, userSorting, sortType, account, network.chainId])\n\n  const handleHideModal = () => {\n    setIsHideTokenModalOpen(false)\n    hideModal()\n  }\n\n  useEffect(() => {\n    setOnClose({close: () => setIsHideTokenModalOpen(false)})\n  }, [setOnClose, setIsHideTokenModalOpen])\n\n  return (\n    <Modal id=\"hide-token-modal\" title=\"Hide Token\">\n      <div className=\"extra-tokens-list\">\n        {sortedTokens.map((token) => (\n          <Token\n            key={token.address}\n            token={token}\n            button={!token.isHidden ? \n              <HiddenIcon className=\"extra-token-icon\" color=\"#36c979\" onClick={() => hideToken(token)} /> :\n              <VisibleIcon className=\"extra-token-icon\" color=\"#f98689\" onClick={() => unhideToken(token)} />\n            }\n          />\n        ))}\n      </div>\n\n      <div className=\"modalBottom\">\n        <Button clear icon={<MdOutlineClose />} onClick={handleHideModal}>\n          Close\n        </Button>\n      </div>\n    </Modal>\n  )\n}\n\nexport default HideTokenModel\n","import './AddAddressModal.scss'\n\nimport { createRef, useRef, useState, useMemo } from 'react'\nimport { MdCheck, MdClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { Modal, TextInput, Button, ToolTip } from \"components/common\"\nimport { resolveUDomain } from 'lib/unstoppableDomains'\nimport { resolveENSDomain } from 'lib/ensDomains'\n\nconst AddAddressModal = ({ title, inputs, selectedNetwork, onClose }) => {\n    const { hideModal } = useModals()\n    const [isDisabled, setDisabled] = useState(true)\n    const [uDAddress, setUDAddress] = useState('')\n    const [ensAddress, setEnsAddress] = useState('')\n    const timer = useRef(null)\n\n    const inputsFields = useMemo(() => inputs.map(input => ({ ...input, ref: createRef() })), [inputs])\n    const getUDomain = async (value) => {\n        return await resolveUDomain(value, null, selectedNetwork.unstoppableDomainsChain)\n    }\n\n    const onInput = () => {\n        if (timer.current) {\n            clearTimeout(timer.current)\n        }\n\n        const validateForm = async () => {\n            const isFound = inputsFields.find(item => item.inputType === 'address')\n            const domain = isFound && isFound.ref && isFound.ref.current.value\n            if (!domain) return\n            \n            let uDAddr = null\n            let ensAddr = null\n            if (isFound) {\n                uDAddr = await getUDomain(domain)\n                ensAddr = await resolveENSDomain(domain)\n                timer.current = null\n                if (uDAddr) setUDAddress(uDAddr)\n                else if (ensAddr) setEnsAddress(ensAddr)\n            }\n\n            const isFormValid = inputsFields\n                .map(({ ref, validate, inputType }) => {\n                    const isUDField = inputType === 'address'\n                    const value = isUDField && uDAddr ? uDAddr : isUDField && ensAddr ? ensAddr : ref.current.value\n                    if (!validate) return !!value\n\n                    return validate(value)\n                })\n                .every(v => v === true)\n\n            setDisabled(!isFormValid)\n        }\n\n        timer.current = setTimeout(async () => {\n            return validateForm().catch(console.error)\n        }, 500)\n    }\n\n    const onConfirm = () => {\n        let values = inputsFields.map(({ ref }) => ref.current.value)\n        if (uDAddress) values.push({ type: 'ud' })\n        else if (ensAddress) values.push({ type: 'ens' })\n        else values.push({ type: 'pub' })\n        \n        onClose && onClose(values)\n        hideModal()\n    }\n\n    const buttons = <>\n        <Button clear small icon={<MdClose />} onClick={hideModal}>Cancel</Button>\n        <Button small icon={<MdCheck />} disabled={isDisabled} onClick={onConfirm}>Confirm</Button>\n    </>\n\n    return (\n        <Modal id=\"input-modal\" title={title} buttons={buttons}>\n            {\n                inputsFields.map(({ id, label, placeholder, ref, type }) => (\n                    <div key={id + label}>\n                        <TextInput label={label} placeholder={placeholder} onInput={onInput} ref={ref} />\n                        {(type === 'address') &&\n                            <>\n                                <ToolTip label={!uDAddress ? 'You can use Unstoppable domainsⓇ' : 'Valid Unstoppable domainsⓇ domain'}>\n                                    <span id=\"udomains-logo\" className={ uDAddress ? 'ud-logo-active ' : '' } />\n                                </ToolTip>\n                                <ToolTip label={!ensAddress ? 'You can use Ethereum Name ServiceⓇ' : 'Valid Ethereum Name ServicesⓇ domain'}>\n                                    <div id=\"ens-logo\" className={ensAddress ? 'ens-logo-active ' : ''} />\n                                </ToolTip>\n                            </>\n                        }\n                    </div>\n                ))\n            }\n        </Modal>\n    )\n}\n\nexport default AddAddressModal\n","import './AddCustomDappModal.scss'\nimport { useState, useMemo, useCallback, useEffect } from 'react'\nimport { Button, Modal, TextInput, Radios, ToolTip } from 'components/common'\nimport { useModals } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { MdOutlineAdd, MdOutlineClose, MdImage, MdErrorOutline, MdBuildCircle } from 'react-icons/md'\nimport { fetch } from 'lib/fetch'\nimport NETWORKS from 'consts/networks'\nimport { getManifestFromDappUrl, getDappId, getNormalizedUrl } from 'ambire-common/src/services/dappCatalog'\nimport { isValidUrl, isValidCustomDappData } from 'ambire-common/src/services/validations'\nimport DAPPS_ICON from 'resources/dapps.svg'\n\nconst AddCustomDappModal = ({ dappsCatalog, dappUrl = '' }) => {\n    const { addToast } = useToasts()\n    const { hideModal } = useModals()\n\n    const { addCustomDapp, isDappInCatalog } = dappsCatalog\n    const [name, setName] = useState('')\n    const [url, setUrl] = useState('')\n    const [description, setDescription] = useState('')\n    const [iconUrl, setIconUrl] = useState(null)\n    const [connectionType, setConnectionType] = useState('')\n    const [loading, setLoading] = useState(false)\n    const [urlErr, setUrlErr] = useState(null)\n    const [urlInfo, setUrlInfo] = useState(null)\n    const [iconUrlInfo, setIconUrlInfo] = useState(null)\n    const [networksInfo, setNetworksInfo] = useState(null)\n    const [networks, setNetworks] = useState([])\n    const [inputValidation, setInputValidation] = useState({})\n    const [isAppAlreadyExists, setIsAppAlreadyExists] = useState(false)\n\n    const disabled = useMemo(() => !inputValidation.success || isAppAlreadyExists || loading, [inputValidation.success, isAppAlreadyExists, loading])\n\n    const addDapp = useCallback(async () => {\n        setLoading(true)\n\n        addCustomDapp({\n            id: getDappId(name),\n            name,\n            url,\n            description,\n            iconUrl: iconUrlInfo ? '' : iconUrl,\n            connectionType,\n            networks\n        })\n\n        addToast(`${name} added to Ambire Wallet dApp catalog`)\n\n        setLoading(false)\n        hideModal()\n    }, [addCustomDapp, addToast, connectionType, description, hideModal, iconUrl, iconUrlInfo, name, networks, url])\n\n    const onUrlInput = useCallback(async (urlInputStr = '') => {\n        const normalizedDappUrl = getNormalizedUrl(urlInputStr)\n        setUrl(normalizedDappUrl)\n        setName('')\n        setDescription('')\n        setIconUrl('')\n        setConnectionType('')\n        setUrlInfo('')\n        setIconUrlInfo('')\n        setNetworksInfo('')\n        setLoading(true)\n        const isValidUrlInput = isValidUrl(normalizedDappUrl)\n\n        if (!isValidUrlInput) {\n            setUrlErr(!!normalizedDappUrl ? 'Invalid Url' : null)\n            setLoading(false)\n            return\n        } else (\n            setUrlErr(null)\n        )\n        const isInCatalog = isDappInCatalog(normalizedDappUrl)\n        setIsAppAlreadyExists(isInCatalog)\n\n        const manifest = await getManifestFromDappUrl(fetch, normalizedDappUrl)\n\n        if (manifest) {\n            setName(manifest.name)\n            setDescription(manifest.description)\n            setIconUrl(manifest.iconUrl)\n            setConnectionType(manifest.connectionType)\n            setNetworks(manifest.networks || [])\n            setUrlInfo(isInCatalog ? `${normalizedDappUrl} is already in your wallet catalog` : '')\n            setNetworksInfo(!manifest?.networks?.length ? `Supported networks not detected! Please select manually.` : '')\n        } else {\n            setUrlInfo('Can\\'t find dApp data — make sure it supports Gnosis Safe apps or WalletConnect')\n        }\n\n        setLoading(false)\n    }, [isDappInCatalog])\n\n    const onRadioChange = useCallback(value => {\n        setConnectionType(value)\n    }, [])\n\n    const radios = useMemo(() => [\n        {\n            label: 'Gnosis Safe App',\n            value: 'gnosis',\n            disabled: !url || urlErr\n        },\n        {\n            label: 'WalletConnect',\n            value: 'walletconnect',\n            disabled: !url || urlErr\n        }\n    ], [url, urlErr])\n\n    useEffect(() => {\n        if (dappUrl) {\n            onUrlInput(dappUrl)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const buttons = useMemo(() =>\n        <>\n            <Button clear icon={<MdOutlineClose />} onClick={() => hideModal()}>Close</Button>\n            <Button icon={<MdOutlineAdd />} disabled={disabled} onClick={addDapp}>Add</Button>\n        </>\n        , [addDapp, disabled, hideModal])\n\n    const onNetworkClick = (network) => {\n        setNetworks(prev => {\n            const index = prev.indexOf(network)\n            const updated = [...prev]\n            if (index >= 0) {\n                updated.splice(index, 1)\n            } else {\n                updated.push(network)\n            }\n\n            return updated\n        })\n    }\n\n    useEffect(() => {\n        setInputValidation(url ? isValidCustomDappData({\n            id: getDappId(name || ''),\n            name,\n            url,\n            description,\n            iconUrl: iconUrlInfo ? '' : iconUrl,\n            connectionType,\n            networks\n        }) : {})\n    }, [connectionType, description, iconUrl, iconUrlInfo, name, networks, url])\n\n    return (\n        <Modal id='add-custom-dapp-modal'\n            title={<div className='custom-dapp-title'>\n                <ToolTip label={`Click here to see how create dApp for Ambire Wallet catalog`}>\n                    <a className=\"info-btn\" href={'https://github.com/AmbireTech/wallet-dapp-catalog#readme'}\n                        target=\"_blank\"\n                        rel=\"noreferrer noopener\">\n                        <MdBuildCircle size={32} />\n                    </a>\n                </ToolTip>\n                <div>Add custom dApp</div>\n            </div>\n            }\n            buttons={buttons}>\n            <div>\n                <TextInput\n                    value={url}\n                    label=\"URL\"\n                    onInput={value => onUrlInput(value)}\n                    className='dapp-input'\n                    placeholder='https://some.dapp.com'\n                />\n                {<div className='input-err' >\n                    {urlErr || inputValidation?.errors?.url || urlInfo}\n                </div>}\n            </div>\n\n            <div>\n                <TextInput\n                    small\n                    label=\"Name\"\n                    value={name}\n                    onInput={value => setName(value)}\n                    className='dapp-input'\n                />\n                {<div className='input-err' >\n                    {inputValidation?.errors?.name}\n                </div>}\n            </div>\n            <div>\n                <TextInput\n                    small\n                    label=\"Description\"\n                    value={description}\n                    onInput={value => setDescription(value)}\n                    className='dapp-input'\n                />\n            </div>\n\n            <div>\n                <div className='icon-input'>\n                    <TextInput\n                        small\n                        label=\"Icon URL\"\n                        value={iconUrl}\n                        onInput={value => { setIconUrl(value); setIconUrlInfo('') }}\n                        className='dapp-input'\n                    />\n                    <div className='icon-wrapper'>\n                        {\n\n                            iconUrl && !iconUrlInfo ?\n                                <img width={46} height={46} src={iconUrl || DAPPS_ICON} alt={(name || 'no') + ' logo'}\n                                    onError={() => {\n                                        setIconUrlInfo('Invalid icon URL, please update it or default dApp icon will be displayed');\n                                    }} />\n                                : iconUrlInfo ? <MdErrorOutline size={40} /> : <MdImage size={40} />}\n                    </div>\n                </div>\n                {<div className='input-err' >\n                    {inputValidation?.errors?.iconUrl || iconUrlInfo}\n                </div>}\n            </div>\n\n            <div>\n                <div className='connection-radios'>\n                    <div>Connection Type</div>\n                    <Radios radios={radios} value={connectionType} onChange={onRadioChange} row />\n                </div>\n                {<div className='input-err' >\n                    {inputValidation?.errors?.connectionType}\n                </div>}\n            </div>\n\n            <div className='networks'>\n                <div>Supported networks ({networks.length} selected)</div>\n                <div className='networks-container'>\n                    {\n                        NETWORKS.map(n => {\n                            return (\n                                <ToolTip label={n.name} key={n.id}>\n                                    <span className={`network-tag${networks.includes(n.id) ? ' selected' : ''}`}\n                                        style={{ backgroundImage: `url(${n.icon})` }}\n                                        onClick={() => onNetworkClick(n.id)}\n                                    >\n                                    </span>\n                                </ToolTip>\n                            )\n                        })\n                    }\n                </div>\n                {<div className='input-err' >\n                    {networksInfo || inputValidation?.errors?.networks}\n                </div>}\n            </div>\n        </Modal>\n    )\n\n}\n\nexport default AddCustomDappModal\n","import './GasTankBalanceByTokensModal.scss'\n\nimport { Button, Modal } from 'components/common'\nimport { MdOutlineClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { getTokenIcon } from 'lib/icons'\nimport { formatFloatTokenAmount } from 'lib/formatters'\n\nconst GasTankBalanceByTokensModal = ({ data }) => {\n    const { hideModal } = useModals()\n    const buttons = <>\n        <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n    </>\n    \n    return (\n        <Modal id=\"gas-tank-balance-by-tokens-modal\" title=\"GAS TANK BALANCE BY TOKENS\" buttons={buttons}>\n           <div className='content'>\n                <div className='row'>\n                    <div className='logo'> </div>\n                    <div className='item'>\n                        <span>Token</span>\n                    </div>\n                    <div className='balance'>\n                        <span>Amount</span>\n                    </div>\n                    <div className='balance'>\n                        <span>Balance</span>\n                    </div>\n                </div>\n                {\n                    data && data.sort((a, b) => b.balance - a.balance).map((item, key) => {\n                        return (\n                            <div className='row' key={key}>\n                                <div className='logo'>\n                                    <img width=\"25px\" height='25px' alt='logo' src={item.icon || getTokenIcon(item.network, item.address)} /> \n                                </div>\n                                <div className='item'>\n                                    <span>{ item.symbol.toUpperCase() }</span>\n                                </div>\n                                <div className='balance'>\n                                    <span>{ formatFloatTokenAmount(item.balance, true, 6) }</span>\n                                </div>\n                                <div className='balance'>\n                                    <span>$ {formatFloatTokenAmount(item.balanceInUSD, true, 6) }</span>\n                                </div>\n                            </div>\n                        )\n                    })\n                }\n           </div>\n        </Modal>\n    )\n}\n\nexport default GasTankBalanceByTokensModal","import { useMemo } from \"react\"\nimport { multiplierBadges } from 'ambire-common/src/constants/multiplierBadges'\nimport { ToolTip } from \"components/common\"\n\nconst MultiplierBadges = ({ rewards }) => {\n  // Multiplier badges\n  const badges = useMemo(() => multiplierBadges.map(badge => {\n    const isUnlocked = rewards.multipliers && rewards.multipliers.map(({ name }) => name).includes(badge.id)\n    return {\n      ...badge,\n      active: isUnlocked\n    }\n  }), [rewards])\n\n  return (\n    <div className=\"badges\">\n      {\n        badges.map(({ id, name, icon, color, multiplier, link, active }) => (\n          <a href={link} target=\"_blank\" rel=\"noreferrer\" key={id}>\n              <ToolTip label={`You ${active ? 'are receiving' : 'do not have'} the ${name} x${multiplier} multiplier`}>\n                  <div className={`badge ${active ? 'active' : ''}`} style={{ backgroundColor: color, borderColor: color }}>\n                      <div className=\"icon\">{ icon }</div>\n                      <div className=\"multiplier\">x { multiplier }</div>\n                  </div>\n              </ToolTip>\n          </a>\n        ))\n      }\n    </div>\n  )\n}\n\nexport default MultiplierBadges","import './WalletTokenModal.scss'\n\nimport { Button, Modal, ToolTip } from 'components/common'\nimport { MdOutlineClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport useStakedWalletToken from 'ambire-common/src/hooks/useStakedWalletToken'\nimport MultiplierBadges from './MultiplierBadges'\nimport { useState } from 'react'\nimport UnbondModal from './UnbondModal/UnbondModal'\n\nconst WalletTokenModal = ({ accountId, claimableWalletToken, rewards }) => {\n    const [isUnbondModalVisible, setIsUnbondModalVisible] = useState(false)\n    const { hideModal } = useModals()\n    const { stakedAmount } = useStakedWalletToken({ accountId })\n\n    const hideUnbondModal = () => setIsUnbondModalVisible(false)\n\n    const openUnbondModal = () => setIsUnbondModalVisible(true)\n\n    const {\n        vestingEntry,\n        currentClaimStatus,\n        claimableNow,\n        disabledReason,\n        claimDisabledReason,\n        claimEarlyRewards,\n        claimVesting,\n        claimableNowUsd,\n        mintableVestingUsd,\n        shouldDisplayMintableVesting,\n    } = claimableWalletToken\n    const { walletTokenAPYPercentage, adxTokenAPYPercentage, xWALLETAPYPercentage } = rewards;\n\n    const claimeWithBurnNotice = 'This procedure will claim 50% of your outstanding rewards as $WALLET, and permanently burn the other 50%'\n    \n    const claimWithBurn = () => claimEarlyRewards(false)\n\n    const modalButtons = <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n\n    return (\n        <Modal id=\"wallet-token-modal\" title=\"WALLET token distribution\" buttons={modalButtons}>\n            <UnbondModal \n                isVisible={isUnbondModalVisible} \n                hideModal={hideUnbondModal} \n                text=\"This procedure will claim only 50% of your outstanding \n                rewards as $WALLET, and permanently burn the rest. \n                Are you sure?\"\n                onClick={claimWithBurn}\n            />\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Early users Incentive: Total</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{ rewards['balance-rewards'] }</span></div>\n                        <div className=\"amount apy\">{walletTokenAPYPercentage} <span>APY</span></div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { /* claimButton */ }\n                </div>\n            </div>\n            {/* <div className=\"item\">\n                <div className=\"details\">\n                    <label>Referral Incentive</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">0</span></div>\n                        <div className=\"amount-dollar\"><span className=\"secondary-accent\">$</span> 0</div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { claimButton }\n                </div>\n            </div> */}\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>ADX Staking Bonus: Total</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{ rewards['adx-rewards'] }</span></div>\n                        <div className=\"amount apy\">{adxTokenAPYPercentage} <span>APY</span></div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    { /* claimButton */ }\n                </div>\n            </div>\n\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Claimable now: early users + ADX Staking bonus</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">{\n                            currentClaimStatus.loading ? '...' : claimableNow\n                        }</span></div>\n                        <div className=\"amount usd\">\n                            <span className=\"secondary-accent\">$</span>\n                            { claimableNowUsd }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <ToolTip label={\n                            claimDisabledReason || disabledReason || claimeWithBurnNotice\n                        }>\n                        <Button className=\"claim-rewards-with-burn\" small clear onClick={openUnbondModal} disabled={!!(claimDisabledReason || disabledReason)}>Claim with burn</Button>\n                    </ToolTip>\n\n                    <ToolTip label={\n                            claimDisabledReason || disabledReason || 'Claim all of your outstanding rewards as staked $WALLET (xWALLET)'\n                        }>\n                        <Button className=\"claim-rewards-x-wallet\" small clear onClick={claimEarlyRewards} disabled={!!(claimDisabledReason || disabledReason)}>CLAIM IN xWALLET</Button>\n                    </ToolTip>\n                </div>\n            </div>\n\n            {shouldDisplayMintableVesting && (\n            <div className=\"item\">\n                <div className=\"details\">\n                    <label>Claimable early supporters vesting</label>\n                    <div className=\"balance\">\n                        <div className=\"amount\"><span className=\"primary-accent\">\n                            { currentClaimStatus.mintableVesting }\n                        </span></div>\n                        <div className=\"amount usd\">\n                            <span className=\"secondary-accent\">$</span>\n                            { mintableVestingUsd }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"actions\">\n                    <ToolTip label={\n                            disabledReason || `Linearly vested over approximately ${Math.ceil((vestingEntry.end - vestingEntry.start) / 86400)} days`\n                        }>\n                        <Button small clear onClick={claimVesting} disabled={!!disabledReason}>CLAIM</Button>\n                    </ToolTip>\n                </div>\n            </div>\n            )}\n\n            {!!stakedAmount && (\n                <div className=\"item\">\n                    <div className=\"details\">\n                        <label>Staked WALLET</label>\n                        <div className=\"balance\">\n                            <div className=\"amount\"><span className=\"primary-accent\">\n                                { stakedAmount }\n                            </span></div>\n                            <div className=\"amount apy\">{ xWALLETAPYPercentage } <span>APY</span></div>\n                        </div>\n                    </div>\n                </div>\n            )}\n\n            <MultiplierBadges rewards={rewards}/>\n            <div id=\"info\">\n                You are receiving $WALLETs for holding funds on your Ambire wallet as an early user. <a href=\"https://blog.ambire.com/announcing-the-wallet-token-a137aeda9747\" target=\"_blank\" rel=\"noreferrer\">Read More</a>\n            </div>\n        </Modal>\n    )\n}\n\nexport default WalletTokenModal\n","import { getProvider } from 'lib/provider'\nimport { BigNumber, utils, Contract } from 'ethers'\nimport { useEffect, useState, useCallback } from 'react'\nimport useConstants from './useConstants'\n\nconst ZERO = BigNumber.from(0)\nconst ZERO_ADDR = '0x0000000000000000000000000000000000000000'\nconst PRECISION = 1_000_000_000_000\nconst POOL_SHARES_TOKEN_DECIMALS_MUL = '1000000000000000000'\nconst STAKING_POOL_EVENT_TYPES = {\n    enter: 'enter',\n    leave: 'leave',\n    burn: 'burn',\n    withdraw: 'withdraw',\n    rageLeave: 'rageLeave',\n    shareTokensTransferIn: 'shareTokensTransferIn',\n    shareTokensTransferOut: 'shareTokensTransferOut',\n}\n\nconst ethProvider = getProvider('ethereum')\n\nconst useAmbireEarnDetails = ({accountId, addresses, tokenLabel}) => {\n    const { getAdexToStakingTransfersLogs } = useConstants()\n    const WALLET_ADDR = addresses.stakingTokenAddress\n    const [details, setDetails] = useState({})\n    const [isLoading, setIsLoading] = useState(true)\n\n    const getStats = useCallback(async (addresses, tokenLabel) => {\n        const xWalletContract = new Contract(addresses.stakingTokenAddress, addresses.stakingPoolAbi, ethProvider)\n        const walletContract = new Contract(addresses.tokenAddress, addresses.tokenAbi, ethProvider)\n        const fromBlock = 0\n        const fromBlockHardcoded = (tokenLabel === 'ADX') ? 0xe64fe2 : 0\n        const [\n            shareValue,\n            sharesTotalSupply,\n            balanceShares,\n            lockedShares,\n            allEnterWalletTransferLogs, // If ADX selected, 0xe64fe2 last block from prefetched data\n            leaveLogs,\n            withdrawLogs,\n            rageLeaveLogs,\n            sharesTokensTransfersInLogs,\n            sharesTokensTransfersOutLogs,\n        ] = await Promise.all([\n            xWalletContract.shareValue(),\n            xWalletContract.totalSupply(),\n            xWalletContract.balanceOf(accountId),\n            xWalletContract.lockedShares(accountId),\n            ethProvider.getLogs({\n                fromBlock: fromBlockHardcoded,\n                ...walletContract.filters.Transfer(null, WALLET_ADDR, null),\n            }),\n            ethProvider.getLogs({\n                fromBlock,\n                ...xWalletContract.filters.LogLeave(accountId, null, null, null),\n            }),\n            ethProvider.getLogs({\n                fromBlock,\n                ...xWalletContract.filters.LogWithdraw(\n                    accountId,\n                    null,\n                    null,\n                    null,\n                    null\n                ),\n            }),\n            ethProvider.getLogs({\n                fromBlock,\n                ...xWalletContract.filters.LogRageLeave(\n                    accountId,\n                    null,\n                    null,\n                    null\n                ),\n            }),\n            ethProvider.getLogs({\n                fromBlock,\n                ...xWalletContract.filters.Transfer(null, accountId, null),\n            }),\n            ethProvider.getLogs({\n                fromBlock,\n                ...xWalletContract.filters.Transfer(accountId, null, null),\n            }),\n        ])\n       \n        const userShare = sharesTotalSupply.isZero()\n            ? ZERO\n            : balanceShares.mul(PRECISION).div(sharesTotalSupply).toNumber() /\n              PRECISION\n\n        const adexToStakingTransfersLogs = await getAdexToStakingTransfersLogs();\n        const enterWalletTokensByTxHash = ((tokenLabel === 'ADX' && adexToStakingTransfersLogs) ? adexToStakingTransfersLogs.result : [])\n            .concat(allEnterWalletTransferLogs)\n            .reduce((byHash, log) => {\n                    byHash[log.transactionHash] = log\n                    return byHash\n                }, {}\n            )\n\n        const sharesTokensTransfersIn = sharesTokensTransfersInLogs.map(log => {\n            const parsedLog = xWalletContract.interface.parseLog(log)\n\n            const {\n                from, // [0]\n                amount, // [2]\n            } = parsedLog.args\n\n            return {\n                transactionHash: log.transactionHash,\n                blockNumber: log.blockNumber,\n                shares: amount,\n                type:\n                    from === ZERO_ADDR\n                        ? STAKING_POOL_EVENT_TYPES.enter\n                        : STAKING_POOL_EVENT_TYPES.shareTokensTransferIn,\n                from,\n            }\n        })\n\n        // Only out txns as we have logs for RageLEave and Withdraw and they only burns shares\n        // TODO: detect innerBurn transactions to ZERO_ADDR (burned by the user itself)\n        const sharesTokensTransfersOut = sharesTokensTransfersOutLogs\n            .map(log => {\n                const parsedLog = xWalletContract.interface.parseLog(log)\n\n                const {\n                    to, // [1]\n                    amount, // [2]\n                } = parsedLog.args\n\n                return {\n                    transactionHash: log.transactionHash,\n                    blockNumber: log.blockNumber,\n                    shares: amount,\n                    type: STAKING_POOL_EVENT_TYPES.shareTokensTransferOut,\n                    to,\n                }\n            })\n            .filter(x => x.to !== ZERO_ADDR)\n\n        const { shareTokensEnterMintByHash, shareTokensTransfersInByTxHash } =\n            sharesTokensTransfersIn.reduce(\n                (txns, event) => {\n                    if (event.type === STAKING_POOL_EVENT_TYPES.enter) {\n                        txns.shareTokensEnterMintByHash[event.transactionHash] =\n                            event\n                    }\n\n                    if (\n                        event.type ===\n                        STAKING_POOL_EVENT_TYPES.shareTokensTransferIn\n                    ) {\n                        txns.shareTokensTransfersInByTxHash[\n                            event.transactionHash\n                        ] = event\n                    }\n\n                    return txns\n                },\n                {\n                    shareTokensEnterMintByHash: {},\n                    shareTokensTransfersInByTxHash: {},\n                }\n            )\n\n        const sharesTokensTransfersInFromExternal = Object.values(\n            shareTokensTransfersInByTxHash\n        )\n\n        const userEnters = Object.values(shareTokensEnterMintByHash)\n            .map(sharesMintEvent => {\n                const adexTokenTransfersLog =\n                    enterWalletTokensByTxHash[sharesMintEvent.transactionHash]\n\n                if (adexTokenTransfersLog) {\n                    const parsedWalletLog = walletContract.interface.parseLog(\n                        adexTokenTransfersLog\n                    )\n\n                    return {\n                        transactionHash: sharesMintEvent.transactionHash,\n                        type: STAKING_POOL_EVENT_TYPES.enter,\n                        shares: sharesMintEvent.shares,\n                        walletAmount: tokenLabel === 'ADX' ? parsedWalletLog.args.value : parsedWalletLog.args.amount, // [2]\n                        from: parsedWalletLog.args.from,\n                        blockNumber: sharesMintEvent.blockNumber,\n                    }\n                } else {\n                    return null\n                }\n            })\n            .filter(x => !!x)\n\n        const userWithdraws = withdrawLogs.map(log => {\n            const parsedWithdrawLog = xWalletContract.interface.parseLog(log)\n            const { shares, unlocksAt, maxTokens, receivedTokens } =\n                parsedWithdrawLog.args\n\n            return {\n                transactionHash: log.transactionHash,\n                type: STAKING_POOL_EVENT_TYPES.withdraw,\n                shares, //[1]\n                unlocksAt, //[2]\n                maxTokens, //[3]\n                receivedTokens, //[4]\n                blockNumber: log.blockNumber,\n            }\n        })\n\n        const userRageLeaves = rageLeaveLogs.map(log => {\n            const parsedRageLeaveLog = xWalletContract.interface.parseLog(log)\n\n            const { shares, maxTokens, receivedTokens } =\n                parsedRageLeaveLog.args\n\n            return {\n                transactionHash: log.transactionHash,\n                type: STAKING_POOL_EVENT_TYPES.rageLeave,\n                shares, //[1]\n                maxTokens, //[2]\n                receivedTokens,\n                walletAmount: receivedTokens, //[3]\n                blockNumber: log.blockNumber,\n            }\n        })\n\n        const now = new Date() / 1000\n\n        const userLeaves = await Promise.all(\n            leaveLogs.map(async log => {\n                const parsedLog = xWalletContract.interface.parseLog(log)\n\n                const { shares, unlocksAt, maxTokens } = parsedLog.args\n\n                const withdrawTx = userWithdraws.find(\n                    event =>\n                        event.unlocksAt.toString() === unlocksAt.toString() &&\n                        event.shares.toString() === shares.toString() &&\n                        event.maxTokens.toString() === maxTokens.toString()\n                )\n\n                const walletValue = sharesTotalSupply.isZero()\n                    ? ZERO // maxTokens\n                    : await xWalletContract.unbondingCommitmentWorth(\n                          accountId,\n                          shares,\n                          unlocksAt\n                      )\n\n                return {\n                    transactionHash: log.transactionHash,\n                    type: STAKING_POOL_EVENT_TYPES.leave,\n                    shares, // [1]\n                    unlocksAt, //[2]\n                    maxTokens, // [3]\n                    walletValue,\n                    canWithdraw: unlocksAt < now && !withdrawTx,\n                    blockNumber: log.blockNumber,\n                    withdrawTx,\n                }\n            })\n        )\n        \n        const leavesPendingToUnlock = [...userLeaves].filter(\n            event => event.unlocksAt > now\n        )\n\n        const leavesReadyToWithdraw = [...userLeaves].filter(\n            event => event.unlocksAt < now && !event.withdrawTx\n        )\n\n        const leavesPendingToUnlockTotalMax = leavesPendingToUnlock.reduce(\n            (a, b) => a.add(b.maxTokens),\n            ZERO\n        )\n\n        const leavesPendingToUnlockTotalWallet = leavesPendingToUnlock.reduce(\n            (a, b) => a.add(b.walletValue),\n            ZERO\n        )\n\n        const leavesReadyToWithdrawTotalMax = leavesReadyToWithdraw.reduce(\n            (a, b) => a.add(b.maxTokens),\n            ZERO\n        )\n\n        const leavesReadyToWithdrawTotalWallet = leavesReadyToWithdraw.reduce(\n            (a, b) => a.add(b.walletValue),\n            ZERO\n        )\n\n        let leavePendingToUnlockOrReadyToWithdraw = null \n        if (leavesReadyToWithdraw.length) leavePendingToUnlockOrReadyToWithdraw = leavesReadyToWithdraw[0]\n        else if (leavesPendingToUnlock.length) leavePendingToUnlockOrReadyToWithdraw = leavesPendingToUnlock[0]\n        const [latestLog] = leaveLogs.sort((a, b) => b.blockNumber - a.blockNumber)\n        let remainingTime\n        if (leavePendingToUnlockOrReadyToWithdraw && latestLog) {\n            const { unlocksAt } = leavePendingToUnlockOrReadyToWithdraw\n            const { timestamp } = await ethProvider.getBlock(latestLog.blockNumber)\n            remainingTime = (unlocksAt.toString()) - (Date.now() - (timestamp * 1000))\n            if (remainingTime <= 0) remainingTime = 0\n        } else {\n            remainingTime = null\n        }\n\n        if (\n            sharesTokensTransfersOut.length ||\n            sharesTokensTransfersInFromExternal.length\n        ) {\n            const fromBlock = Math.min(\n                sharesTokensTransfersOut[0]\n                    ? sharesTokensTransfersOut[0].blockNumber\n                    : Number.MAX_SAFE_INTEGER,\n                sharesTokensTransfersInFromExternal[0]\n                    ? sharesTokensTransfersInFromExternal[0].blockNumber\n                    : Number.MAX_SAFE_INTEGER\n            )\n\n            const [\n                allLeaveLogs,\n                allWithdrawLogs,\n                allRageLeaveLogs,\n                allEnterSharesTokensTransfersInLogs,\n            ] = await Promise.all([\n                ethProvider.getLogs({\n                    fromBlock,\n                    ...xWalletContract.filters.LogLeave(null, null, null, null),\n                }),\n                ethProvider.getLogs({\n                    fromBlock,\n                    ...xWalletContract.filters.LogWithdraw(\n                        null,\n                        null,\n                        null,\n                        null,\n                        null\n                    ),\n                }),\n                ethProvider.getLogs({\n                    fromBlock,\n                    ...xWalletContract.filters.LogRageLeave(\n                        null,\n                        null,\n                        null,\n                        null\n                    ),\n                }),\n                ethProvider.getLogs({\n                    fromBlock,\n                    ...xWalletContract.filters.Transfer(ZERO_ADDR, null, null),\n                }),\n            ])\n\n            const allEnters = allEnterSharesTokensTransfersInLogs\n                .map(sharesMintEvent => {\n                    const walletTokenTransfersLog =\n                        enterWalletTokensByTxHash[\n                            sharesMintEvent.transactionHash\n                        ]\n\n                    if (walletTokenTransfersLog) {\n                        const parsedLog = walletContract.interface.parseLog(\n                            walletTokenTransfersLog\n                        )\n                        const amount = tokenLabel === 'ADX' ? parsedLog.args.value : parsedLog.args.amount \n                        const { amount: shares } =\n                            xWalletContract.interface.parseLog(\n                                sharesMintEvent\n                            ).args\n\n                        return {\n                            blockNumber: sharesMintEvent.blockNumber,\n                            shareValue: shares.isZero()\n                                ? ZERO\n                                : amount\n                                      .mul(POOL_SHARES_TOKEN_DECIMALS_MUL)\n                                      .div(shares),\n                        }\n                    } else {\n                        return null\n                    }\n                })\n                .filter(x => !!x)\n\n            const allWithdraws = allWithdrawLogs.map(log => {\n                const parsedWithdrawLog =\n                    xWalletContract.interface.parseLog(log)\n                const { shares, maxTokens } = parsedWithdrawLog.args\n\n                return {\n                    blockNumber: log.blockNumber,\n                    shareValue: maxTokens\n                        .mul(POOL_SHARES_TOKEN_DECIMALS_MUL)\n                        .div(shares),\n                }\n            })\n\n            const allRageLeaves = allRageLeaveLogs.map(log => {\n                const parsedRageLeaveLog =\n                    xWalletContract.interface.parseLog(log)\n\n                const { shares, maxTokens } = parsedRageLeaveLog.args\n\n                return {\n                    shareValue: maxTokens\n                        .mul(POOL_SHARES_TOKEN_DECIMALS_MUL)\n                        .div(shares),\n                    blockNumber: log.blockNumber,\n                }\n            })\n\n            const allLeaves = allLeaveLogs.map(log => {\n                const parsedLog = xWalletContract.interface.parseLog(log)\n                const { shares, maxTokens } = parsedLog.args\n                return {\n                    blockNumber: log.blockNumber,\n                    shareValue: maxTokens\n                        .mul(POOL_SHARES_TOKEN_DECIMALS_MUL)\n                        .div(shares),\n                }\n            })\n\n            const allLogs = allEnters\n                .concat(allWithdraws)\n                .concat(allLeaves)\n                .concat(allRageLeaves)\n                .sort((a, b) => a.blockNumber - b.blockNumber)\n\n            const withWalletAmount = events =>\n                events.forEach((transferLog, i) => {\n                    const nextLog =\n                        allLogs.find(\n                            log => log.blockNumber >= transferLog.blockNumber\n                        ) || {}\n\n                    const bestShareValue = nextLog.shareValue || shareValue\n\n                    // approximate share value\n                    events[i].shareValue = bestShareValue\n                    events[i].walletAmount = transferLog.shares\n                        .mul(bestShareValue)\n                        .div(POOL_SHARES_TOKEN_DECIMALS_MUL)\n                })\n\n            withWalletAmount(sharesTokensTransfersOut)\n            withWalletAmount(sharesTokensTransfersInFromExternal)\n        }\n\n        const totalSharesOutTransfers = sharesTokensTransfersOut.reduce(\n            (a, b) => a.add(b.shares),\n            ZERO\n        )\n\n        const totalSharesOutTransfersWalletValue =\n            sharesTokensTransfersOut.reduce(\n                (a, b) => a.add(b.walletAmount),\n                ZERO\n            )\n\n        const totalSharesInTransfers = sharesTokensTransfersInFromExternal.reduce(\n            (a, b) => a.add(b.shares),\n            ZERO\n        )\n\n        const totalSharesInTransfersWalletValue =\n            sharesTokensTransfersInFromExternal.reduce(\n                (a, b) => a.add(b.walletAmount),\n                ZERO\n            )\n\n        const depositsWalletTotal = userEnters.reduce(\n            (a, b) => a.add(b.walletAmount),\n            ZERO\n        )\n\n        // Incl received + distributed to other staker. Used for calc reward because the were actually earned\n        const rageLeavesWithdrawnWalletTotal = userRageLeaves.reduce(\n            (a, b) => a.add(b.maxTokens),\n            ZERO\n        )\n\n        const rageLeavesReceivedWalletTotal = userRageLeaves.reduce(\n            (a, b) => a.add(b.receivedTokens),\n            ZERO\n        )\n\n        const withdrawsWalletTotal = userWithdraws.reduce(\n            (a, b) => a.add(b.receivedTokens),\n            ZERO\n        )\n\n        const totalLockedSharesCheck = [...userLeaves]\n            .filter(x => !x.withdrawTx)\n            .reduce((a, b) => a.add(b.shares), ZERO)\n\n        if (!totalLockedSharesCheck.eq(lockedShares)) {\n            console.error(\n                'locked shares different than check sum, user balance can be incorrect',\n                'lockedShares:',\n                lockedShares.toString(),\n                'totalLockedSharesCheck:',\n                totalLockedSharesCheck.toString()\n            )\n        }\n\n        const balanceSharesAvailable = balanceShares.sub(lockedShares).lt(ZERO)\n            ? ZERO \n            : balanceShares.sub(lockedShares)\n\n        const currentBalanceWalletAvailable = balanceSharesAvailable\n            .mul(shareValue)\n            .div(POOL_SHARES_TOKEN_DECIMALS_MUL)\n\n        // NOTE: used to calc actual balance in Wallet + rewards\n        const currentBalanceWallet = balanceShares\n            .mul(shareValue)\n            .div(POOL_SHARES_TOKEN_DECIMALS_MUL)\n\n        const currentBalanceSharesWalletValue = balanceShares\n            .mul(shareValue)\n            .div(POOL_SHARES_TOKEN_DECIMALS_MUL)\n\n        const hasInsufficentBalanceForUnbondCommitments = balanceShares.lt(\n            lockedShares\n        ) \n        const insufficientSharesAmoutForCurrentUnbonds =\n            hasInsufficentBalanceForUnbondCommitments\n                ? lockedShares.sub(balanceShares)\n                : ZERO\n\n        // NOTE: Used for rage leave because shareValue is can be different than in unbondCommitments\n        const currentBalanceWalletAtCurrentShareValue =\n            currentBalanceWalletAvailable\n        \n        // Enter, transfers in\n\t    const totalInTokenValue = depositsWalletTotal.add(totalSharesInTransfersWalletValue)\n        \n        // Withdraws, Transfers out, rage leaves\n        const totalOutTokenValue = withdrawsWalletTotal\n            .add(totalSharesOutTransfersWalletValue)\n            .add(rageLeavesWithdrawnWalletTotal)\n\n        const totalRewards = currentBalanceWallet\n            .add(totalOutTokenValue)\n            .sub(totalInTokenValue)\n\n\n        const hasActiveUnbondCommitments = !![...userLeaves].filter(\n            x => !x.withdrawTx\n        ).length\n\n        const stakings = userEnters\n            .concat(userLeaves)\n            .concat(userWithdraws)\n            .concat(userRageLeaves)\n            .concat(sharesTokensTransfersInFromExternal)\n            .concat(sharesTokensTransfersOut)\n            .sort((a, b) => a.blockNumber - b.blockNumber)\n\n        const withTimestamp = await Promise.all(\n            stakings.map(async stakingEvent => {\n                const { timestamp } = await ethProvider.getBlock(\n                    stakingEvent.blockNumber\n                )\n                return {\n                    ...stakingEvent,\n                    timestamp: timestamp * 1000,\n                }\n            })\n        )\n\n        const stats = {\n            // ...poolData,\n            balanceShares,\n            balanceSharesAvailable,\n            currentBalanceWallet,\n            currentBalanceWalletAvailable,\n            currentBalanceWalletAtCurrentShareValue,\n            currentBalanceSharesWalletValue,\n            hasInsufficentBalanceForUnbondCommitments,\n            insufficientSharesAmoutForCurrentUnbonds,\n            totalRewards,\n            totalSharesOutTransfersWalletValue,\n            totalSharesInTransfersWalletValue,\n            stakings: withTimestamp,\n            userLeaves,\n            depositsWalletTotal,\n            withdrawsWalletTotal,\n            leavesPendingToUnlockTotalMax,\n            leavesReadyToWithdrawTotalMax,\n            leavesPendingToUnlockTotalWallet,\n            leavesReadyToWithdrawTotalWallet,\n            hasActiveUnbondCommitments,\n            loaded: true,\n            userDataLoaded: true,\n            userShare,\n            remainingTime,\n            totalSharesOutTransfers,\n            totalSharesInTransfers,\n            rageLeavesReceivedWalletTotal,\n            rageLeavesWithdrawnWalletTotal,\n            totalInTokenValue,\n            totalOutTokenValue\n        }\n\n        return {\n            currentBalanceWalletAtCurrentShareValue: utils.formatUnits(\n                stats.currentBalanceWalletAtCurrentShareValue.toString(),\n                18\n            ),\n            balance: utils.formatUnits(\n                stats.currentBalanceWallet.toString(),\n                18\n            ),\n            poolShare: stats.userShare,\n            allTimeRewards: utils.formatUnits(\n                stats.totalRewards.toString(),\n                18\n            ),\n            totalDeposit: utils.formatUnits(\n                stats.depositsWalletTotal.toString(),\n                18\n            ),\n            totalWithdraws: utils.formatUnits(\n                stats.withdrawsWalletTotal.toString(),\n                18\n            ),\n            pendingToUnlock: utils.formatUnits(\n                stats.leavesPendingToUnlockTotalWallet.toString(),\n                18\n            ),\n            readyToWithdraw: utils.formatUnits(\n                stats.leavesReadyToWithdrawTotalWallet.toString(),\n                18\n            ),\n            totalInTokenValue: utils.formatUnits(\n                stats.totalInTokenValue.toString(),\n                18\n            ),\n            totalOutTokenValue: utils.formatUnits(\n                stats.totalOutTokenValue.toString(),\n                18\n            ),\n            rageLeavesReceivedWalletTotal: utils.formatUnits(\n                stats.rageLeavesReceivedWalletTotal.toString(),\n                18\n            ),\n            rageLeavesWithdrawnWalletTotal: utils.formatUnits(\n                stats.rageLeavesWithdrawnWalletTotal.toString(),\n                18\n            ),\n            totalSharesInTransfersWalletValue: utils.formatUnits(\n                stats.totalSharesInTransfersWalletValue.toString(),\n                18\n            ),\n            totalSharesOutTransfersWalletValue: utils.formatUnits(\n                stats.totalSharesOutTransfersWalletValue.toString(),\n                18\n            ),\n            remainingTime: stats.remainingTime,\n        }\n    }, [WALLET_ADDR, accountId, getAdexToStakingTransfersLogs])\n\n    useEffect(() => {\n        const getData = async (addresses, tokenLabel) => {\n            setIsLoading(true)\n            try {\n                const data = await getStats(addresses, tokenLabel)\n                setDetails(data)\n                setIsLoading(false)\n            } catch(e) {\n                console.error(e)\n                setIsLoading(false)\n            }\n        }\n        if (!accountId) return\n        getData(addresses, tokenLabel)\n    }, [accountId, addresses, getStats, setDetails, setIsLoading, tokenLabel])\n\n    return { details, isLoading } || {}\n}\n\nexport default useAmbireEarnDetails\n","import './AmbireEarnDetailsModal.scss'\n\nimport { MdClose } from 'react-icons/md'\nimport { useModals } from 'hooks'\nimport { Modal, Button } from 'components/common'\nimport { ToolTip } from 'components/common' \nimport useAmbireEarnDetails from 'hooks/useAmbireEarnDetails'\nimport { Loading } from 'components/common'\n\nconst AmbireEarnDetailsModal = ({ title = 'Details', apy, accountId, msToDaysHours, addresses, tokenLabel }) => {\n    const { hideModal } = useModals()\n    const { details, isLoading } = useAmbireEarnDetails({ accountId, addresses, tokenLabel })\n\n    const { \n        poolShare, \n        allTimeRewards, \n        totalDeposit, \n        totalWithdraws, \n        pendingToUnlock, \n        readyToWithdraw, \n        totalOutTokenValue,\n        totalInTokenValue,\n        rageLeavesReceivedWalletTotal,\n        rageLeavesWithdrawnWalletTotal,\n        totalSharesInTransfersWalletValue,\n        totalSharesOutTransfersWalletValue,\n        remainingTime, \n        currentBalanceWalletAtCurrentShareValue\n    } = details\n    const buttons = (<Button clear small icon={<MdClose />} onClick={hideModal}>Close</Button>)\n   \n    return (\n        <Modal id=\"wallet-more-details-modal\" title={title} buttons={buttons}>\n           {!isLoading ? (\n           <>\n                <div className=\"wrapper\">\n                    <div>Annual Percentage Yield (APY)</div><div>{apy}</div>\n                </div>\n                <div className=\"wrapper odd-rows-bg\">\n                    <div>Current Available Balance</div>\n                    <div>\n                        <ToolTip label=\"* Warning: The pool share value may include your pending to unlock tokens.\">\n                            {parseFloat(currentBalanceWalletAtCurrentShareValue).toFixed(4)} {tokenLabel} (Pool share*: {(poolShare * 100).toFixed(2)}%)\n                        </ToolTip>\n                    </div>\n                </div>\n                <div className=\"wrapper\">\n                    <div>All time rewards</div><div>{parseFloat(allTimeRewards).toFixed(4)} {tokenLabel}</div>\n                </div>\n                <div className=\"wrapper odd-rows-bg\">\n                    <ToolTip label={`Deposits: ${parseFloat(totalDeposit).toFixed(4)} ${tokenLabel} \n                                    \\nTransfers in: ${parseFloat(totalSharesInTransfersWalletValue).toFixed(4)} ${tokenLabel}`}>\n                        <div>Total deposit</div><div>{parseFloat(totalInTokenValue).toFixed(4)} {tokenLabel}</div>\n                    </ToolTip>\n                </div>\n                <div className=\"wrapper\">\n                <ToolTip label={`Withdrawals: ${parseFloat(totalWithdraws).toFixed(4)} ${tokenLabel}\n                                \\nTransfers out: ${parseFloat(totalSharesOutTransfersWalletValue).toFixed(4)} ${tokenLabel} \n                                \\nRage leaves: \n                                \\nReceived ${parseFloat(rageLeavesReceivedWalletTotal).toFixed(4)} ${tokenLabel} \n                                \\nWithdrawn ${parseFloat(rageLeavesWithdrawnWalletTotal).toFixed(4)} ${tokenLabel}`}>\n                    <div>Total withdraws</div><div>{parseFloat(totalOutTokenValue).toFixed(4)} {tokenLabel}</div>\n                </ToolTip>\n                </div>\n                <div className=\"wrapper odd-rows-bg\">\n                    <div>Total pending to unlock</div>\n                    <div>\n                        {remainingTime > 0 \n                            ? `${msToDaysHours(remainingTime)} until ${parseFloat(pendingToUnlock).toFixed(4)} ${tokenLabel} becomes available for withdraw.` \n                            : 'No pending unlocks'}\n                    </div>\n                </div>\n                <div className=\"wrapper\">\n                    <div>Ready to withdraw</div>\n                    <div>\n                        {parseFloat(readyToWithdraw) > 0 \n                        ? `${parseFloat(readyToWithdraw).toFixed(4)} ${tokenLabel}`\n                        : 'No amount for withdrawing'}\n                    </div>\n                </div>\n            </>): <div className='loading-wrapper'><Loading/></div>}\n        </Modal>\n    )\n}\n\nexport default AmbireEarnDetailsModal\n","import { useState, useEffect, useCallback, useMemo } from 'react'\nimport { fetchGet } from 'lib/fetch';\nimport { useToasts } from 'hooks/toasts'\n\nconst OFF_RAMP_FIAT = [\n    {\n        label: 'EUR',\n        value: 'EUR',\n        icon: `https://changenow.io/images/sprite/currencies/eur.svg`\n    },\n    {\n        label: 'GBP',\n        value: 'GBP',\n        icon: `https://changenow.io/images/sprite/currencies/gbp.svg`\n    },\n    {\n        label: 'USD',\n        value: 'USD',\n        icon: `https://changenow.io/images/sprite/currencies/usd.svg`\n    }\n]\n\nconst NETWORK_MAPPING = {\n    'ethereum': 'ETH',\n    'binance-smart-chain': 'BSC',\n    'polygon': 'MATIC',\n    'fantom': 'FTM',\n    'avalanche': 'AVAX'\n}\n\nconst DEFAULT_CRYPTO = {\n    'ethereum': 'ETH',\n    'binance-smart-chain': 'BNB',\n    'polygon': 'MATIC',\n    'fantom': 'FTM',\n    'avalanche': 'AVAX'\n\n}\n\nconst NATIVE_ADDRESS = '0x'+'0'.repeat(40)\n\nconst useGuardarian = function({ relayerURL, selectedNetwork, initMode, tokens, walletAddress }) {\n    const FIAT_CURRENCIES_URL = `${relayerURL}/guardarian/currencies/fiat`\n    const CRYPTO_CURRENCIES_URL = `${relayerURL}/guardarian/currencies/crypto`\n    const offRampFiats = OFF_RAMP_FIAT\n    const { addToast } = useToasts()\n    const [network, setNetwork] = useState(selectedNetwork)\n    const [from, setFrom] = useState('')\n    const [to, setTo] = useState('')\n    const [mode, setMode] = useState(initMode)\n    const [amount, setAmount] = useState('50')\n\n    const [cryptoCurrencies, setCryptoCurrencies] = useState({data: []})\n    const [onRampFiats, setOnRampFiats] = useState({data: []})\n\n    const [marketInfo, setMarketInfo] = useState(null)\n    const [estimateInfo, setEstimateInfo] = useState({data: null, isLoading: false})\n\n    const cryptoList = useMemo(() => {\n        if (mode === 'buy') {\n            return {\n                data: cryptoCurrencies?.data?.filter(t => t.networks.find(n => n.network === NETWORK_MAPPING[network] && n.payment_methods.some(pm => pm.withdrawal_enabled\n                ))).map(t => ({\n                    label: t.ticker,\n                    value: t.ticker ,\n                    icon: t.logo_url\n                })).filter(t => t.value) || [],\n                isLoading: cryptoCurrencies?.isLoading\n            }\n        } else if (mode === 'sell') {\n            return {\n                data: cryptoCurrencies?.data?.filter(t => t.networks.find(n => n.network === NETWORK_MAPPING[network] && n.payment_methods.some(pm => pm.deposit_enabled) && tokens.find(bt => bt?.address?.toLowerCase() === n?.token_contract?.toLowerCase() || (bt?.address === NATIVE_ADDRESS && n?.token_contract === null))))\n                    .map(t => ({\n                        label: t.ticker,\n                        value: t.ticker ,\n                        icon: t.logo_url\n                    })).filter(t => t.value) || [],\n                isLoading: cryptoCurrencies.isLoading\n            }\n        }\n    }, [mode, cryptoCurrencies, network, tokens])\n\n    const fiatList = useMemo(() => {\n        if (mode === 'buy') {\n            return {\n                data: onRampFiats?.data?.map(f => ({\n                    label: f.ticker,\n                    value: f.ticker,\n                    icon: f.logo_url || `https://changenow.io/images/sprite/currencies/${f?.ticker?.toLowerCase()}.svg`\n                })) || [],\n                isLoading: onRampFiats?.isLoading\n            }\n        } else if (mode === 'sell') {\n            return {\n                data: offRampFiats,\n                isLoading: false\n            }\n        }\n    }, [mode, onRampFiats, offRampFiats])\n\n    //mode\n    useEffect(()=> {\n        if (mode === 'buy') {\n            setAmount('50')\n            setFrom(fiatList.data && fiatList.data[0] ? fiatList.data[0].value : null)\n            setTo(DEFAULT_CRYPTO[network])\n        } else if (mode === 'sell') {\n            setAmount('')\n            setFrom(cryptoList.data && cryptoList.data[0] ? cryptoList.data[0].value : null)\n            setTo(fiatList.data && fiatList.data[0] ? fiatList.data[0].value : null)\n        }\n    }, [mode, fiatList, cryptoList, network])\n\n    //fiat\n    useEffect(() => {\n        setOnRampFiats({data: null, isLoading: true})\n        fetchGet(FIAT_CURRENCIES_URL)\n            .then((data) => setOnRampFiats({data, isLoading: false, error: {}, message: ''}))\n            .catch(error => {\n                setOnRampFiats({data: null, isLoading: false, error, message: 'Error while fetching fiat list'})\n                addToast('Error while fetching fiat list', { error: true })\n            })\n    }, [FIAT_CURRENCIES_URL, addToast])\n\n    //ctypto\n    useEffect(() => {\n        setCryptoCurrencies({data: null, isLoading: true})\n        fetchGet(CRYPTO_CURRENCIES_URL)\n            .then((data) => {\n                setCryptoCurrencies({data, isLoading: false, error: {}, message: ''})\n            })\n            .catch(error => {\n                setCryptoCurrencies({data: null, isLoading: false, error, message: 'Error while fetching crypto list'})\n                addToast('Error while fetching crypto list', { error: true })\n            })\n    }, [network, CRYPTO_CURRENCIES_URL, addToast])\n\n\n    const genMarketInfoUrl = useCallback(() => {\n        const fromTo =\n            mode === 'buy'\n                ? `${from}_${to}-${NETWORK_MAPPING[network]}`\n                : mode === 'sell'\n                    ? `${from}-${NETWORK_MAPPING[network]}_${to}`\n                    : null\n\n        if (fromTo) return `${relayerURL}/guardarian/market-info/${fromTo}`\n        else return null\n    }, [mode, from, to, network, relayerURL])\n\n    // MarketInfo\n    useEffect(() => {\n        if (!network || !from || !to || !mode) return setMarketInfo({ data: null, isLoading: false })\n\n        setMarketInfo({ data: null, isLoading: true })\n\n        const url = genMarketInfoUrl()\n\n        // Prevent State updates on unmounted components\n        let unmounted = false\n\n        fetchGet(url)\n            .then(({data}) => !unmounted && setMarketInfo({ data, isLoading: false }))\n            .catch(error => !unmounted && (\n                setMarketInfo({ data: null, isLoading: false, error, message: 'Error while fetching market info' }),\n                addToast('Error while fetching market info', { error: true })\n                ))\n        return () => {\n            unmounted = true\n        }\n    }, [network, mode, from, to, addToast, genMarketInfoUrl])\n\n\n    const genEstimateUrl = useCallback(() => {\n        if (mode === 'buy'){\n            return `${relayerURL}/guardarian/estimate/${from}/${network}/${amount}/${to}/${'true'}`\n        } else {\n            return `${relayerURL}/guardarian/estimate/${from}/${network}/${amount}/${to}/${'false'}`\n        }\n    }, [mode, relayerURL, from, network, amount, to])\n\n    // Estimate\n    useEffect(() => {\n        if (!network || !from || !to || !mode || !amount) return setEstimateInfo({ data: null, isLoading: false })\n\n        setEstimateInfo({ data: null, isLoading: true })\n\n        const url = genEstimateUrl()\n\n        // Prevent State updates on unmounted components\n        let unloaded = false\n\n        fetchGet(url)\n            .then(({data}) => !unloaded && setEstimateInfo({ data, isLoading: false }))\n            .catch(error => !unloaded && (\n                setEstimateInfo({ data: null, isLoading: false, error, message: 'Error while fetching estimate info' }),\n                addToast('Error while fetching estimate info', { error: true }))\n            )\n        return () => {\n            unloaded = true\n        }\n    }, [network, mode, from, to, amount, addToast, genEstimateUrl])\n\n    function genTxnUrl () {\n        if (mode === 'buy') {\n            return `${relayerURL}/guardarian/transaction/${from}/null/${amount}/${to}/${selectedNetwork}/${walletAddress}`\n        } else {\n            return `${relayerURL}/guardarian/transaction/${from}/${selectedNetwork}/${amount}/${to}/null/null`\n        }\n    }\n\n    return {\n        marketInfo,\n        estimateInfo,\n        cryptoList,\n        fiatList,\n        network,\n        from,\n        to,\n        mode,\n        amount,\n        cryptoCurrencies,\n        setNetwork,\n        setFrom,\n        setTo,\n        setMode,\n        setAmount,\n        genTxnUrl,\n        NETWORK_MAPPING,\n        NATIVE_ADDRESS,\n        DEFAULT_CRYPTO\n    }\n    \n}\n\n\nexport default useGuardarian","import './GuardarianDepositProviderModal.scss'\n\nimport { Button, Loading, Modal, TextInput, Select } from 'components/common'\nimport {useState, useMemo, useCallback} from 'react'\nimport { MdOutlineClose } from 'react-icons/md'\nimport useGuardarian from './useGuardarian'\nimport { useModals } from 'hooks'\nimport { useToasts } from 'hooks/toasts'\nimport { ToolTip } from 'components/common'\nimport { fetchGet } from 'lib/fetch';\nimport { popupCenter } from 'lib/popupHelper'\nimport url from 'url'\n\n\nconst GuardarianDepositProviderModal = ({ relayerURL, walletAddress, selectedNetwork, portfolio }) => {\n    const { hideModal } = useModals()\n    const { addToast } = useToasts()\n    const guardarian = useGuardarian({relayerURL, selectedNetwork, initMode: 'buy', tokens: portfolio.tokens, walletAddress, addToast })\n    const [sendTransactionLoading, setSendTransactionLoading] = useState(false)\n\n    const getCurrentTokenFromBalance = useCallback(() => {\n        if (portfolio.tokens && guardarian?.cryptoCurrencies?.data && guardarian.mode === 'sell') {\n            const token = guardarian?.cryptoCurrencies?.data?.find(t => t.ticker === guardarian.from)\n            return portfolio?.tokens?.find(t => token?.networks?.find(nt => (nt?.token_contract?.toLowerCase() === t?.address?.toLowerCase())\n                || (nt?.network === guardarian.NETWORK_MAPPING[guardarian.network] && t?.address.toLowerCase() ===  guardarian.NATIVE_ADDRESS && nt?.token_contract === null)))\n        }\n        else return {}\n    }, [guardarian, portfolio.tokens])\n\n    const validationMsg = useMemo(() => {\n        const marketData = guardarian?.marketInfo?.data\n\n        // In case of failed market info or estimate requests\n        if (guardarian?.marketInfo?.error || guardarian?.estimateInfo?.error) return 'Sorry! We couldn\\'t estimate your order! Please try again later!'\n\n        // If there is no market data fetch yet, we can't validate\n        if (!marketData) return ''\n\n        const userAmount = parseFloat(guardarian.amount)\n        const marketMin = parseFloat(marketData.min)\n        const marketMax = parseFloat(marketData.max)\n\n        if (guardarian.mode === 'buy') {\n            if (userAmount < marketMin) return `Minimum amount is ${marketData.min} ${marketData.from}`\n            if (userAmount > marketMax) return `Maximum amount is ${marketData.max} ${marketData.from}`\n        } else if (guardarian.mode === 'sell') {\n            const currToken = getCurrentTokenFromBalance()\n\n            if (userAmount < marketMin) return `Minimum amount is ${marketData.min} ${marketData.from}`\n            if (userAmount > marketMax) return `Maximum amount is ${marketData.max} ${marketData.from}`\n            if (currToken && guardarian?.from && (userAmount > currToken.balance)) return `You do not have enough funds`\n        }\n\n        return ''\n    }, [guardarian, getCurrentTokenFromBalance])\n\n    const switchMode = () => {\n        // On switching mode, reset from/to, because the next form gets obsolete field values\n        // and can result in wrong API calls (fired in `useGuardarian` useEffect)\n        guardarian.setMode((prevMode) => prevMode === 'buy' ? 'sell' : 'buy')\n        guardarian.setAmount('')\n        guardarian.setFrom('')\n        guardarian.setTo(guardarian.mode === 'buy' ? guardarian.DEFAULT_CRYPTO[guardarian.NETWORK_MAPPING[guardarian.network]] : '')\n    }\n\n    function changeFrom(value) {\n        guardarian.setFrom(value)\n    }\n\n    function changeTo(value) {\n        guardarian.setTo(value)\n    }\n\n    const onInputAmount = value => {\n        guardarian.setAmount(value)\n    }\n\n    function sendTxn () {\n        setSendTransactionLoading(true)\n        fetchGet(guardarian.genTxnUrl())\n            .then(({data}) => {\n                setSendTransactionLoading(false)\n                if (data?.redirect_url) {\n                    popupCenter({\n                        url: url.format(data?.redirect_url),\n                        title: 'Guardarian Deposit',\n                        w: 560,\n                        h: 710,\n                    })\n                }\n            })\n            .catch(e => {\n                addToast('Error while trying to send transaction', { error: true })\n                setSendTransactionLoading(false)\n            })\n    }\n\n    const buttons = <>\n        <Button clear icon={<MdOutlineClose/>} onClick={() => hideModal()}>Close</Button>\n        <Button \n            disabled={\n                validationMsg !== '' \n                || guardarian?.marketInfo?.isLoading \n                || guardarian?.estimateInfo?.isLoading \n                || guardarian?.txn?.isLoading\n                || guardarian?.amount === ''\n                || sendTransactionLoading\n            } \n            onClick={sendTxn}>{guardarian.mode === 'buy' ? 'Buy' : 'Sell'}</Button>\n    </>\n\n    return (\n        <Modal id=\"guardarian-modal\" title=\"Guardarian\" buttons={buttons}>\n            <div className='buy-sell-btns-wrapper'>\n                <div className={guardarian.mode === 'buy' ? 'button active' : 'button'} onClick={switchMode}>Buy</div>\n                <div className={guardarian.mode === 'sell' ? 'button active' : 'button'} onClick={switchMode}>Sell</div>    \n                \n            </div>\n            \n            <div className='input-currencies-wrapper'>\n            <div className='amount'>\n                <TextInput\n                    value={guardarian.amount}\n                    label=\"You send\"\n                    placeholder=\"Input amount\"\n                    onInput={onInputAmount}\n                />\n            </div>\n            <div className='currency'>\n                { (guardarian.mode === 'buy' && !guardarian?.fiatList?.isLoading) || (guardarian?.mode === 'sell' && !guardarian?.cryptoList?.isLoading)\n                ? <Select \n                    searchable \n                    defaultValue={guardarian.from} \n                    items={guardarian.mode === 'buy' ? guardarian.fiatList.data : guardarian.cryptoList.data} \n                    onChange={({value}) => changeFrom(value)}/>\n                : <div className='loading-wrapper'><Loading /> </div>}\n            </div>\n        </div>\n        { (validationMsg !== '') && (<p style={{ color: 'red' }}>{ validationMsg }</p>) }\n\n            <div className='estimation-info-wrapper'>\n                <div className='extra-fees'>\n                    <ToolTip label='All the exchange fees are added into the rate. There are no extra costs.'>\n                        No extra fees\n                    </ToolTip>\n                </div>\n                <div className='estimation-rate'>\n                    <ToolTip label='This is expected rate. Guardarian guarantees to pick up the best possible rate on the moment of the exchange'>\n                    Estimation rate: {' '}\n                { !guardarian.estimateInfo.isLoading && guardarian?.estimateInfo?.data && validationMsg === ''\n                    ? (<>\n                        { 1 + guardarian?.estimateInfo?.data?.from_currency} ≈ {guardarian?.estimateInfo?.data?.estimated_exchange_rate} {guardarian?.estimateInfo?.data?.to_currency}\n                    </>)\n                    : <></>}\n                </ToolTip>\n                </div>\n            </div> \n        <div className='input-currencies-wrapper'>\n            <div className='amount'> \n                { !guardarian.estimateInfo.isLoading\n                    ? (<TextInput\n                        value= {guardarian?.estimateInfo?.data ? guardarian?.estimateInfo?.data?.value : ''}\n                        disabled\n                        label=\"You get\"\n                    />) \n                    : (\n                        <>\n                            <label>You get</label>\n                            <div className='loading-wrapper'><Loading /> </div>\n                        </>\n                    )}\n            </div>\n            <div className='currency'>\n            { (guardarian?.mode === 'buy' && !guardarian?.cryptoList?.isLoading) || (guardarian?.mode === 'sell' && !guardarian?.fiatList?.isLoading)\n                ? <Select \n                    searchable \n                    defaultValue={guardarian?.to}\n                    items={guardarian?.mode === 'sell' ? guardarian?.fiatList?.data : guardarian?.cryptoList?.data} \n                    onChange={({value}) => changeTo(value)}/> \n                : <div className='loading-wrapper'><Loading /> </div>}\n            </div>\n        </div>\n        </Modal>\n    )\n}                    \n\nexport default GuardarianDepositProviderModal","import { getAddress, hexDataLength } from 'ethers/lib/utils'\n\nconst NUMBER_STRING_REGEX = /^([0-9]+\\.?[0-9]*)$/\nconst HEX_DATA_LENGTH = 32\nconst TIME_LOCK_NUMBER_LENGTH = 6\nconst MAX_FILE_SIZE = 3072\nconst NEEDED_KEYS = [\n  'salt',\n  'identityFactoryAddr',\n  'baseIdentityAddr',\n  'bytecode',\n  'signer',\n]\n\nconst validateImportedAccountProps = acc => {\n  if (!(acc && validateAccountProps(acc))) {\n    return {\n      success: false,\n      message: 'The imported file does not contain needed account data.',\n    }\n  }\n\n  if (!(acc.id && isValidAddress(acc.id))) {\n    return { \n      success: false, \n      message: 'Failed to import JSON file: invalid id' \n    }\n  }\n\n  if (!(acc.signer && isValidAddress(acc.signer.address || acc.signer.quickAccManager))) {\n    return {\n      success: false,\n      message: 'JSON file: invalid signer address',\n    }\n  }\n\n  if (acc.signer.quickAccManager) {\n    if (!(acc.signer.timelock && isValidTimeLock(acc.signer.timelock))) {\n      return {\n        success: false,\n        message: 'Failed to import JSON file: invalid signer timelock',\n      }\n    }\n\n    if (!(acc.signer.one && isValidAddress(acc.signer.one))) {\n      return {\n        success: false,\n        message: 'Failed to import JSON file: invalid signer one',\n      }\n    }\n\n    if (!(acc.signer.two && isValidAddress(acc.signer.two))) {\n      return {\n        success: false,\n        message: 'Failed to import JSON file: invalid signer two',\n      }\n    }\n  }\n\n  if (!(acc.salt && isValidSalt(acc.salt))) {\n    return { success: false, message: 'JSON file: invalid salt' }\n  }\n\n  if (!(acc.identityFactoryAddr && isValidAddress(acc.identityFactoryAddr))) {\n    return {\n      success: false,\n      message: 'JSON file: invalid identity Factory Address',\n    }\n  }\n\n  if (!(acc.baseIdentityAddr && isValidAddress(acc.baseIdentityAddr))) {\n    return {\n      success: false,\n      message: 'JSON file: invalid base Identity Address',\n    }\n  }\n\n  return { success: true }\n}\n\nconst isValidAddress = addr => {\n  try {\n    return getAddress(addr) === addr\n  } catch (e) {\n    return false\n  }\n}\n\nconst isValidTimeLock = timelock => {\n  return NUMBER_STRING_REGEX.test(timelock) && timelock.toString().length === TIME_LOCK_NUMBER_LENGTH\n}\nconst isValidSalt = salt => hexDataLength(salt) === HEX_DATA_LENGTH\nconst validateAccountProps = acc => NEEDED_KEYS.every(key => Object.keys(acc).includes(key))\nconst fileSizeValidator = file => {\n  if (file.size > MAX_FILE_SIZE) {\n    return {\n      code: \"file-size-too-large\",\n      message: `The file size is larger than ${(MAX_FILE_SIZE / 1024).toFixed(2)} KB.`\n    }\n  }\n\n  return null\n}\n\n\nexport {\n  validateImportedAccountProps,\n  fileSizeValidator\n}\n","import { Bundle } from 'adex-protocol-eth'\nimport { Interface, keccak256, AbiCoder } from 'ethers/lib/utils'\nimport accountPresets from 'ambire-common/src/constants/accountPresets'\n\nconst IDENTITY_INTERFACE = new Interface(require('adex-protocol-eth/abi/Identity5.2'))\nconst { quickAccManager } = accountPresets\n\nconst buildRecoveryBundle = (identity, network, signer, newValues) => {\n    const abiCoder = new AbiCoder()\n    const { timelock, one, two } = newValues.signer\n    const newQuickAccHash = keccak256(abiCoder.encode(['tuple(uint, address, address)'], [[timelock, one, two]]))\n\n    return new Bundle({\n        identity,\n        network,\n        signer,\n        txns: [[\n            identity,\n            '0x00',\n            IDENTITY_INTERFACE.encodeFunctionData('setAddrPrivilege', [\n                quickAccManager,\n                newQuickAccHash,\n            ]),\n        ]],\n        recoveryMode: newValues\n    })\n}\n\nexport default buildRecoveryBundle","export default __webpack_public_path__ + \"static/media/dapps.cec88e8a.svg\";","import { Button } from 'components/common'\nimport { useCallback } from 'react'\n\nconst SeedWordsList = ({ words, setModalSteps }) => {\n\n  const onWordsWrittenDown = useCallback(() => {\n    setModalSteps(prev => {\n      return { ...prev, stepIndex: 2 }\n    })\n  }, [setModalSteps])\n\n  return <div>\n    <div className='instructions'>\n      Please write down the following words in their respective order, on a piece of paper.<br/>\n      We <b>do not</b> recommend to copy/paste or store those words on you computer.\n    </div>\n    <div className='seedWordsList'>\n      {\n        words.map((word, index) => {\n          return (<div className='seedWordsList-cell'>\n            <span className='seedWordsList-index'>{index + 1}</span>\n            <span className='seedWordsList-word'>{word}</span>\n          </div>)\n        })\n      }\n    </div>\n    <div className='buttonHolder'>\n      <Button full onClick={onWordsWrittenDown}>I wrote down those words</Button>\n    </div>\n  </div>\n}\n\nexport default SeedWordsList\n","import { Button, TextInput } from 'components/common'\nimport { useCallback, useState, useRef, useEffect } from 'react'\nimport { Wallet } from 'ethers'\nimport { MdClose } from 'react-icons/md'\n\nconst UnlockAccount = ({ selectedAccount, accounts, setModalSteps, setMnemonic, setError, setModalButtons, hideModal }) => {\n\n  const [isLoading, setIsLoading] = useState(false)\n  const [passphrase, setPassphrase] = useState()\n\n  const textFieldRef = useRef()\n\n  const currentAccount = accounts.find(a => selectedAccount.id.toLowerCase() === a.id.toLowerCase())\n\n  const onUnlock = useCallback(async () => {\n    if (!passphrase) {\n      setError('Enter your passphrase')\n      return\n    }\n    setError(null)\n    setIsLoading(true)\n\n    if (currentAccount.primaryKeyBackup) {\n      const keyBackup = JSON.parse(currentAccount.primaryKeyBackup)\n\n      const wallet = await Wallet.fromEncryptedJson(keyBackup, passphrase).catch(err => {\n        setError('Wallet decryption error: ' + err.message)\n      })\n\n      setIsLoading(false)\n\n      if (wallet) {\n        setMnemonic(wallet.mnemonic.phrase.split(' '))\n        setModalSteps(prev => {\n          return { ...prev, stepIndex: 1 }\n        })\n      }\n    } else {\n      // should not happen because button should be grayed out upstream\n    }\n  }, [passphrase, setError, currentAccount.primaryKeyBackup, setMnemonic, setModalSteps])\n\n  useEffect(() => {\n\n    if (!currentAccount.primaryKeyBackup) {\n      setModalButtons([<Button\n        full\n        clear\n        icon={<MdClose/>}\n        className={'primary'}\n        onClick={() => hideModal()}\n      >Close</Button>])\n    }\n\n    setTimeout(() => {\n      textFieldRef?.current?.focus()\n    }, 100)\n  }, [currentAccount, hideModal, setModalButtons])\n\n  // This should not happen\n  if (!currentAccount.primaryKeyBackup) {\n    return (<div>\n      Your account does not have any imported keys. Import your keys first.\n    </div>)\n  }\n\n  return (\n    <>\n      <div className='instructions'>\n        Enter the passphrase for <span>{selectedAccount.email}</span> to continue\n      </div>\n\n      <TextInput password onChange={(val) => setPassphrase(val)} ref={textFieldRef} placeholder='Passphrase'/>\n\n      <div className='buttonHolder'>\n        <Button\n          full\n          disabled={isLoading}\n          onClick={onUnlock}>\n          Display seed words\n        </Button>\n      </div>\n    </>\n  )\n}\n\nexport default UnlockAccount\n","import { Button } from 'components/common'\nimport { useCallback, useEffect, useState } from 'react'\nimport { MdClose } from 'react-icons/md'\nimport { FaCheck } from 'react-icons/fa'\n\nconst VerifySeedWords = ({ words, setModalButtons, hideModal, onAddAccount, selectedAccount, accounts }) => {\n\n  const [error, setError] = useState(null)\n  const [wordIndex, setWordIndex] = useState(0)\n  const [selectedWordFeedback, setSelectedWordFeedback] = useState({})\n  const [animationNextWord, setAnimationNextWord] = useState(false)\n\n  // to seed random sort words for verification\n  const randNum = (word) => {\n    let asciiNumStr = '0'\n    for (let i = 0; i < word.length; i++) {\n      asciiNumStr += word.charCodeAt(i) + ''\n    }\n\n    // some random reducer\n    let finalNum = asciiNumStr\n    while (finalNum > 100) {\n      finalNum = (finalNum.slice(0, finalNum.length - 2) * 1 + finalNum.slice(finalNum.length - 2) * 1) + ''\n    }\n    return finalNum * 1\n  }\n\n  // getting 4 words to pick from, including the correct one\n  const getWordChoices = useCallback(() => {\n    const correctWord = words[wordIndex]\n\n    const shuffledWordsList = [...words.slice(0, wordIndex), ...words.slice(wordIndex + 1)]\n      .sort((a, b) => randNum(a) - randNum(b))\n\n    // quick hack to loop over end of array\n    const wordsStream = [...shuffledWordsList, ...shuffledWordsList]\n\n    return [correctWord, ...wordsStream.slice(wordIndex, wordIndex + 3)]\n      .sort((a, b) => {\n        return randNum(a) - randNum(b)\n      }).map((w, index) => {\n        return {\n          word: w,\n          selected: selectedWordFeedback.index === index,\n          correct: correctWord === w\n        }\n      })\n  }, [words, wordIndex, selectedWordFeedback])\n\n  const selectWord = useCallback((selectedWord, selectedIndex) => {\n    setError(null)\n\n    const correct = words[wordIndex] === selectedWord\n    setSelectedWordFeedback({ index: selectedIndex, correct })\n\n    // word click animation\n    setTimeout(() => {\n      if (words[wordIndex] === selectedWord) {\n        setAnimationNextWord(true)\n        setTimeout(() => {\n          setSelectedWordFeedback({})\n          setTimeout(() => {\n            setWordIndex(wordIndex + 1)\n            setAnimationNextWord(false)\n          }, 150)\n        }, 150)\n      } else {\n        setSelectedWordFeedback({})\n        setError(`The word you selected is not the correct word #${wordIndex + 1}`)\n      }\n    }, 400)\n  }, [words, wordIndex, setError])\n\n  // Display final closing button when all the words are verified\n  useEffect(() => {\n    if (wordIndex > 11) {\n      const currentAccount = accounts.find(a => selectedAccount.id.toLowerCase() === a.id.toLowerCase())\n      if (currentAccount) {\n        onAddAccount({\n          ...currentAccount,\n          backupOptout: false\n        })\n      } else {\n        console.error('could not find account for ' + selectedAccount.id)\n      }\n\n      setModalButtons([<Button\n        full\n        icon={<MdClose/>}\n        className={'primary'}\n        onClick={() => hideModal()}\n      >Close</Button>])\n    }\n  }, [wordIndex, setModalButtons, hideModal, accounts, selectedAccount, onAddAccount])\n\n  if (wordIndex > 11) {\n    return <div className='notification-hollow success text-center mt-4'>\n      Verification complete!<br/>\n      You should now put your paper in a safe place\n    </div>\n  }\n\n  return <div>\n    <div className='instructions'>\n      To make sure your backup is perfect, please verify your backup by clicking on the correct word\n    </div>\n\n    <div className='wordsSelectorContainer'>\n      <div className='wordRequestedTitle'>\n        Select the word as it appears on your backup\n      </div>\n\n      <div className={`wordsSelector${animationNextWord ? ' nextWordFade' : ''}`}>\n        <div className='wordIndex'>\n          Word <span>#{wordIndex + 1}</span>\n        </div>\n        <div className={`wordChoices${selectedWordFeedback.correct ? ' animated' : ''}`}>\n          {\n            getWordChoices().map((w, index) => {\n              return (<span\n                className={`wordChoice${w.selected ? (' selected ' + (w.correct ? 'correct' : 'incorrect')) : ''}`}\n                onClick={() => selectWord(w.word, index)}>{w.word}\n              </span>)\n            })\n          }\n        </div>\n        {\n          selectedWordFeedback.correct &&\n          <div className='visualCheckmark'><FaCheck/></div>\n        }\n      </div>\n\n      {\n        error &&\n        <div className='error-message'>\n          {error}\n        </div>\n      }\n    </div>\n  </div>\n}\n\nexport default VerifySeedWords\n","import { useModals } from 'hooks'\nimport { Modal, Stepper } from 'components/common'\n\nimport { useLayoutEffect, useState } from 'react'\n\nimport './PaperBackupModal.scss'\nimport SeedWordsList from './SubComponents/SeedWordsList'\nimport UnlockAccount from './SubComponents/UnlockAccount'\nimport VerifySeedWords from './SubComponents/VerifySeedWords'\n\nconst PaperBackupModal = ({ selectedAccount, accounts, modalCloseHandler, onAddAccount }) => {\n  const { hideModal, setBeforeCloseModalHandler } = useModals()\n\n  const [modalButtons, setModalButtons] = useState(null)\n  const [modalSteps, setModalSteps] = useState({\n    steps: [\n      {\n        name: 'Unlock account'\n      },\n      {\n        name: 'Write seed words'\n      },\n      {\n        name: 'Verify seed words'\n      }\n    ], stepIndex: 0\n  })\n\n  const [error, setError] = useState(null)\n  const [mnemonic, setMnemonic] = useState(null)\n\n  const getModalTitle = () => {\n    return (<div>\n      <span>Backup on paper</span>\n      <Stepper steps={modalSteps.steps} currentStep={modalSteps.stepIndex} noLabels={false}/>\n    </div>)\n  }\n\n  useLayoutEffect(() => {\n    if (modalCloseHandler) {\n      setBeforeCloseModalHandler(() => modalCloseHandler)\n    }\n  }, [setBeforeCloseModalHandler, modalCloseHandler])\n\n  return (\n    <Modal id='paper-backup-modal' title={getModalTitle()} buttons={modalButtons}>\n      <div>\n        {\n          error && <div className='error-message'>\n            {error}\n          </div>\n        }\n\n        {\n          modalSteps.stepIndex === 0 &&\n          <UnlockAccount\n            setModalButtons={setModalButtons}\n            hideModal={hideModal}\n            setModalSteps={setModalSteps}\n            selectedAccount={selectedAccount}\n            accounts={accounts}\n            setMnemonic={setMnemonic}\n            setError={setError}/>\n        }\n\n        {\n          modalSteps.stepIndex === 1 &&\n          <SeedWordsList\n            setModalSteps={setModalSteps}\n            words={mnemonic}/>\n        }\n\n        {\n          modalSteps.stepIndex === 2 &&\n          <VerifySeedWords\n            setModalButtons={setModalButtons}\n            setModalSteps={setModalSteps}\n            words={mnemonic}\n            setError={setError}\n            hideModal={hideModal}\n            onAddAccount={onAddAccount}\n            accounts={accounts}\n            selectedAccount={selectedAccount}\n          />\n        }\n\n      </div>\n    </Modal>\n  )\n}\n\nexport default PaperBackupModal\n","import { Button, TextInput, Loading } from 'components/common'\nimport { useCallback, useEffect, useState, useRef } from 'react'\nimport { FaTimes, FaCheck, FaSync, FaInfoCircle } from 'react-icons/fa'\nimport { Wallet } from 'ethers'\nimport { fetchGet } from 'lib/fetch'\n\nconst ImportSeedWordsForm = ({ accounts, selectedAccount, setModalSteps, foundAddress, setFoundAddress, setWallet, relayerURL, newAccount, retrievedIdentity, setRetrievedIdentity, hideModal, setModalButtons }) => {\n\n  // we don't want to pass because we want to display the error further down in the modal instead\n  const [error, setError] = useState(null)\n  const [currentWord, setCurrentWord] = useState(null)\n  const [words, setWords] = useState([])\n  const [previewDeletionIndex, setPreviewDeletionIndex] = useState(null)\n  const [modifyingIndex, setModifyingIndex] = useState(null)\n\n  const [possibleRetrievedIdentities, setPossibleRetrievedIdentities] = useState(null)\n\n  const [networkFetchError, setNetworkFetchError] = useState(null)\n\n  const textFieldRef = useRef()\n\n  const validateWord = useCallback(() => {\n    setFoundAddress(null)\n    if (!currentWord) {\n      setError('Invalid seed word')\n      return\n    }\n    setError(null)\n\n    // in case the user is pasting the whole words\n    if (words.length === 0) {\n      const pastedWords = currentWord.split(' ')\n      if (pastedWords.length === 12) {\n        let sanitizedPastedWords = []\n        for (let w of pastedWords) {\n          if (w.trim().match(/^[A-Za-z]+$/g)) {\n            sanitizedPastedWords.push(w.trim())\n          } else {\n            setError('Invalid seed word ' + w)\n            return\n          }\n        }\n        setCurrentWord('')\n        setWords(sanitizedPastedWords)\n        return\n      }\n    }\n\n    const sanitized = currentWord.trim()\n    if (!sanitized.match(/^[A-Za-z]+$/g)) {\n      setError('Invalid seed word')\n    } else {\n      if (modifyingIndex !== null) {\n        setModifyingIndex(null)\n        setWords(prev => {\n          prev[modifyingIndex] = sanitized\n          return [...prev]\n        })\n      } else {\n        setWords(prev => [...prev, sanitized])\n      }\n      setCurrentWord('')\n    }\n  }, [setFoundAddress, currentWord, words.length, modifyingIndex])\n\n  const onTextFieldChange = useCallback((val) => {\n    if (val.trim() !== currentWord) {\n      setError(null)\n    }\n    setCurrentWord(val.trim())\n  }, [currentWord, setError])\n\n  const onTextFieldKeyDown = (key) => {\n    if (key === 'Enter' || key === ' ') {\n      validateWord()\n    }\n  }\n\n  const previewDeletion = useCallback((index) => {\n    if (modifyingIndex !== null) return\n    setPreviewDeletionIndex(index)\n  }, [modifyingIndex])\n\n  const cancelPreviewDeletion = useCallback(() => {\n    setPreviewDeletionIndex(null)\n  }, [])\n\n  const deleteWord = useCallback((index) => {\n    if (modifyingIndex !== null) return\n    setWords(prev => {\n      return prev.slice(0, index)\n    })\n    cancelPreviewDeletion()\n    setError(null)\n  }, [cancelPreviewDeletion, setError, modifyingIndex])\n\n  const modifyWord = useCallback((index) => {\n    setError(null)\n    setModifyingIndex(index)\n    setCurrentWord(words[index])\n  }, [words, setError])\n\n  const validateModification = useCallback(() => {\n    setModifyingIndex(null)\n    validateWord()\n  }, [validateWord])\n\n  const onValidate = useCallback(() => {\n    // is there a way to share between comps without leaking wallet in memory\n    setWallet(Wallet.fromMnemonic(words.join(' ')))\n    setModalSteps(prev => ({ ...prev, stepIndex: 1 }))\n  }, [setWallet, setModalSteps, words])\n\n  const validateSeedWords = useCallback(() => {\n    setModalButtons(null)\n    if (words.length < 12) {\n      return\n    }\n    try {\n      const wallet = Wallet.fromMnemonic(words.join(' '))\n      setFoundAddress(wallet.address)\n      setRetrievedIdentity(null)\n    } catch (e) {\n      setFoundAddress(null)\n      setError('Could not compute address: ' + e.message + '. Please check and delete the incorrect words')\n    }\n  }, [setModalButtons, words, setFoundAddress, setRetrievedIdentity])\n\n  const checkMatchingIdentity = useCallback(async() => {\n    if (!foundAddress) return\n    if (words.length !== 12) return\n    setNetworkFetchError(null)\n\n    let wallet\n    try {\n      wallet = Wallet.fromMnemonic(words.join(' '))\n    } catch (e) {\n      setError('Failed to compute address:' + e.message)\n      return\n    }\n\n    const signature = await wallet.signMessage('get_identity_from_signer')\n\n    const url = `${relayerURL}/account-by-quickAccPrimaryKey/${signature}`\n\n    fetchGet(url)\n      .then(result => {\n        if (result.success) {\n          if (result.identities.length === 1) {\n            setRetrievedIdentity(result.identities[0])\n          } else {\n            setPossibleRetrievedIdentities(result.identities)\n          }\n        } else {\n          setRetrievedIdentity(false)\n        }\n      })\n      .catch(err => {\n        setNetworkFetchError(err.message)\n      })\n  }, [foundAddress, words, relayerURL, setRetrievedIdentity])\n\n  const pickPossibleIdentity = useCallback((identity) => {\n    setPossibleRetrievedIdentities(null)\n    setRetrievedIdentity(identity)\n  }, [setRetrievedIdentity])\n\n  useEffect(() => {\n    if (retrievedIdentity) {\n      const existing = accounts.find(a => a.id.toLowerCase() === retrievedIdentity.id.toLowerCase() && !!a.primaryKeyBackup)\n\n      if (existing) {\n        setModalButtons([<Button full clear onClick={() => hideModal()} >\n          Close\n        </Button>])\n      } else {\n        setModalButtons([<Button full onClick={onValidate} >\n          Continue\n        </Button>])\n      }\n    }\n  }, [accounts, hideModal, onValidate, retrievedIdentity, setModalButtons])\n\n  useEffect(() => {\n    validateSeedWords()\n  }, [validateSeedWords])\n\n  useEffect(() => {\n    checkMatchingIdentity()\n  }, [checkMatchingIdentity])\n\n  useEffect(() => {\n    setTimeout(() => {\n      textFieldRef?.current?.focus()\n    }, 100)\n  }, [])\n\n  const renderRetrievedIdentityFeedback = useCallback(() => {\n    if (retrievedIdentity !== null) {\n      if (retrievedIdentity === false) {\n        return (<div className='error-message'>Could not retrieve Ambire account from this signer</div>)\n      }\n      if (!newAccount && retrievedIdentity.id.toLowerCase() !== selectedAccount.id.toLowerCase()) {\n        return (\n          <div className='error-message'>\n            The signer account you imported does not belong to the selected Ambire account {selectedAccount.id}.<br />\n            <br />\n            This signer account belongs to the Ambire account {retrievedIdentity.id}\n          </div>\n        )\n      }\n\n      if (newAccount || retrievedIdentity.id.toLowerCase() === selectedAccount.id.toLowerCase()) {\n\n        const existing = accounts.find(a => a.id.toLowerCase() === retrievedIdentity.id.toLowerCase() && !!a.primaryKeyBackup)\n\n        return (\n          <div>\n            <div>\n              <b>Ambire account</b>\n              <div className='address'>{retrievedIdentity.id}</div>\n            </div>\n            {\n              existing &&\n              <div className='notification-hollow info'>\n                You have already added this account\n              </div>\n            }\n          </div>\n          )\n      }\n    }\n  }, [retrievedIdentity, newAccount, selectedAccount, accounts])\n\n  return <div>\n    <div className='instructions'>\n      Type in the words in the order they appear on your paper backup.<br />\n      <span className='unimportant'>Press <i>enter</i> or <i>space</i> after each word\n      to validate it</span>\n    </div>\n    {\n      (words.length < 12 || modifyingIndex !== null) &&\n      <div className='seedWordsForm'>\n        <TextInput\n          placeholder={`Word #${modifyingIndex !== null ? (modifyingIndex + 1) : (words.length + 1)}`}\n          value={currentWord}\n          onChange={onTextFieldChange}\n          onKeyDown={onTextFieldKeyDown}/>\n      </div>\n    }\n    {\n      error && <div className='error-message'>\n        {error}\n      </div>\n    }\n    {\n      !!words.length &&\n      <div\n        className={`importedSeedWordsList${modifyingIndex !== null ? ' modifyMode' : ''}`}\n        onClick={() => {\n          if (modifyingIndex !== null) {\n            setModifyingIndex(null)\n            validateSeedWords()\n          }\n        }}\n      >\n        {\n          words.map((w, index) => {\n            return <div\n              className={`importedSeedWord${previewDeletionIndex !== null && previewDeletionIndex <= index ? ' deletable' : ''}${modifyingIndex === index ? ' modifiable' : ''}`}\n              onClick={() => {\n                if (modifyingIndex === null) {\n                  modifyWord(index)\n                }\n              }}\n              key={index}\n            >\n              <span className='index'>{index + 1}</span>\n              <span className='word'>{modifyingIndex === index ? (currentWord) : w}</span>\n              {\n                modifyingIndex === index\n                  ? <span className='modifying'\n                          onClick={(e) => {\n                            e.stopPropagation()\n                            validateModification()\n                          }}>\n                      <FaCheck/>\n                    </span>\n                  : <span className='close'\n                          onClick={(e) => {\n                            deleteWord(index)\n                            e.stopPropagation()\n                            return false\n                          }}\n                          onMouseEnter={() => previewDeletion(index)}\n                          onMouseLeave={cancelPreviewDeletion}>\n                      <FaTimes/>\n                    </span>\n              }\n            </div>\n          })\n        }\n        {\n          // Please someone fixes this in CSS (pixel perfect aligned cols when items not 3 in a row)\n          words.length % 3 !== 0 &&\n          [...Array(3 - words.length % 3)].map(a => {\n            return <span className='empty'></span>\n          })\n        }\n      </div>\n    }\n\n    {\n      (foundAddress && modifyingIndex === null) &&\n      <div className='foundAddressContainer'>\n        <b>Signer Account</b>\n        <div className='address'>{foundAddress}</div>\n        {\n          ((retrievedIdentity === null && possibleRetrievedIdentities === null) && !networkFetchError) &&\n          <Loading />\n        }\n        {\n          networkFetchError &&\n          <div className='error-message networkFetchError'>\n            Network error while getting matching account: {networkFetchError}\n            <Button full small icon={<FaSync />} onClick={checkMatchingIdentity}>Try again</Button>\n          </div>\n        }\n        {\n          possibleRetrievedIdentities\n          ? (\n            <div className='identities-selector'>\n              <p className='notification-hollow info'>\n                <FaInfoCircle /> Multiple wallets found for this signer.\n                Please select the wallet to import.\n              </p>\n              <div className='identities-selector-holder'>\n                {possibleRetrievedIdentities.map(identity => {\n                  return (<div onClick={() => pickPossibleIdentity(identity)}>{identity.id}</div>)\n                })}\n              </div>\n            </div>\n          )\n          : (\n              renderRetrievedIdentityFeedback()\n          )\n        }\n      </div>\n    }\n  </div>\n\n}\n\nexport default ImportSeedWordsForm\n","import accountPresets from 'ambire-common/src/constants/accountPresets'\nimport { Button, TextInput } from 'components/common'\nimport { useRef, useEffect, useState, useCallback } from 'react'\nimport { validateImportedAccountProps } from 'lib/validations/importedAccountValidations'\n\nconst SetSeedWordsPassword = ({ wallet, setError, onAddAccount, hideModal, retrievedIdentity, setModalButtons }) => {\n\n  const [passphrase, setPassphrase] = useState('')\n  const [passphrase2, setPassphrase2] = useState('')\n\n  const textFieldRef = useRef()\n\n  const onValidate = useCallback(async () => {\n\n    if (passphrase.length < 8) {\n      setError('Passphrase should be at least 8 characters')\n      return\n    }\n\n    if (passphrase !== passphrase2) {\n      setError('Passphrases are not matching')\n      return\n    }\n\n    const primaryKeyBackup = JSON.stringify(\n      await wallet.encrypt(passphrase, accountPresets.encryptionOpts)\n    )\n\n    const account = {\n      ...retrievedIdentity,\n      primaryKeyBackup,\n      backupOptout: false,\n      emailConfRequired: false\n      // cloudBackupOptout: TODO : where do we find this data?\n    }\n\n    const validatedFile = validateImportedAccountProps(account)\n\n    if (validatedFile.success) {\n      onAddAccount(account, { select: true })\n      hideModal()\n    } else {\n      setError(validatedFile.message)\n    }\n\n  }, [passphrase, passphrase2, wallet, retrievedIdentity, setError, onAddAccount, hideModal])\n\n  useEffect(() => {\n    setTimeout(() => {\n      textFieldRef?.current?.focus()\n    }, 100)\n  }, [])\n\n  useEffect(() => {\n    setModalButtons([\n      <Button\n        full\n        onClick={onValidate}>\n        Update account\n      </Button>\n    ])\n  }, [onValidate, setModalButtons])\n\n  return (\n    <>\n      <div className='instructions'>\n        Secure your Ambire account with a password\n      </div>\n\n      <TextInput password\n                 className='mb-2'\n                 ref={textFieldRef}\n                 onChange={(v) => setPassphrase(v)}\n                 placeholder='Password'/>\n\n      <TextInput password\n                 onChange={(v) => setPassphrase2(v)}\n                 placeholder='Repeat password'/>\n\n    </>\n  )\n}\n\nexport default SetSeedWordsPassword\n","import { Modal, Stepper } from 'components/common'\nimport { useModals } from 'hooks'\nimport { useState } from 'react'\n\nimport ImportSeedWordsForm from './SubComponents/ImportSeedWordsForm'\nimport SetSeedWordsPassword from './SubComponents/SetSeedWordsPassword'\n\nimport './PaperImportModal.scss'\n\nconst PaperImportModal = ({ accounts, onAddAccount, selectedAccount, relayerURL, newAccount }) => {\n\n  const [modalButtons, setModalButtons] = useState(null)\n  const [foundAddress, setFoundAddress] = useState(null)\n  const [modalSteps, setModalSteps] = useState({\n    steps: [\n      {\n        name: 'Import seed words'\n      },\n      {\n        name: 'Set password'\n      }\n    ], stepIndex: 0\n  })\n\n  const [error, setError] = useState(null)\n  const [wallet, setWallet] = useState(null)\n  const [retrievedIdentity, setRetrievedIdentity] = useState(null)\n\n  const { hideModal } = useModals()\n\n  const getModalTitle = () => {\n    return (<div>\n      <span>Import backup from paper</span>\n      <Stepper steps={modalSteps.steps} currentStep={modalSteps.stepIndex} noLabels={false}/>\n    </div>)\n  }\n\n  return (\n    <Modal id='paper-import-modal' title={getModalTitle()} buttons={modalButtons}>\n      <div>\n        {\n          error && <div className='error-message'>\n            {error}\n          </div>\n        }\n\n        {\n          modalSteps.stepIndex === 0 &&\n          <ImportSeedWordsForm\n            accounts={accounts}\n            foundAddress={foundAddress}\n            hideModal={hideModal}\n            newAccount={newAccount}\n            relayerURL={relayerURL}\n            retrievedIdentity={retrievedIdentity}\n            selectedAccount={selectedAccount}\n            setFoundAddress={setFoundAddress}\n            setError={setError}\n            setModalSteps={setModalSteps}\n            setWallet={setWallet}\n            setRetrievedIdentity={setRetrievedIdentity}\n            setModalButtons={setModalButtons}\n          />\n        }\n\n        {\n          modalSteps.stepIndex === 1 &&\n          <SetSeedWordsPassword\n            newAccount={newAccount}\n            selectedAccount={selectedAccount}\n            wallet={wallet}\n            setError={setError}\n            onAddAccount={onAddAccount}\n            setRetrievedIdentity={setRetrievedIdentity}\n            retrievedIdentity={retrievedIdentity}\n            hideModal={hideModal}\n            setModalButtons={setModalButtons}\n          />\n        }\n      </div>\n    </Modal>\n  )\n}\n\nexport default PaperImportModal\n","import { isFirefox } from 'lib/isFirefox'\n\nconst checkPermissions = async (name, onPrompt) => {\n    let status = false;\n\n    try {\n        const { state } = await navigator.permissions.query({\n            name,\n            allowWithoutGesture: false,\n        })\n        if (state === 'granted') return true\n        if (state === 'prompt') {\n            if (onPrompt) {\n                await onPrompt\n                return checkPermissions(name)\n            } else return false\n        }\n    } catch (e) {\n        console.error('Error while trying to query permissions', e)\n    }\n\n    return status;\n}\n\nconst checkClipboardPermission = (prompt = false) => isFirefox() ? false : prompt ? checkPermissions('clipboard-read', navigator.clipboard.readText()) : checkPermissions('clipboard-read')\nconst checkNotificationPermission = (prompt = false) => prompt ? checkPermissions('notifications', Notification.requestPermission()) : checkPermissions('notifications')\n\nconst askForPermission = async name => {\n    try {\n        if (name === 'clipboard-read') {\n            await navigator.clipboard.readText()\n            return true\n        }\n\n        if (name === 'notifications') {\n            const status = await Notification.requestPermission()\n            return status === 'granted' || status === 'default'\n        }\n\n        return false\n    } catch(e) {\n        console.error(`Permission ${name} blocked`);\n        return false\n    }\n}\n\nexport {\n    askForPermission,\n    checkClipboardPermission,\n    checkNotificationPermission\n}\n","export const popupCenter = ({ url, title, w, h }) => {\n\t// Fixes dual-screen position                             Most browsers      Firefox\n\tconst dualScreenLeft =\n\t\twindow.screenLeft !== undefined ? window.screenLeft : window.screenX\n\tconst dualScreenTop =\n\t\twindow.screenTop !== undefined ? window.screenTop : window.screenY\n\n\tconst width = window.innerWidth\n\t\t? window.innerWidth\n\t\t: document.documentElement.clientWidth\n\t\t? document.documentElement.clientWidth\n\t\t: window.screen.width\n\tconst height = window.innerHeight\n\t\t? window.innerHeight\n\t\t: document.documentElement.clientHeight\n\t\t? document.documentElement.clientHeight\n\t\t: window.screen.height\n\n\tconst systemZoom = width / window.screen.availWidth\n\tconst left = (width - w) / 2 / systemZoom + dualScreenLeft\n\tconst top = (height - h) / 2 / systemZoom + dualScreenTop\n\tconst newWindow = window.open(\n\t\turl,\n\t\ttitle,\n\t\t`\n\t\ttoolbar=no,scrollbars=no,resizable=no\n\t\twidth=${w / systemZoom}, \n\t\theight=${h / systemZoom}, \n\t\ttop=${top}, \n\t\tleft=${left},\n\t\t`\n\t)\n\n\tif (window.focus) newWindow.focus()\n}","import './GnosisSafeApps.scss'\n\nimport { useEffect, useRef, useState } from 'react'\nimport {\n    Skeleton,\n    AmbireLoading\n} from 'components/common'\n\nexport default function GnosisSafeAppIframe({\n    selectedApp = {},\n    title = 'Ambire Plugin',\n    network,\n    selectedAcc,\n    gnosisConnect,\n    gnosisDisconnect,\n    className\n}) {\n\n    const { chainId } = network || {}\n    const { url } = selectedApp || {}\n    const [loading, setLoading] = useState(true)\n    const [hash, setHash] = useState('')\n    const iframeRef = useRef(null);\n\n\n    useEffect(() => {\n        const newHash = url + chainId + selectedAcc\n        setHash(newHash)\n    }, [chainId, selectedAcc, url])\n\n    useEffect(() => {\n        setLoading(true)\n    }, [hash])\n\n    useEffect(() => {\n        gnosisConnect({\n            selectedAcc,\n            iframeRef,\n            app: selectedApp\n        });\n\n        return () => {\n            gnosisDisconnect()\n        }\n\n    }, [selectedApp, network, selectedAcc, iframeRef, gnosisConnect, gnosisDisconnect])\n\n    return (\n        <div id=\"plugin-gnosis-container\" className={className}>\n            {\n                loading &&\n                <div className='iframe-placeholder'>\n                    <Skeleton >\n                        <AmbireLoading />\n                    </Skeleton>\n                </div>\n            }\n\n            {\n                url &&\n                <iframe\n                    id={hash}\n                    key={hash}\n                    ref={iframeRef}\n                    title={title}\n                    src={url}\n                    onLoad={() => setLoading(false)}\n                    style={loading ? { display: 'none' } : {}}\n                />\n            }\n        </div>)\n}\n","export default __webpack_public_path__ + \"static/media/circle.ee8bb2e5.svg\";","import './UnbondModal.scss'\n\nimport { createPortal } from 'react-dom'\nimport { Button } from 'components/common'\nimport { MdOutlineClose } from 'react-icons/md'\nimport Lottie from 'lottie-react'\nimport AnimationData from './assets/animation.json'\nimport Circle from './assets/circle.svg'\n\nconst UnbondModal = ({ isVisible, hideModal, text, onClick }) => {\n  const root = document.getElementById('root')\n  \n  return isVisible ? createPortal(\n    <div id=\"unbond-modal\">\n      <div className='modal'>\n        <div className='content'>\n          <div className='danger-animation-wrapper'>\n            <Lottie className='danger-animation' animationData={AnimationData} background=\"transparent\" speed=\"1\" loop autoplay />\n            <img src={Circle} alt='circle' className='danger-animation-circle'/>\n          </div>\n          <span className='warning-title'>Warning</span>\n          <p className='warning-text'>\n            {text}\n          </p>\n        </div>\n        <div className='buttons'>\n          <Button className='button' danger onClick={onClick}>Yes, Claim anyway</Button>\n          <Button className='button' clear icon={<MdOutlineClose/>} onClick={hideModal}>Close</Button>\n        </div>\n      </div>\n    </div>\n  , root) : null\n}\n\nexport default UnbondModal"],"sourceRoot":""}